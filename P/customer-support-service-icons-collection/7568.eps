%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Ready.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: User
%%CreationDate: 11/10/2017
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.2 x242 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Untitled-2</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-11-10T10:02:42+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-11-10T10:02:42+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-11-10T10:02:42+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AL83bxLsVdirsVdirsVdi&#xA;rsVSy5163ikKRoZabFgaCvt1ymWYB2OLs2chZNK9hqkF2SgBSUCpQ77exycMgk0anSSxc9wjMm4r&#xA;sVdirsVdirsVdirsVdiq15VX3PhikBSadz02w0y4VnqP/McVpsSyDvitL1uP5h9IxpHCrAgioNRg&#xA;YuxV2KuxV2KuxV2KuxV2KuxV2KtMyr1NMVUzcL2FcaZcK36w3gMNLwovTrS/1G4FvaQGWQ9abBR4&#xA;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&#xA;v//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:18d6caa9-9fda-2747-89bd-a9e1a28bc317</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:18d6caa9-9fda-2747-89bd-a9e1a28bc317</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:fa1dfe52-00f5-4546-8850-00635917b244</stRef:instanceID>
            <stRef:documentID>xmp.did:fa1dfe52-00f5-4546-8850-00635917b244</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d6f7b780-4648-114f-879a-0adb796746ae</stEvt:instanceID>
                  <stEvt:when>2017-11-08T20:13:50+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:366b88f4-86c2-f248-9271-5a28b92acfe2</stEvt:instanceID>
                  <stEvt:when>2017-11-09T17:41:27+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fa1dfe52-00f5-4546-8850-00635917b244</stEvt:instanceID>
                  <stEvt:when>2017-11-10T10:02:21+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:18d6caa9-9fda-2747-89bd-a9e1a28bc317</stEvt:instanceID>
                  <stEvt:when>2017-11-10T10:02:42+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.2</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
gsave
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.0196078 .592157 .65098 rgb
f
305.795 292.5 mo
273.018 292.5 li
276.02 289.035 269.994 267.937 269.994 267.937 cv
268.661 265.088 266.421 262.661 263.585 260.884 cv
263.561 251.013 263.501 224.664 263.501 215.71 cv
263.501 186.896 247.418 163.538 227.578 163.538 cv
207.739 163.538 191.656 186.896 191.656 215.71 cv
191.656 224.665 191.656 251.023 191.656 260.891 cv
188.825 262.667 186.587 265.091 185.256 267.937 cv
185.256 267.937 179.231 289.035 182.234 292.5 cv
137.261 292.5 li
133.912 287.952 130.909 283.136 128.289 278.086 cv
128.289 259.893 li
128.289 256.765 126.158 254.229 123.53 254.229 cv
119.291 254.229 li
117.212 245.827 116.111 237.044 116.111 228 cv
116.111 202.905 124.603 179.789 138.866 161.375 cv
144.822 165.966 153.322 168.838 162.757 168.838 cv
166.054 168.838 169.234 168.485 172.233 167.833 cv
189.103 175.649 li
183.709 163.371 li
190.839 159.081 195.376 152.646 195.376 145.45 cv
195.376 138.149 190.709 131.629 183.4 127.34 cv
196.217 122.037 210.267 119.111 225 119.111 cv
238.383 119.111 251.205 121.526 263.048 125.943 cv
262.297 126.779 261.838 127.883 261.838 129.089 cv
261.838 162.62 li
261.838 165.213 263.959 167.334 266.553 167.334 cv
271.322 167.334 li
265.515 179.292 li
285.871 167.334 li
315.275 167.334 li
315.329 167.334 315.382 167.333 315.435 167.331 cv
327.089 184.668 333.889 205.54 333.889 228 cv
333.889 235.704 333.088 243.223 331.567 250.475 cv
324.623 250.481 li
327.313 247.428 328.89 243.758 328.89 239.764 cv
328.89 229.021 317.55 220.313 303.562 220.313 cv
289.574 220.313 278.234 229.021 278.234 239.764 cv
278.234 251.164 286.217 259.223 302.532 259.223 cv
302.873 259.223 303.215 259.22 303.562 259.213 cv
304.306 259.198 305.038 259.152 305.766 259.093 cv
305.795 292.5 li
133.222 224.239 mo
129.613 224.239 126.688 227.164 126.688 230.773 cv
126.688 248.979 li
126.688 252.552 129.584 255.448 133.157 255.448 cv
133.222 255.448 li
131.373 265.002 li
140.476 255.448 li
161.689 255.448 li
165.297 255.448 168.223 252.522 168.223 248.914 cv
168.223 230.773 li
168.223 227.164 165.297 224.239 161.689 224.239 cv
133.222 224.239 li
.0156863 .54902 .623529 rgb
f
319.488 126.977 mo
318.71 125.436 317.111 124.374 315.275 124.374 cv
284.251 124.374 li
260.337 115.427 243.314 92.3688 243.314 65.3335 cv
243.314 30.5293 271.529 2.315 306.333 2.315 cv
338.661 2.315 365.302 26.6549 368.93 58.0092 cv
361.294 58.0132 li
361.294 58.0155 li
360.34 58.0112 li
360.34 58.0112 352.838 50.6577 349.111 48.3941 cv
348.634 48.2613 348.172 48.1333 347.694 48.0005 cv
325.246 47.8237 li
325.246 47.8237 323.957 47.8237 324.255 49.6548 cv
324.404 50.5723 324.996 51.6788 326.576 52.6313 cv
327.057 53.5819 328.097 54.5983 330.156 55.3909 cv
305.486 55.5649 li
302.833 55.5835 300.693 57.1011 300.706 58.9536 cv
300.707 59.022 li
300.715 60.1778 301.559 61.191 302.837 61.7852 cv
303.339 63.2552 305.23 64.3424 307.485 64.3424 cv
307.501 64.3424 307.518 64.3423 307.534 64.3422 cv
321.692 64.2423 li
321.244 64.8127 320.98 65.5264 320.985 66.2993 cv
320.986 66.3667 li
320.996 67.7828 321.906 68.9868 323.186 69.4706 cv
323.42 70.1092 323.847 70.6579 324.399 71.051 cv
323.758 71.5309 323.254 72.3433 323.322 73.7173 cv
323.322 73.7846 li
323.333 75.1847 324.239 76.3759 325.515 76.8577 cv
325.778 77.5859 326.298 78.1978 326.968 78.5951 cv
326.487 79.1941 326.306 79.9947 326.312 80.7408 cv
326.312 80.8002 li
326.321 82.0179 327.186 83.0571 328.413 83.4964 cv
328.783 84.7757 330.126 85.7203 331.721 85.7203 cv
331.731 85.7203 331.741 85.7203 331.751 85.7202 cv
354.459 85.5601 li
355.678 85.5513 362.215 81.5112 363.311 80.9751 cv
365.606 80.9741 li
365.606 82.3687 li
367.022 82.3687 li
360.751 104.755 342.425 122.105 319.488 126.977 cv
255.584 78.7822 mo
254.785 78.7822 254.138 79.4297 254.138 80.2285 cv
254.138 80.8594 li
254.138 81.6582 254.785 82.3057 255.584 82.3057 cv
256.937 82.3057 li
256.937 84.0254 li
256.937 86.0137 258.55 87.6259 260.538 87.6259 cv
278.526 87.6259 li
291.192 87.6259 li
293.458 87.6259 li
295.32 87.6259 296.83 86.0137 296.83 84.0254 cv
296.83 47.3027 li
296.83 45.3135 295.32 43.7021 293.458 43.7021 cv
288.616 43.7021 li
278.526 43.7021 li
260.538 43.7021 li
258.55 43.7021 256.937 45.3144 256.937 47.3027 cv
256.937 50.3125 li
255.584 50.3125 li
254.785 50.3125 254.138 50.96 254.138 51.7578 cv
254.138 52.3896 li
254.138 53.1885 254.785 53.836 255.584 53.836 cv
256.937 53.836 li
256.937 54.1465 li
256.937 57.1192 li
256.937 57.4297 li
255.584 57.4297 li
254.785 57.4297 254.138 58.0772 254.138 58.876 cv
254.138 59.5068 li
254.138 60.3057 254.785 60.9531 255.584 60.9531 cv
256.937 60.9531 li
256.937 61.2636 li
256.937 64.2363 li
256.937 64.5469 li
255.584 64.5469 li
254.785 64.5469 254.138 65.1943 254.138 65.9932 cv
254.138 66.625 li
254.138 67.4228 254.785 68.0703 255.584 68.0703 cv
256.937 68.0703 li
256.937 68.3819 li
256.937 71.3535 li
256.937 71.6651 li
255.584 71.6651 li
254.785 71.6651 254.138 72.3126 254.138 73.1104 cv
254.138 73.7422 li
254.138 74.541 254.785 75.1885 255.584 75.1885 cv
256.937 75.1885 li
256.937 75.499 li
256.937 78.4707 li
256.937 78.7822 li
255.584 78.7822 li
f
82.1665 163.457 mo
78.464 163.457 74.8248 163.176 71.2732 162.635 cv
71.2315 160.582 70.1917 158.886 68.8298 158.5 cv
68.2956 157.251 67.3334 156.418 66.2398 156.418 cv
66.2347 156.418 66.2297 156.418 66.2246 156.418 cv
66.1631 156.418 li
64.4961 156.43 63.1582 158.375 63.1748 160.763 cv
63.1759 160.918 li
32.7444 152.591 10.3765 124.74 10.3765 91.6665 cv
10.3765 79.62 13.345 68.264 18.5883 58.2945 cv
84.1611 58.2945 li
84.1611 57.0586 li
86.2328 57.0586 li
86.2328 57.0483 li
87.1529 57.5029 92.1191 60.562 93.7876 61.0801 cv
92.813 66.4658 92.7807 69.9853 92.813 71.4399 cv
92.913 76.0215 94.1275 79.1191 96.4912 81.3301 cv
96.4912 97.0918 li
104.746 97.0918 li
107.761 100.152 li
107.908 100.304 108.103 100.38 108.298 100.38 cv
108.493 100.38 108.688 100.304 108.835 100.152 cv
111.312 97.5898 li
111.459 97.4382 111.654 97.3624 111.849 97.3624 cv
112.044 97.3624 112.239 97.4382 112.386 97.5898 cv
114.865 100.152 li
115.012 100.304 115.206 100.38 115.401 100.38 cv
115.596 100.38 115.791 100.304 115.938 100.152 cv
118.417 97.5898 li
118.563 97.4382 118.758 97.3624 118.953 97.3624 cv
119.148 97.3624 119.343 97.4382 119.49 97.5898 cv
121.968 100.152 li
122.115 100.304 122.31 100.38 122.505 100.38 cv
122.7 100.38 122.895 100.304 123.042 100.152 cv
125.52 97.5898 li
125.667 97.4382 125.862 97.3624 126.057 97.3624 cv
126.252 97.3624 126.447 97.4382 126.594 97.5898 cv
129.071 100.152 li
129.218 100.304 129.413 100.38 129.609 100.38 cv
129.804 100.38 129.999 100.304 130.145 100.152 cv
132.624 97.5898 li
132.771 97.4382 132.966 97.3624 133.16 97.3624 cv
133.355 97.3624 133.55 97.4382 133.697 97.5898 cv
136.176 100.152 li
136.322 100.304 136.517 100.38 136.712 100.38 cv
136.907 100.38 137.102 100.304 137.249 100.152 cv
139.727 97.5898 li
139.874 97.4382 140.069 97.3624 140.264 97.3624 cv
140.459 97.3624 140.655 97.4382 140.801 97.5898 cv
143.279 100.152 li
143.426 100.304 143.621 100.38 143.816 100.38 cv
144.011 100.38 144.206 100.304 144.353 100.152 cv
146.831 97.5898 li
146.977 97.4382 147.172 97.3624 147.368 97.3624 cv
147.563 97.3624 147.758 97.4382 147.905 97.5898 cv
150.383 100.152 li
150.53 100.304 150.725 100.38 150.92 100.38 cv
151.115 100.38 151.309 100.304 151.456 100.152 cv
153.695 97.8375 li
152.845 107.825 149.95 117.228 145.431 125.629 cv
136.383 129.705 130.322 136.877 130.142 145.073 cv
117.427 156.503 100.609 163.457 82.1665 163.457 cv
60.0317 151.252 mo
59.1641 151.252 58.4609 151.956 58.4609 152.824 cv
58.4609 152.856 li
58.4609 153.724 59.1641 154.427 60.0317 154.427 cv
65.7163 154.427 li
66.3877 154.427 66.9507 154.003 67.1762 153.411 cv
78.705 152.41 82.1314 145.123 83.1499 140.967 cv
84.4272 140.69 85.4174 139.661 85.6455 138.366 cv
88.1884 137.708 90.1143 134.626 90.1143 130.916 cv
90.1143 127.116 88.0942 123.979 85.4609 123.426 cv
85.0967 122.531 84.3418 121.848 83.4106 121.561 cv
83.0283 117.86 82.0152 113.965 79.8334 110.586 cv
76.106 104.813 69.8281 101.847 61.2197 101.847 cv
52.6118 101.847 46.3335 104.813 42.607 110.586 cv
40.4253 113.965 39.4122 117.86 39.0298 121.562 cv
38.0986 121.849 37.3442 122.531 36.9805 123.426 cv
34.3472 123.979 32.3272 127.116 32.3272 130.916 cv
32.3272 134.626 34.2529 137.708 36.7959 138.366 cv
37.0634 139.886 38.3833 141.044 39.9804 141.044 cv
40.0454 141.044 li
40.6036 141.044 41.1201 140.89 41.5786 140.642 cv
41.5786 122.408 li
41.8931 119.001 42.7646 115.431 44.727 112.413 cv
47.9522 107.456 53.5132 104.914 61.2197 104.914 cv
68.9263 104.914 74.4878 107.456 77.7128 112.413 cv
79.6786 115.436 80.5498 119.014 80.8628 122.426 cv
80.8628 140.642 li
81.1265 140.785 81.4112 140.891 81.7099 140.96 cv
80.7461 144.77 77.5586 151.088 67.0029 151.972 cv
66.7212 151.548 66.2636 151.252 65.7163 151.252 cv
60.0317 151.252 li
150.92 99.2268 mo
150.725 99.2268 150.53 99.1508 150.383 98.999 cv
147.905 96.4365 li
147.758 96.2849 147.563 96.2091 147.368 96.2091 cv
147.172 96.2091 146.977 96.2849 146.831 96.4365 cv
144.353 98.999 li
144.206 99.1508 144.011 99.2268 143.816 99.2268 cv
143.621 99.2268 143.426 99.1508 143.279 98.999 cv
140.801 96.4365 li
140.655 96.2849 140.459 96.2091 140.264 96.2091 cv
140.069 96.2091 139.874 96.2849 139.727 96.4365 cv
137.249 98.999 li
137.102 99.1508 136.907 99.2268 136.712 99.2268 cv
136.517 99.2268 136.322 99.1508 136.176 98.999 cv
133.697 96.4365 li
133.55 96.2849 133.355 96.2091 133.16 96.2091 cv
132.966 96.2091 132.771 96.2849 132.624 96.4365 cv
130.145 98.999 li
129.999 99.1508 129.804 99.2268 129.609 99.2268 cv
129.413 99.2268 129.218 99.1508 129.071 98.999 cv
126.594 96.4365 li
126.447 96.2849 126.252 96.2091 126.057 96.2091 cv
125.862 96.2091 125.667 96.2849 125.52 96.4365 cv
123.042 98.999 li
122.895 99.1508 122.7 99.2268 122.505 99.2268 cv
122.31 99.2268 122.115 99.1508 121.968 98.999 cv
119.49 96.4365 li
119.343 96.2849 119.148 96.2091 118.953 96.2091 cv
118.758 96.2091 118.563 96.2849 118.417 96.4365 cv
115.938 98.999 li
115.791 99.1508 115.596 99.2268 115.401 99.2268 cv
115.206 99.2268 115.012 99.1508 114.865 98.999 cv
112.386 96.4365 li
112.239 96.2849 112.044 96.2091 111.849 96.2091 cv
111.654 96.2091 111.459 96.2849 111.312 96.4365 cv
108.835 98.999 li
108.688 99.1508 108.493 99.2268 108.298 99.2268 cv
108.103 99.2268 107.908 99.1508 107.761 98.999 cv
105.06 96.206 li
105.055 96.206 li
105.055 96.1919 li
97.3911 96.1919 li
97.3911 82.0961 li
97.706 82.3345 98.0229 82.5713 98.371 82.7866 cv
98.3696 82.793 li
98.2325 83.1264 98.3623 83.4951 98.6597 83.6167 cv
105.175 86.2827 li
105.24 86.3093 105.308 86.322 105.375 86.322 cv
105.618 86.322 105.859 86.1582 105.967 85.8945 cv
113.539 67.3916 li
113.676 67.0547 113.545 66.6826 113.245 66.56 cv
106.735 63.896 li
106.67 63.8693 106.602 63.8566 106.534 63.8566 cv
106.291 63.8566 106.05 64.0202 105.943 64.2842 cv
105.874 64.4532 li
105.543 63.6249 105.342 62.5249 105.247 61.2554 cv
111.928 61.3115 li
111.937 61.3115 111.947 61.3116 111.956 61.3116 cv
113.638 61.3116 115.005 60.1426 115.016 58.6909 cv
115.017 58.6372 li
115.025 57.4633 114.521 56.1398 112.952 55.9023 cv
112.945 55.8689 112.938 55.8354 112.931 55.8021 cv
112.959 55.6401 112.973 55.5725 113.014 55.3442 cv
114.579 55.3555 li
114.587 55.3556 114.596 55.3556 114.604 55.3556 cv
116.306 55.3556 117.69 54.0335 117.702 52.3926 cv
117.703 52.332 li
117.801 50.3561 116.581 49.6734 115.648 49.4395 cv
115.595 49.1625 115.509 48.9214 115.399 48.7119 cv
116.681 48.7227 li
116.689 48.7227 116.697 48.7228 116.705 48.7228 cv
118.405 48.7228 119.789 47.3887 119.802 45.7334 cv
119.803 45.6729 li
119.813 44.3307 118.918 43.1875 117.674 42.7887 cv
117.587 42.5075 117.46 42.2436 117.298 42.0034 cv
118.194 42.0098 li
118.201 42.0099 118.208 42.0099 118.215 42.0099 cv
119.699 42.0099 120.905 40.8062 120.905 39.3184 cv
120.905 38.439 li
120.905 37.2096 120.026 36.185 118.86 35.9623 cv
118.639 34.8035 117.624 33.9257 116.401 33.918 cv
115.773 33.9138 115.093 33.909 114.385 33.9037 cv
115.73 32.205 117.106 30.7401 118.387 29.6701 cv
139.666 42.1286 153.957 65.2286 153.957 91.6665 cv
153.957 93.3194 153.901 94.9603 153.791 96.5853 cv
151.456 98.999 li
151.309 99.1508 151.115 99.2268 150.92 99.2268 cv
68.2831 37.0527 mo
35.569 37.0527 li
48.1093 26.3425 64.3823 19.8765 82.1665 19.8765 cv
89.199 19.8765 95.995 20.8876 102.418 22.7724 cv
100.82 22.7724 li
98.856 22.7724 89.8637 29.5122 89.6221 29.8526 cv
85.0987 36.2222 li
84.2324 36.2258 li
84.2324 36.1523 li
68.2831 36.1523 li
68.2831 37.0527 li
103.462 32.9287 mo
103.328 32.4219 103.312 31.9882 103.533 31.7779 cv
104.042 31.77 li
103.85 32.1464 103.656 32.5385 103.462 32.9287 cv
107.954 24.8301 mo
107.983 24.7725 li
104.879 24.7725 li
105.093 24.3905 105.29 24.038 105.456 23.7386 cv
106.326 24.0366 107.192 24.3525 108.046 24.6826 cv
108.016 24.7314 107.985 24.7809 107.954 24.8301 cv
f
385.567 195.127 mo
362.53 193.907 344.228 174.841 344.228 151.5 cv
344.228 127.371 363.788 107.811 387.917 107.811 cv
412.045 107.811 431.605 127.371 431.605 151.5 cv
431.605 166.273 424.274 179.332 413.051 187.239 cv
413.051 185.764 li
409.348 185.764 li
409.348 182.913 li
409.307 182.913 li
409.307 177.945 li
409.313 177.945 li
409.403 176.886 409.816 175.439 410.244 174.166 cv
410.96 172.038 411.325 169.811 411.302 167.564 cv
411.239 161.358 410.996 152.291 411.031 152.064 cv
410.814 131.302 li
410.814 131.302 410.683 130.648 409.715 130.648 cv
409.475 130.648 409.183 130.688 408.829 130.788 cv
408.814 129.302 li
408.814 129.302 408.683 128.648 407.715 128.648 cv
407.444 128.648 407.107 128.699 406.689 128.83 cv
404.812 129.419 403.446 131.088 402.442 133.205 cv
402.442 124.52 li
402.442 123.536 401.644 122.738 400.659 122.738 cv
370.481 122.738 li
369.497 122.738 368.699 123.536 368.699 124.52 cv
368.699 126.001 li
365.809 123.763 li
364.543 122.641 363.049 122.055 361.751 122.055 cv
360.801 122.055 359.956 122.369 359.383 123.016 cv
359.334 123.071 li
357.977 124.603 358.652 127.418 360.844 129.361 cv
361.766 130.18 li
362.069 130.595 362.429 130.994 362.844 131.361 cv
368.699 136.554 li
368.699 137.827 li
367.598 137.146 366.555 136.825 365.631 136.825 cv
364.615 136.825 363.745 137.214 363.102 137.939 cv
363.049 137.999 li
362.914 138.175 li
362.167 139.166 362.102 140.59 362.694 141.985 cv
363.278 143.364 366.588 146.712 368.461 148.049 cv
368.699 148.196 li
368.699 148.814 li
367.664 148.163 366.683 147.861 365.813 147.861 cv
364.833 147.861 363.994 148.244 363.375 148.941 cv
363.324 148.998 li
363.196 149.166 li
362.485 150.108 362.423 151.464 362.986 152.793 cv
363.543 154.105 366.693 157.293 368.477 158.565 cv
368.699 158.703 li
368.699 159.427 li
367.76 158.865 366.854 158.591 366.051 158.591 cv
365.195 158.591 364.455 158.903 363.915 159.512 cv
363.87 159.563 li
363.754 159.714 li
363.113 160.564 363.058 161.785 363.565 162.983 cv
364.066 164.165 366.906 167.037 368.512 168.185 cv
368.699 168.301 li
368.699 172.907 li
368.699 173.892 369.497 174.689 370.481 174.689 cv
376.729 174.689 li
379.843 177.213 382.491 179.357 382.491 179.357 cv
382.886 179.707 384.709 180.695 387.005 181.852 cv
387 185.764 li
385.567 185.764 li
385.567 195.127 li
f
273.018 292.5 mo
182.234 292.5 li
179.231 289.035 185.256 267.937 185.256 267.937 cv
186.587 265.091 188.825 262.667 191.656 260.891 cv
191.656 251.023 191.656 224.665 191.656 215.71 cv
191.656 186.896 207.739 163.538 227.578 163.538 cv
247.418 163.538 263.501 186.896 263.501 215.71 cv
263.501 224.664 263.561 251.013 263.585 260.884 cv
266.421 262.661 268.661 265.088 269.994 267.937 cv
269.994 267.937 276.02 289.035 273.018 292.5 cv
.0117647 .356863 .407843 rgb
f
261.595 262.686 mo
261.595 262.686 261.501 224.813 261.501 213.71 cv
261.501 184.896 245.418 161.538 225.579 161.538 cv
205.739 161.538 189.656 184.896 189.656 213.71 cv
189.656 224.813 189.656 262.686 189.656 262.686 cv
261.595 262.686 li
cp
.498039 .32549 .105882 rgb
f
233.934 234.305 mo
226.424 234.305 li
224.827 234.305 li
217.316 234.305 li
217.316 234.305 219.854 252.422 207.767 267.4 cv
224.827 294.933 li
226.424 294.933 li
243.483 267.4 li
231.396 252.422 233.934 234.305 233.934 234.305 cv
cp
.988235 .752941 .513726 rgb
f
207.938 267.679 mo
224.827 294.933 li
226.424 294.933 li
243.313 267.679 li
207.938 267.679 li
cp
.831373 .254902 .00784314 rgb
f
233.934 234.305 mo
226.424 234.305 li
224.827 234.305 li
217.316 234.305 li
217.316 234.305 217.643 236.664 217.499 240.375 cv
220.346 242.168 223.224 243.267 225.531 243.267 cv
227.899 243.267 230.844 242.099 233.745 240.215 cv
233.616 236.597 233.934 234.305 233.934 234.305 cv
cp
.909804 .666667 .388235 rgb
f
253.048 200.063 mo
252.244 197.988 250.838 199.06 249.743 200.428 cv
250.058 184.318 241.552 176.138 241.552 176.138 cv
225.579 170.868 li
209.605 176.138 li
209.605 176.138 201.043 184.3 201.316 200.31 cv
200.236 199.002 198.89 198.049 198.109 200.063 cv
196.657 203.809 200.069 208.94 199.416 214.141 cv
198.974 217.658 201.749 217.304 203.504 216.322 cv
204.166 218.981 205.147 222.119 206.727 225.792 cv
210.067 233.559 219.65 240.632 225.531 240.632 cv
231.412 240.632 240.856 233.503 244.336 225.792 cv
245.936 222.248 246.935 219.305 247.569 216.278 cv
249.319 217.294 252.189 217.713 251.741 214.141 cv
251.088 208.94 254.501 203.809 253.048 200.063 cv
cp
.988235 .752941 .513726 rgb
f
243.365 174.299 mo
236.569 176.065 li
237.461 177.727 242.003 183.261 244.508 190.007 cv
246.856 196.331 247.215 203.718 246.972 209.98 cv
248.21 207.87 li
249.983 204.849 251.054 201.482 251.374 197.993 cv
252.246 188.511 252.718 170.674 243.365 174.299 cv
cp
.498039 .32549 .105882 rgb
f
202.947 207.87 mo
204.186 209.98 li
203.943 203.718 204.301 196.331 206.649 190.007 cv
209.154 183.261 213.696 177.727 214.587 176.065 cv
207.792 174.299 li
198.439 170.674 198.911 188.511 199.783 197.993 cv
200.104 201.482 201.174 204.849 202.947 207.87 cv
cp
f
225.579 170.906 mo
201.876 165.549 199.619 190.737 199.619 190.737 cv
219.469 195.542 224.439 184.821 225.579 177.36 cv
226.719 184.821 231.688 195.542 251.538 190.737 cv
251.538 190.737 249.282 165.549 225.579 170.906 cv
cp
f
202.383 200.688 mo
202.211 194.16 202.887 186.11 206.235 179.763 cv
210.018 172.596 216.539 168.921 225.578 168.921 cv
234.616 168.921 241.138 172.596 244.921 179.763 cv
248.269 186.11 248.945 194.16 248.773 200.688 cv
251.8 200.688 li
252.011 193.47 251.248 184.453 247.407 177.122 cv
243.036 168.775 235.674 164.487 225.578 164.487 cv
215.482 164.487 208.119 168.775 203.748 177.122 cv
199.908 184.453 199.145 193.47 199.355 200.688 cv
202.383 200.688 li
cp
.286275 .32549 .360784 rgb
f
200.765 198.562 mo
200.125 198.257 199.44 198.084 198.725 198.084 cv
195.253 198.084 192.44 201.979 192.44 206.784 cv
192.44 211.588 195.253 215.482 198.725 215.482 cv
199.44 215.482 200.125 215.309 200.765 215.005 cv
200.765 198.562 li
cp
f
203.05 196.335 mo
202.525 196.049 201.932 195.874 201.293 195.874 cv
201.218 195.874 li
199.164 195.874 197.5 197.538 197.5 199.59 cv
197.5 214.683 li
197.5 216.736 199.164 218.4 201.218 218.4 cv
201.293 218.4 li
201.932 218.4 202.525 218.224 203.05 217.939 cv
203.05 196.335 li
cp
1 1 1 rgb
f
251.224 215.006 mo
249.56 215.003 li
249.559 215.625 249.313 229.502 232.211 230.935 cv
231.887 230.448 231.362 230.108 230.735 230.108 cv
224.215 230.108 li
223.22 230.108 222.413 230.915 222.413 231.91 cv
222.413 231.947 li
222.413 232.942 223.22 233.75 224.215 233.75 cv
230.735 233.75 li
231.505 233.75 232.15 233.263 232.409 232.584 cv
250.955 230.976 251.224 215.174 251.224 215.006 cv
cp
.286275 .32549 .360784 rgb
f
250.393 198.562 mo
251.032 198.257 251.717 198.084 252.433 198.084 cv
255.903 198.084 258.718 201.979 258.718 206.784 cv
258.718 211.588 255.903 215.482 252.433 215.482 cv
251.717 215.482 251.032 215.309 250.393 215.005 cv
250.393 198.562 li
cp
f
248.106 196.335 mo
248.632 196.049 249.225 195.874 249.865 195.874 cv
249.939 195.874 li
251.993 195.874 253.657 197.538 253.657 199.59 cv
253.657 214.683 li
253.657 216.736 251.993 218.4 249.939 218.4 cv
249.865 218.4 li
249.225 218.4 248.632 218.224 248.106 217.939 cv
248.106 196.335 li
cp
1 1 1 rgb
f
267.994 265.937 mo
265.807 261.262 261.185 257.714 255.482 256.33 cv
235.553 251.869 li
225.579 289.038 li
215.594 251.869 li
195.769 256.33 li
190.066 257.714 185.443 261.262 183.256 265.937 cv
183.256 265.937 176.692 288.922 180.681 290.851 cv
188.096 294.436 196.118 296.596 204.305 297.494 cv
218.476 299.049 232.775 299.049 246.945 297.494 cv
255.133 296.596 263.155 294.436 270.57 290.851 cv
274.559 288.922 267.994 265.937 267.994 265.937 cv
cp
.286275 .32549 .360784 rgb
f
253.411 279.772 mo
236.569 279.772 li
236.569 276.095 li
253.411 276.095 li
253.411 279.772 li
cp
.831373 .254902 .00784314 rgb
f
138.866 161.375 mo
133.45 157.199 130.138 151.602 130.138 145.45 cv
130.138 145.324 130.139 145.198 130.142 145.073 cv
136.291 139.545 141.482 132.97 145.431 125.629 cv
150.451 123.368 156.39 122.061 162.757 122.061 cv
170.59 122.061 177.777 124.04 183.4 127.34 cv
165.733 134.649 150.41 146.472 138.866 161.375 cv
.0156863 .388235 .423529 rgb
f
189.103 175.649 mo
172.233 167.833 li
169.234 168.485 166.054 168.838 162.757 168.838 cv
153.322 168.838 144.822 165.966 138.866 161.375 cv
150.41 146.472 165.733 134.649 183.4 127.34 cv
190.709 131.629 195.376 138.149 195.376 145.45 cv
195.376 152.646 190.839 159.081 183.709 163.371 cv
189.103 175.649 li
.0117647 .356863 .407843 rgb
f
130.142 145.073 mo
130.322 136.877 136.383 129.705 145.431 125.629 cv
141.482 132.97 136.291 139.545 130.142 145.073 cv
f
160.757 120.061 mo
178.771 120.061 193.375 130.532 193.375 143.45 cv
193.375 150.646 188.839 157.081 181.709 161.371 cv
187.103 173.649 li
170.233 165.833 li
167.234 166.485 164.054 166.838 160.757 166.838 cv
142.742 166.838 128.138 156.367 128.138 143.45 cv
128.138 130.532 142.742 120.061 160.757 120.061 cv
cp
1 .8 .2 rgb
f
157.534 156.631 mo
152.831 150.54 li
152.746 150.429 152.586 150.408 152.475 150.494 cv
150.065 152.354 li
149.955 152.44 149.935 152.599 150.02 152.71 cv
150.063 152.766 li
148.383 152.619 145.352 150.513 143.566 148.237 cv
141.816 145.933 140.546 142.468 140.829 140.806 cv
140.872 140.861 li
140.958 140.972 141.118 140.993 141.228 140.907 cv
143.638 139.046 li
143.749 138.961 143.769 138.802 143.684 138.691 cv
138.981 132.599 li
138.895 132.488 138.736 132.468 138.625 132.553 cv
136.213 134.416 li
136.104 134.5 136.083 134.658 136.167 134.768 cv
136.169 134.77 li
134.892 136.097 134.461 137.639 134.91 139.826 cv
135.134 140.918 135.702 145.291 140.051 150.945 cv
144.42 156.583 148.513 158.247 149.513 158.741 cv
151.515 159.729 153.116 159.701 154.723 158.802 cv
154.725 158.804 li
154.809 158.914 154.967 158.934 155.077 158.849 cv
157.488 156.987 li
157.599 156.901 157.62 156.742 157.534 156.631 cv
cp
1 1 1 rgb
f
157.391 132.383 mo
157.391 134.445 155.3 135.455 153.336 136.867 cv
157.5 136.867 li
157.5 139.205 li
149.613 139.205 li
149.613 138.541 li
149.613 137.503 150.166 136.769 150.942 136.078 cv
153.101 134.154 154.65 133.379 154.65 132.479 cv
154.65 131.954 154.304 131.469 153.46 131.469 cv
152.603 131.469 152.118 132.023 152.118 132.77 cv
152.118 133.046 li
149.655 133.046 li
149.641 132.936 149.641 132.839 149.641 132.742 cv
149.641 130.791 150.997 129.518 153.723 129.518 cv
155.978 129.518 157.391 130.653 157.391 132.383 cv
cp
f
163.853 129.518 mo
163.646 131.027 161.694 133.877 160.38 135.22 cv
163.12 135.22 li
163.12 133.24 li
163.59 132.562 164.379 131.22 164.573 130.432 cv
165.749 130.432 li
165.749 135.22 li
167.077 135.22 li
167.077 137.253 li
165.749 137.253 li
165.749 139.205 li
163.12 139.205 li
163.12 137.253 li
158.484 137.253 li
158.484 135.192 li
159.383 133.877 160.518 131.69 161.141 129.518 cv
163.853 129.518 li
cp
f
170.013 139.869 mo
168.325 139.869 li
170.539 129.02 li
172.214 129.02 li
170.013 139.869 li
cp
f
181.625 130.943 mo
179.868 133.116 178.235 135.579 178.235 138.388 cv
178.235 139.205 li
175.164 139.205 li
175.164 136.576 176.436 134.084 178.166 132.064 cv
173.6 132.064 li
173.6 129.684 li
181.625 129.684 li
181.625 130.943 li
cp
f
158.979 145.44 mo
158.979 145.516 li
157.679 145.516 li
157.679 145.491 li
157.679 145.264 157.522 145.05 157.12 145.05 cv
156.736 145.05 156.549 145.183 156.549 145.333 cv
156.549 145.98 159.066 145.471 159.098 147.073 cv
159.098 148.146 158.281 148.58 157.195 148.58 cv
155.983 148.58 155.06 148.272 155.06 147.041 cv
156.373 147.041 li
156.373 147.506 156.643 147.588 157.07 147.588 cv
157.321 147.588 157.679 147.569 157.679 147.299 cv
157.679 146.677 155.13 147.174 155.13 145.491 cv
155.13 144.485 156.046 144.109 157.07 144.109 cv
158.112 144.109 158.959 144.517 158.979 145.44 cv
cp
f
164.09 146.765 mo
164.09 147.958 163.298 148.58 161.942 148.58 cv
160.586 148.58 159.789 147.958 159.789 146.765 cv
159.789 144.184 li
161.176 144.184 li
161.176 146.747 li
161.176 147.21 161.428 147.543 161.937 147.543 cv
162.445 147.543 162.702 147.21 162.702 146.747 cv
162.702 144.184 li
164.09 144.184 li
164.09 146.765 li
cp
f
166.407 145.208 mo
166.407 146.1 li
166.979 146.1 li
167.273 146.1 167.418 145.937 167.418 145.679 cv
167.418 145.628 li
167.418 145.371 167.28 145.208 166.979 145.208 cv
166.407 145.208 li
cp
167.443 144.184 mo
168.259 144.184 168.824 144.788 168.824 145.603 cv
168.824 145.685 li
168.824 146.501 168.259 147.11 167.443 147.11 cv
166.407 147.11 li
166.407 148.504 li
165.019 148.504 li
165.019 144.184 li
167.443 144.184 li
cp
f
170.941 145.208 mo
170.941 146.1 li
171.512 146.1 li
171.807 146.1 171.952 145.937 171.952 145.679 cv
171.952 145.628 li
171.952 145.371 171.813 145.208 171.512 145.208 cv
170.941 145.208 li
cp
171.977 144.184 mo
172.793 144.184 173.358 144.788 173.358 145.603 cv
173.358 145.685 li
173.358 146.501 172.793 147.11 171.977 147.11 cv
170.941 147.11 li
170.941 148.504 li
169.553 148.504 li
169.553 144.184 li
171.977 144.184 li
cp
f
175.324 146.144 mo
175.324 146.545 li
175.324 147.135 175.625 147.543 176.234 147.543 cv
176.843 147.543 177.151 147.135 177.151 146.545 cv
177.151 146.144 li
177.151 145.553 176.843 145.146 176.234 145.146 cv
175.625 145.146 175.324 145.553 175.324 146.144 cv
cp
178.571 146.344 mo
178.571 147.819 177.709 148.58 176.234 148.58 cv
174.759 148.58 173.905 147.819 173.905 146.344 cv
173.905 144.869 174.759 144.109 176.234 144.109 cv
177.709 144.109 178.571 144.869 178.571 146.344 cv
cp
f
181.616 145.17 mo
180.705 145.17 li
180.705 145.968 li
181.616 145.968 li
181.83 145.968 182.006 145.797 182.006 145.566 cv
182.006 145.333 181.83 145.17 181.616 145.17 cv
cp
182.583 146.696 mo
183.543 148.504 li
181.987 148.504 li
181.22 146.928 li
180.705 146.928 li
180.705 148.504 li
179.317 148.504 li
179.317 144.184 li
181.962 144.184 li
182.922 144.184 183.418 144.805 183.418 145.509 cv
183.418 146.011 183.142 146.488 182.583 146.696 cv
cp
f
188.046 145.29 mo
186.634 145.29 li
186.634 148.504 li
185.246 148.504 li
185.246 145.29 li
183.827 145.29 li
183.827 144.184 li
188.046 144.184 li
188.046 145.29 li
cp
f
128.228 292.5 mo
102.831 292.5 li
102.791 292.205 102.77 291.902 102.77 291.594 cv
102.77 259.893 li
102.77 257.472 104.049 255.41 105.846 254.6 cv
105.846 245.749 li
105.846 244.256 107.056 243.046 108.548 243.046 cv
109.234 243.046 li
110.727 243.046 111.937 244.256 111.937 245.749 cv
111.937 254.229 li
119.291 254.229 li
121.362 262.603 124.405 270.602 128.289 278.086 cv
128.289 291.594 li
128.289 291.902 128.268 292.205 128.228 292.5 cv
.0156863 .388235 .423529 rgb
f
128.289 278.086 mo
124.405 270.602 121.362 262.603 119.291 254.229 cv
123.53 254.229 li
126.158 254.229 128.289 256.765 128.289 259.893 cv
128.289 278.086 li
.0117647 .356863 .407843 rgb
f
131.373 265.002 mo
133.222 255.448 li
133.157 255.448 li
129.584 255.448 126.688 252.552 126.688 248.979 cv
126.688 230.773 li
126.688 227.164 129.613 224.239 133.222 224.239 cv
161.689 224.239 li
165.297 224.239 168.223 227.164 168.223 230.773 cv
168.223 248.914 li
168.223 252.522 165.297 255.448 161.689 255.448 cv
140.476 255.448 li
131.373 265.002 li
f
121.53 252.229 mo
109.937 252.229 li
109.937 243.749 li
109.937 242.256 108.727 241.046 107.234 241.046 cv
106.548 241.046 li
105.056 241.046 103.846 242.256 103.846 243.749 cv
103.846 252.6 li
102.049 253.41 100.77 255.472 100.77 257.893 cv
100.77 289.594 li
100.77 292.722 102.9 295.257 105.528 295.257 cv
121.53 295.257 li
124.158 295.257 126.289 292.722 126.289 289.594 cv
126.289 257.893 li
126.289 254.765 124.158 252.229 121.53 252.229 cv
cp
.286275 .32549 .360784 rgb
f
109.032 278.537 mo
104.884 278.537 li
104.884 274.916 li
109.032 274.916 li
109.032 278.537 li
cp
1 1 1 rgb
f
115.604 278.537 mo
111.455 278.537 li
111.455 274.916 li
115.604 274.916 li
115.604 278.537 li
cp
f
122.174 278.537 mo
118.026 278.537 li
118.026 274.916 li
122.174 274.916 li
122.174 278.537 li
cp
f
109.032 283.865 mo
104.884 283.865 li
104.884 280.242 li
109.032 280.242 li
109.032 283.865 li
cp
f
115.604 283.865 mo
111.455 283.865 li
111.455 280.242 li
115.604 280.242 li
115.604 283.865 li
cp
f
122.174 283.865 mo
118.026 283.865 li
118.026 280.242 li
122.174 280.242 li
122.174 283.865 li
cp
f
109.032 289.192 mo
104.884 289.192 li
104.884 285.57 li
109.032 285.57 li
109.032 289.192 li
cp
f
115.604 289.192 mo
111.455 289.192 li
111.455 285.57 li
115.604 285.57 li
115.604 289.192 li
cp
f
122.174 289.192 mo
118.026 289.192 li
118.026 285.57 li
122.174 285.57 li
122.174 289.192 li
cp
f
122.174 270.648 mo
104.884 270.648 li
104.884 258.2 li
122.174 258.2 li
122.174 270.648 li
cp
1 .8 .2 rgb
f
159.688 222.239 mo
131.222 222.239 li
127.613 222.239 124.688 225.164 124.688 228.772 cv
124.688 246.98 li
124.688 250.552 127.584 253.448 131.157 253.448 cv
131.222 253.448 li
129.373 263.002 li
138.476 253.448 li
159.688 253.448 li
163.297 253.448 166.223 250.522 166.223 246.914 cv
166.223 228.772 li
166.223 225.164 163.297 222.239 159.688 222.239 cv
cp
f
149.856 250.01 mo
142.93 250.01 li
142.93 243.538 li
149.856 243.538 li
149.856 250.01 li
cp
155.312 232.658 mo
155.312 237.417 149.331 238.815 149.331 240.67 cv
149.331 241.404 li
143.349 241.404 li
143.349 239.655 li
143.349 237.102 147.897 235.633 147.897 232.799 cv
147.897 231.505 147.058 230.35 145.589 230.35 cv
143.699 230.35 143.314 231.818 143.314 233.288 cv
143.314 233.604 143.314 233.918 143.349 234.232 cv
136.913 234.232 li
136.877 233.778 136.808 233.357 136.808 232.903 cv
136.808 228.356 140.866 225.523 146.357 225.523 cv
151.709 225.523 155.312 228.321 155.312 232.658 cv
cp
1 1 1 rgb
f
315.435 167.331 mo
302.83 148.578 284.548 133.961 263.048 125.943 cv
263.913 124.981 265.165 124.374 266.553 124.374 cv
284.251 124.374 li
291.122 126.945 298.565 128.352 306.333 128.352 cv
310.845 128.352 315.244 127.878 319.488 126.977 cv
319.809 127.613 319.99 128.331 319.99 129.089 cv
319.99 162.62 li
319.99 165.159 317.956 167.246 315.435 167.331 cv
.0156863 .388235 .423529 rgb
f
265.515 179.292 mo
271.322 167.334 li
266.553 167.334 li
263.959 167.334 261.838 165.213 261.838 162.62 cv
261.838 129.089 li
261.838 127.883 262.297 126.779 263.048 125.943 cv
284.548 133.961 302.83 148.578 315.435 167.331 cv
315.382 167.333 315.329 167.334 315.275 167.334 cv
285.871 167.334 li
265.515 179.292 li
.0117647 .356863 .407843 rgb
f
306.333 128.352 mo
298.565 128.352 291.122 126.945 284.251 124.374 cv
315.275 124.374 li
317.111 124.374 318.71 125.436 319.488 126.977 cv
315.244 127.878 310.845 128.352 306.333 128.352 cv
f
283.871 165.334 mo
263.515 177.292 li
269.322 165.334 li
264.553 165.334 li
261.959 165.334 259.838 163.213 259.838 160.62 cv
259.838 127.089 li
259.838 124.495 261.959 122.374 264.553 122.374 cv
313.275 122.374 li
315.869 122.374 317.99 124.495 317.99 127.089 cv
317.99 160.62 li
317.99 163.213 315.869 165.334 313.275 165.334 cv
283.871 165.334 li
cp
.698039 .741176 .301961 rgb
ef
312.752 136.957 mo
265.076 136.957 li
265.076 135.56 li
312.752 135.56 li
312.752 136.957 li
cp
312.752 140.973 mo
312.752 142.37 li
265.076 142.37 li
265.076 140.973 li
312.752 140.973 li
cp
312.752 146.299 mo
312.752 147.696 li
265.076 147.696 li
265.076 146.299 li
312.752 146.299 li
cp
312.752 151.625 mo
312.752 153.022 li
265.076 153.022 li
265.076 151.625 li
312.752 151.625 li
cp
312.752 157.214 mo
312.752 158.611 li
265.076 158.611 li
265.076 157.214 li
312.752 157.214 li
cp
312.752 130.321 mo
312.752 131.717 li
265.076 131.717 li
265.076 130.321 li
312.752 130.321 li
cp
1 1 1 rgb
ef
234.429 104.275 mo
225.284 104.275 li
218.012 104.275 li
218.012 100.867 li
209.304 100.867 li
200.596 100.867 li
200.596 104.275 li
193.323 104.275 li
184.179 104.275 li
182.509 96.1094 li
181.037 89.3735 li
176.654 89.3735 li
176.177 89.3735 175.791 89.7592 175.79 90.2358 cv
175.781 96.7402 li
175.779 96.9312 175.705 97.1147 175.573 97.2519 cv
172.767 100.152 li
172.62 100.304 172.425 100.38 172.23 100.38 cv
172.036 100.38 171.841 100.304 171.694 100.152 cv
169.215 97.5898 li
169.069 97.4382 168.874 97.3624 168.679 97.3624 cv
168.484 97.3624 168.289 97.4382 168.142 97.5898 cv
165.664 100.152 li
165.517 100.304 165.322 100.38 165.127 100.38 cv
164.932 100.38 164.737 100.304 164.59 100.152 cv
162.112 97.5898 li
161.965 97.4382 161.77 97.3624 161.575 97.3624 cv
161.38 97.3624 161.185 97.4382 161.038 97.5898 cv
158.561 100.152 li
158.414 100.304 158.219 100.38 158.023 100.38 cv
157.828 100.38 157.633 100.304 157.486 100.152 cv
155.008 97.5898 li
154.861 97.4382 154.666 97.3624 154.471 97.3624 cv
154.276 97.3624 154.082 97.4382 153.935 97.5898 cv
153.695 97.8375 li
153.73 97.4207 153.762 97.004 153.791 96.5853 cv
153.935 96.4365 li
154.082 96.2849 154.276 96.2091 154.471 96.2091 cv
154.666 96.2091 154.861 96.2849 155.008 96.4365 cv
157.486 98.999 li
157.633 99.1508 157.828 99.2268 158.023 99.2268 cv
158.219 99.2268 158.414 99.1508 158.561 98.999 cv
161.038 96.4365 li
161.185 96.2849 161.38 96.2091 161.575 96.2091 cv
161.77 96.2091 161.965 96.2849 162.112 96.4365 cv
164.59 98.999 li
164.737 99.1508 164.932 99.2268 165.127 99.2268 cv
165.322 99.2268 165.517 99.1508 165.664 98.999 cv
168.142 96.4365 li
168.289 96.2849 168.484 96.2091 168.679 96.2091 cv
168.874 96.2091 169.069 96.2849 169.215 96.4365 cv
171.694 98.999 li
171.841 99.1508 172.036 99.2268 172.23 99.2268 cv
172.425 99.2268 172.62 99.1508 172.767 98.999 cv
174.988 96.7032 li
174.988 89.3642 li
174.988 88.8867 175.375 88.5 175.852 88.5 cv
180.846 88.5 li
177.156 71.6157 li
175.971 66.1904 180.188 61.0742 185.848 61.0742 cv
187.125 61.0742 li
186.982 60.7779 186.9 60.4673 186.9 60.145 cv
186.9 59.4419 187.266 58.789 187.889 58.2422 cv
198.061 58.2422 li
198.685 58.789 199.05 59.4419 199.05 60.145 cv
199.05 60.4673 198.968 60.7779 198.825 61.0742 cv
209.304 61.0742 li
220.155 61.0742 li
220.012 60.7779 219.93 60.4673 219.93 60.145 cv
219.93 59.4419 220.295 58.789 220.918 58.2422 cv
231.091 58.2422 li
231.715 58.789 232.08 59.4419 232.08 60.145 cv
232.08 60.4673 231.998 60.7779 231.855 61.0742 cv
232.761 61.0742 li
238.419 61.0742 242.638 66.1904 241.451 71.6157 cv
236.099 96.1094 li
234.429 104.275 li
18.5883 58.2945 mo
1.2993 58.2945 li
1.2993 37.0527 li
35.569 37.0527 li
28.6461 42.9653 22.8615 50.1694 18.5883 58.2945 cv
127.672 31.8303 mo
127.605 31.8303 127.537 31.8177 127.472 31.791 cv
120.962 29.127 li
120.662 29.0044 120.531 28.6318 120.669 28.295 cv
120.738 28.1255 li
120.018 28.4426 119.223 28.9724 118.387 29.6701 cv
115.097 27.7441 111.643 26.073 108.046 24.6826 cv
111.918 18.4854 115.093 15.1835 116.322 13.9868 cv
119.514 10.878 122.471 9.48395 125.608 9.48395 cv
126.469 9.48395 127.344 9.58906 128.24 9.79251 cv
128.243 9.7857 li
128.349 9.52505 128.587 9.36288 128.828 9.36288 cv
128.895 9.36288 128.962 9.37541 129.026 9.40184 cv
135.543 12.0684 li
135.842 12.191 135.974 12.5629 135.835 12.8999 cv
128.265 31.4028 li
128.156 31.6665 127.916 31.8303 127.672 31.8303 cv
.0156863 .388235 .423529 rgb
f
150.92 100.38 mo
150.725 100.38 150.53 100.304 150.383 100.152 cv
147.905 97.5898 li
147.758 97.4382 147.563 97.3624 147.368 97.3624 cv
147.172 97.3624 146.977 97.4382 146.831 97.5898 cv
144.353 100.152 li
144.206 100.304 144.011 100.38 143.816 100.38 cv
143.621 100.38 143.426 100.304 143.279 100.152 cv
140.801 97.5898 li
140.655 97.4382 140.459 97.3624 140.264 97.3624 cv
140.069 97.3624 139.874 97.4382 139.727 97.5898 cv
137.249 100.152 li
137.102 100.304 136.907 100.38 136.712 100.38 cv
136.517 100.38 136.322 100.304 136.176 100.152 cv
133.697 97.5898 li
133.55 97.4382 133.355 97.3624 133.16 97.3624 cv
132.966 97.3624 132.771 97.4382 132.624 97.5898 cv
130.145 100.152 li
129.999 100.304 129.804 100.38 129.609 100.38 cv
129.413 100.38 129.218 100.304 129.071 100.152 cv
126.594 97.5898 li
126.447 97.4382 126.252 97.3624 126.057 97.3624 cv
125.862 97.3624 125.667 97.4382 125.52 97.5898 cv
123.042 100.152 li
122.895 100.304 122.7 100.38 122.505 100.38 cv
122.31 100.38 122.115 100.304 121.968 100.152 cv
119.49 97.5898 li
119.343 97.4382 119.148 97.3624 118.953 97.3624 cv
118.758 97.3624 118.563 97.4382 118.417 97.5898 cv
115.938 100.152 li
115.791 100.304 115.596 100.38 115.401 100.38 cv
115.206 100.38 115.012 100.304 114.865 100.152 cv
112.386 97.5898 li
112.239 97.4382 112.044 97.3624 111.849 97.3624 cv
111.654 97.3624 111.459 97.4382 111.312 97.5898 cv
108.835 100.152 li
108.688 100.304 108.493 100.38 108.298 100.38 cv
108.103 100.38 107.908 100.304 107.761 100.152 cv
104.746 97.0918 li
96.4912 97.0918 li
96.4912 81.3301 li
94.1275 79.1191 92.913 76.0215 92.813 71.4399 cv
92.7807 69.9853 92.813 66.4658 93.7876 61.0801 cv
92.1191 60.562 87.1529 57.5029 86.2328 57.0483 cv
86.2328 57.0586 li
84.1611 57.0586 li
84.1611 58.2945 li
18.5883 58.2945 li
22.8615 50.1694 28.6461 42.9653 35.569 37.0527 cv
68.2831 37.0527 li
68.2831 55.0586 li
84.2324 55.0586 li
84.2324 55.0475 li
85.2413 55.5475 91.0766 59.1543 92.1674 59.1621 cv
109.928 59.3116 li
109.937 59.3116 109.947 59.3117 109.955 59.3117 cv
111.638 59.3118 113.005 58.1426 113.016 56.6909 cv
113.017 56.6372 li
113.018 56.395 112.998 56.1464 112.952 55.9023 cv
114.521 56.1398 115.025 57.4633 115.017 58.6372 cv
115.016 58.6909 li
115.005 60.1426 113.638 61.3116 111.956 61.3116 cv
111.947 61.3116 111.937 61.3115 111.928 61.3115 cv
105.247 61.2554 li
105.342 62.5249 105.543 63.6249 105.874 64.4532 cv
105.943 64.2842 li
106.05 64.0202 106.291 63.8566 106.534 63.8566 cv
106.602 63.8566 106.67 63.8693 106.735 63.896 cv
113.245 66.56 li
113.545 66.6826 113.676 67.0547 113.539 67.3916 cv
105.967 85.8945 li
105.859 86.1582 105.618 86.322 105.375 86.322 cv
105.308 86.322 105.24 86.3093 105.175 86.2827 cv
98.6597 83.6167 li
98.3623 83.4951 98.2325 83.1264 98.3696 82.793 cv
98.371 82.7866 li
98.0229 82.5713 97.706 82.3345 97.3911 82.0961 cv
97.3911 96.1919 li
105.055 96.1919 li
105.055 96.206 li
105.06 96.206 li
107.761 98.999 li
107.908 99.1508 108.103 99.2268 108.298 99.2268 cv
108.493 99.2268 108.688 99.1508 108.835 98.999 cv
111.312 96.4365 li
111.459 96.2849 111.654 96.2091 111.849 96.2091 cv
112.044 96.2091 112.239 96.2849 112.386 96.4365 cv
114.865 98.999 li
115.012 99.1508 115.206 99.2268 115.401 99.2268 cv
115.596 99.2268 115.791 99.1508 115.938 98.999 cv
118.417 96.4365 li
118.563 96.2849 118.758 96.2091 118.953 96.2091 cv
119.148 96.2091 119.343 96.2849 119.49 96.4365 cv
121.968 98.999 li
122.115 99.1508 122.31 99.2268 122.505 99.2268 cv
122.7 99.2268 122.895 99.1508 123.042 98.999 cv
125.52 96.4365 li
125.667 96.2849 125.862 96.2091 126.057 96.2091 cv
126.252 96.2091 126.447 96.2849 126.594 96.4365 cv
129.071 98.999 li
129.218 99.1508 129.413 99.2268 129.609 99.2268 cv
129.804 99.2268 129.999 99.1508 130.145 98.999 cv
132.624 96.4365 li
132.771 96.2849 132.966 96.2091 133.16 96.2091 cv
133.355 96.2091 133.55 96.2849 133.697 96.4365 cv
136.176 98.999 li
136.322 99.1508 136.517 99.2268 136.712 99.2268 cv
136.907 99.2268 137.102 99.1508 137.249 98.999 cv
139.727 96.4365 li
139.874 96.2849 140.069 96.2091 140.264 96.2091 cv
140.459 96.2091 140.655 96.2849 140.801 96.4365 cv
143.279 98.999 li
143.426 99.1508 143.621 99.2268 143.816 99.2268 cv
144.011 99.2268 144.206 99.1508 144.353 98.999 cv
146.831 96.4365 li
146.977 96.2849 147.172 96.2091 147.368 96.2091 cv
147.563 96.2091 147.758 96.2849 147.905 96.4365 cv
150.383 98.999 li
150.53 99.1508 150.725 99.2268 150.92 99.2268 cv
151.115 99.2268 151.309 99.1508 151.456 98.999 cv
153.791 96.5853 li
153.762 97.004 153.73 97.4207 153.695 97.8375 cv
151.456 100.152 li
151.309 100.304 151.115 100.38 150.92 100.38 cv
112.931 55.8021 mo
112.728 54.8928 112.141 54.0674 110.915 53.897 cv
110.955 53.6587 110.966 53.6123 111.014 53.3442 cv
112.579 53.3555 li
112.587 53.3556 112.596 53.3556 112.604 53.3556 cv
114.306 53.3556 115.69 52.0335 115.702 50.3926 cv
115.703 50.332 li
115.719 49.9991 115.698 49.7031 115.648 49.4395 cv
116.581 49.6734 117.801 50.3561 117.703 52.332 cv
117.702 52.3926 li
117.69 54.0335 116.306 55.3556 114.604 55.3556 cv
114.596 55.3556 114.587 55.3556 114.579 55.3555 cv
113.014 55.3442 li
112.973 55.5725 112.959 55.6401 112.931 55.8021 cv
116.705 48.7228 mo
116.697 48.7228 116.689 48.7227 116.681 48.7227 cv
115.399 48.7119 li
114.708 47.3964 113.073 47.3194 112.7 47.3194 cv
112.65 47.3194 112.623 47.3208 112.623 47.3208 cv
112.673 47.1133 112.72 46.9151 112.771 46.7066 cv
114.681 46.7227 li
114.689 46.7227 114.697 46.7228 114.705 46.7228 cv
116.405 46.7228 117.789 45.3886 117.802 43.7334 cv
117.803 43.6729 li
117.805 43.3655 117.76 43.0686 117.674 42.7887 cv
118.918 43.1875 119.813 44.3307 119.803 45.6729 cv
119.802 45.7334 li
119.789 47.3887 118.405 48.7228 116.705 48.7228 cv
118.215 42.0099 mo
118.208 42.0099 118.201 42.0099 118.194 42.0098 cv
117.298 42.0034 li
116.749 41.1877 115.803 40.646 114.726 40.6376 cv
114.283 40.6347 li
114.368 40.4116 114.463 40.2158 114.55 39.9981 cv
116.194 40.0098 li
116.201 40.0099 116.208 40.0099 116.215 40.0099 cv
117.7 40.0099 118.905 38.8061 118.905 37.3184 cv
118.905 36.439 li
118.905 36.276 118.89 36.1167 118.86 35.9623 cv
120.026 36.185 120.905 37.2096 120.905 38.439 cv
120.905 39.3184 li
120.905 40.8062 119.699 42.0099 118.215 42.0099 cv
114.385 33.9037 mo
109.366 33.8667 102.902 33.8085 102.902 33.8085 cv
102.672 33.6485 100.795 30.4795 101.533 29.7778 cv
102.066 29.7695 li
102.066 29.7695 103.72 26.8409 104.879 24.7725 cv
107.983 24.7725 li
107.954 24.8301 li
107.985 24.7809 108.016 24.7314 108.046 24.6826 cv
111.643 26.073 115.097 27.7441 118.387 29.6701 cv
117.106 30.7401 115.73 32.205 114.385 33.9037 cv
104.042 31.77 mo
103.533 31.7779 li
103.312 31.9882 103.328 32.4219 103.462 32.9287 cv
103.656 32.5385 103.85 32.1464 104.042 31.77 cv
.0117647 .356863 .407843 rgb
f
169.694 98.1523 mo
169.987 98.4561 170.474 98.4561 170.767 98.1523 cv
173.573 95.252 li
173.705 95.1147 173.779 94.9312 173.781 94.7402 cv
173.79 88.2358 li
173.791 87.7593 174.177 87.3735 174.654 87.3735 cv
180.23 87.3735 li
180.23 86.5 li
173.852 86.5 li
173.375 86.5 172.988 86.8867 172.988 87.3643 cv
172.988 94.7031 li
170.767 96.999 li
170.474 97.3027 169.987 97.3027 169.694 96.999 cv
167.215 94.4365 li
166.922 94.1333 166.435 94.1333 166.143 94.4365 cv
163.664 96.999 li
163.37 97.3027 162.883 97.3027 162.59 96.999 cv
160.112 94.4365 li
159.818 94.1333 159.332 94.1333 159.038 94.4365 cv
156.561 96.999 li
156.267 97.3027 155.78 97.3027 155.486 96.999 cv
153.008 94.4365 li
152.714 94.1333 152.229 94.1333 151.935 94.4365 cv
149.456 96.999 li
149.163 97.3027 148.677 97.3027 148.383 96.999 cv
145.905 94.4365 li
145.611 94.1333 145.124 94.1333 144.831 94.4365 cv
142.353 96.999 li
142.06 97.3027 141.572 97.3027 141.279 96.999 cv
138.801 94.4365 li
138.508 94.1333 138.021 94.1333 137.728 94.4365 cv
135.249 96.999 li
134.955 97.3027 134.469 97.3027 134.176 96.999 cv
131.697 94.4365 li
131.403 94.1333 130.917 94.1333 130.624 94.4365 cv
128.146 96.999 li
127.852 97.3027 127.365 97.3027 127.071 96.999 cv
124.594 94.4365 li
124.3 94.1333 123.813 94.1333 123.52 94.4365 cv
121.042 96.999 li
120.749 97.3027 120.262 97.3027 119.968 96.999 cv
117.49 94.4365 li
117.197 94.1333 116.71 94.1333 116.417 94.4365 cv
113.938 96.999 li
113.645 97.3027 113.158 97.3027 112.865 96.999 cv
110.386 94.4365 li
110.093 94.1333 109.606 94.1333 109.312 94.4365 cv
106.834 96.999 li
106.541 97.3027 106.054 97.3027 105.761 96.999 cv
103.06 94.2061 li
103.055 94.2061 li
103.055 94.1919 li
95.3911 94.1919 li
95.3911 77.0918 li
94.4912 77.0918 li
94.4912 95.0918 li
102.746 95.0918 li
105.761 98.1523 li
106.054 98.4561 106.541 98.4561 106.834 98.1523 cv
109.312 95.5898 li
109.606 95.2866 110.093 95.2866 110.386 95.5898 cv
112.865 98.1523 li
113.158 98.4561 113.645 98.4561 113.938 98.1523 cv
116.417 95.5898 li
116.71 95.2866 117.197 95.2866 117.49 95.5898 cv
119.968 98.1523 li
120.262 98.4561 120.749 98.4561 121.042 98.1523 cv
123.52 95.5898 li
123.813 95.2866 124.3 95.2866 124.594 95.5898 cv
127.071 98.1523 li
127.365 98.4561 127.852 98.4561 128.146 98.1523 cv
130.624 95.5898 li
130.917 95.2866 131.403 95.2866 131.697 95.5898 cv
134.176 98.1523 li
134.469 98.4561 134.955 98.4561 135.249 98.1523 cv
137.728 95.5898 li
138.021 95.2866 138.508 95.2866 138.801 95.5898 cv
141.279 98.1523 li
141.572 98.4561 142.06 98.4561 142.353 98.1523 cv
144.831 95.5898 li
145.124 95.2866 145.611 95.2866 145.905 95.5898 cv
148.383 98.1523 li
148.677 98.4561 149.163 98.4561 149.456 98.1523 cv
151.935 95.5898 li
152.229 95.2866 152.714 95.2866 153.008 95.5898 cv
155.486 98.1523 li
155.78 98.4561 156.267 98.4561 156.561 98.1523 cv
159.038 95.5898 li
159.332 95.2866 159.818 95.2866 160.112 95.5898 cv
162.59 98.1523 li
162.883 98.4561 163.37 98.4561 163.664 98.1523 cv
166.143 95.5898 li
166.435 95.2866 166.922 95.2866 167.215 95.5898 cv
169.694 98.1523 li
cp
.294118 .337255 .407843 rgb
f
224.004 61.6299 mo
227.359 61.6299 230.08 60.0698 230.08 58.145 cv
230.08 57.4419 229.715 56.7891 229.091 56.2422 cv
218.918 56.2422 li
218.295 56.7891 217.93 57.4419 217.93 58.145 cv
217.93 60.0698 220.649 61.6299 224.004 61.6299 cv
cp
f
190.975 61.6299 mo
194.33 61.6299 197.05 60.0698 197.05 58.145 cv
197.05 57.4419 196.685 56.7891 196.062 56.2422 cv
185.889 56.2422 li
185.266 56.7891 184.9 57.4419 184.9 58.145 cv
184.9 60.0698 187.62 61.6299 190.975 61.6299 cv
cp
f
180.509 94.1094 mo
182.179 102.275 li
191.323 102.275 li
198.595 102.275 li
198.595 98.8667 li
207.304 98.8667 li
216.012 98.8667 li
216.012 102.275 li
223.284 102.275 li
232.429 102.275 li
234.099 94.1094 li
239.451 69.6157 li
240.638 64.1904 236.419 59.0742 230.761 59.0742 cv
207.304 59.0742 li
183.848 59.0742 li
178.188 59.0742 173.971 64.1904 175.156 69.6157 cv
180.509 94.1094 li
cp
f
207.49 91.1147 mo
213.255 91.1147 217.93 86.4409 217.93 80.6753 cv
217.93 74.9097 213.255 70.2354 207.49 70.2354 cv
201.725 70.2354 197.05 74.9097 197.05 80.6753 cv
197.05 86.4409 201.725 91.1147 207.49 91.1147 cv
cp
1 1 1 rgb
f
207.49 88.4189 mo
211.767 88.4189 215.233 84.9517 215.233 80.6753 cv
215.233 76.3984 211.767 72.9312 207.49 72.9312 cv
203.213 72.9312 199.746 76.3984 199.746 80.6753 cv
199.746 84.9517 203.213 88.4189 207.49 88.4189 cv
cp
.0196078 .592157 .65098 rgb
f
103.967 83.8945 mo
111.539 65.3916 li
111.676 65.0547 111.545 64.6826 111.245 64.5601 cv
104.735 61.896 li
104.435 61.7734 104.08 61.9468 103.943 62.2842 cv
103.874 62.4531 li
102.345 58.6201 103.431 49.188 106.228 42.2114 cv
109.124 35.2754 114.962 27.7881 118.739 26.1255 cv
118.669 26.2949 li
118.531 26.6318 118.662 27.0044 118.962 27.127 cv
125.472 29.791 li
125.771 29.9136 126.126 29.7397 126.265 29.4028 cv
133.835 10.8999 li
133.974 10.563 133.842 10.1909 133.543 10.0684 cv
127.026 7.40186 li
126.729 7.28027 126.379 7.45264 126.243 7.78564 cv
126.24 7.79248 li
122.078 6.84766 118.391 8.0249 114.322 11.9868 cv
112.289 13.9668 104.94 21.6631 97.8945 38.8013 cv
90.9053 55.9639 90.7505 66.6035 90.813 69.4399 cv
90.937 75.1187 92.7412 78.543 96.3711 80.7866 cv
96.3696 80.793 li
96.2324 81.1265 96.3623 81.4951 96.6597 81.6167 cv
103.175 84.2827 li
103.475 84.4053 103.829 84.2314 103.967 83.8945 cv
cp
.294118 .337255 .407843 rgb
f
113.016 56.6909 mo
113.017 56.6372 li
113.025 55.4541 112.513 54.1191 110.915 53.897 cv
110.955 53.6587 110.966 53.6123 111.014 53.3442 cv
112.579 53.3555 li
114.292 53.3687 115.69 52.0415 115.702 50.3926 cv
115.703 50.332 li
115.861 47.1606 112.623 47.3208 112.623 47.3208 cv
112.673 47.1133 112.72 46.9151 112.771 46.7066 cv
114.681 46.7227 li
116.392 46.7354 117.789 45.3965 117.802 43.7334 cv
117.803 43.6729 li
117.815 42.0088 116.437 40.6509 114.726 40.6376 cv
114.283 40.6347 li
114.368 40.4116 114.463 40.2158 114.55 39.9981 cv
116.194 40.0098 li
117.688 40.021 118.905 38.813 118.905 37.3184 cv
118.905 36.439 li
118.905 35.0527 117.787 33.9268 116.401 33.918 cv
111.32 33.8842 102.902 33.8085 102.902 33.8085 cv
102.672 33.6485 100.795 30.4795 101.533 29.7778 cv
102.066 29.7695 li
102.066 29.7695 105.944 22.9043 105.983 22.7724 cv
100.82 22.7724 li
98.856 22.7724 89.8637 29.5122 89.6221 29.8526 cv
85.0987 36.2222 li
75.1201 36.2641 li
75.1201 55.0381 li
84.2232 55.043 li
85.2055 55.5253 91.0732 59.1543 92.1674 59.1621 cv
109.928 59.3116 li
111.623 59.3243 113.005 58.1504 113.016 56.6909 cv
.988235 .752941 .513726 rgb
f
75.1201 37.0527 mo
68.2831 37.0527 li
68.2831 36.1523 li
84.2324 36.1523 li
84.2324 36.2258 li
75.1201 36.2641 li
75.1201 37.0527 li
.0117647 .458824 .486274 rgb
f
84.2324 55.0586 mo
68.2831 55.0586 li
68.2831 37.0527 li
75.1201 37.0527 li
75.1201 55.0381 li
84.2232 55.043 li
84.2262 55.0445 84.2293 55.046 84.2324 55.0475 cv
84.2324 55.0586 li
.00784314 .298039 .317647 rgb
f
84.2324 55.0475 mo
84.2293 55.046 84.2262 55.0445 84.2232 55.043 cv
75.1201 55.0381 li
75.1201 37.0527 li
75.1201 36.2641 li
84.2324 36.2258 li
84.2324 55.0475 li
.898039 .631373 .4 rgb
f
82.1611 35.0527 mo
-.700684 35.0527 li
-.700684 56.2944 li
82.1611 56.2944 li
82.1611 35.0527 li
cp
1 .8 .2 rgb
f
413.051 292.5 mo
407.348 292.5 li
407.348 190.641 li
409.339 189.65 411.246 188.511 413.051 187.239 cv
413.051 292.5 li
387.031 292.5 mo
385.567 292.5 li
385.567 195.127 li
386.038 195.152 386.512 195.169 386.987 195.179 cv
386.984 197.103 li
387.031 197.103 li
387.031 292.5 li
.0156863 .388235 .423529 rgb
f
386.987 195.179 mo
386.512 195.169 386.038 195.152 385.567 195.127 cv
385.567 185.764 li
387 185.764 li
386.987 195.179 li
407.348 190.641 mo
407.348 180.913 li
407.307 180.913 li
407.307 175.945 li
407.313 175.945 li
407.403 174.886 407.816 173.438 408.244 172.166 cv
408.96 170.038 409.325 167.811 409.302 165.564 cv
409.239 159.358 408.996 150.291 409.031 150.064 cv
408.829 130.788 li
409.183 130.688 409.475 130.648 409.715 130.648 cv
410.683 130.648 410.814 131.302 410.814 131.302 cv
411.031 152.064 li
410.996 152.291 411.239 161.358 411.302 167.564 cv
411.325 169.811 410.96 172.038 410.244 174.166 cv
409.816 175.439 409.403 176.886 409.313 177.945 cv
409.307 177.945 li
409.307 182.913 li
409.348 182.913 li
409.348 185.764 li
413.051 185.764 li
413.051 187.239 li
411.246 188.511 409.339 189.65 407.348 190.641 cv
387.005 181.852 mo
384.709 180.695 382.886 179.707 382.491 179.357 cv
382.491 179.357 379.843 177.213 376.729 174.689 cv
370.481 174.689 li
369.497 174.689 368.699 173.892 368.699 172.907 cv
368.699 168.301 li
368.512 168.185 li
366.906 167.037 364.066 164.165 363.565 162.983 cv
363.058 161.785 363.113 160.564 363.754 159.714 cv
363.87 159.563 li
363.915 159.512 li
364.455 158.903 365.195 158.591 366.051 158.591 cv
366.854 158.591 367.76 158.865 368.699 159.427 cv
368.699 158.703 li
368.477 158.565 li
366.693 157.293 363.543 154.105 362.986 152.793 cv
362.423 151.464 362.485 150.108 363.196 149.166 cv
363.324 148.998 li
363.375 148.941 li
363.994 148.244 364.833 147.861 365.813 147.861 cv
366.683 147.861 367.664 148.163 368.699 148.814 cv
368.699 148.196 li
368.461 148.049 li
366.588 146.712 363.278 143.364 362.694 141.985 cv
362.102 140.59 362.167 139.166 362.914 138.175 cv
363.049 137.999 li
363.102 137.939 li
363.745 137.214 364.615 136.825 365.631 136.825 cv
366.555 136.825 367.598 137.146 368.699 137.827 cv
368.699 136.554 li
362.844 131.361 li
362.429 130.994 362.069 130.595 361.766 130.18 cv
375.979 142.783 li
376.602 143.335 li
376.504 143.601 376.431 143.854 376.327 144.122 cv
374.1 142.141 li
373.066 141.221 li
373.066 171.343 li
376.84 174.4 380.491 177.357 380.491 177.357 cv
380.995 177.804 383.831 179.293 387.007 180.845 cv
387.005 181.852 li
399.142 150.74 mo
397.778 148.996 396.434 147.502 395.225 146.537 cv
368.699 126.001 li
368.699 124.52 li
368.699 123.536 369.497 122.738 370.481 122.738 cv
400.659 122.738 li
401.644 122.738 402.442 123.536 402.442 124.52 cv
402.442 133.205 li
400.56 137.176 399.953 142.725 399.635 145.686 cv
399.52 146.755 399.332 148.707 399.142 150.74 cv
.0117647 .356863 .407843 rgb
f
359.383 123.016 mo
360.74 121.485 363.617 121.82 365.809 123.763 cv
395.225 146.537 li
396.434 147.502 397.778 148.996 399.142 150.74 cv
399.332 148.707 399.52 146.755 399.635 145.686 cv
400.122 141.147 401.29 130.523 406.689 128.83 cv
408.6 128.23 408.814 129.302 408.814 129.302 cv
409.031 150.064 li
408.996 150.291 409.239 159.358 409.302 165.564 cv
409.325 167.811 408.96 170.038 408.244 172.166 cv
407.816 173.438 407.403 174.886 407.313 175.945 cv
407.307 175.945 li
407.307 197.103 li
386.984 197.103 li
387.007 180.845 li
383.831 179.293 380.995 177.804 380.491 177.357 cv
380.491 177.357 376.84 174.4 373.066 171.343 cv
373.066 141.221 li
374.1 142.141 li
376.327 144.122 li
376.431 143.854 376.504 143.601 376.602 143.335 cv
375.979 142.783 li
360.844 129.361 li
358.652 127.418 357.977 124.603 359.334 123.071 cv
359.383 123.016 li
.988235 .752941 .513726 rgb
f
407.348 292.5 mo
387.031 292.5 li
387.031 197.103 li
407.307 197.103 li
407.307 190.661 li
407.32 190.654 407.334 190.647 407.348 190.641 cv
407.348 292.5 li
.0117647 .32549 .329412 rgb
f
407.307 190.661 mo
407.307 180.913 li
407.348 180.913 li
407.348 190.641 li
407.334 190.647 407.32 190.654 407.307 190.661 cv
.00784314 .298039 .317647 rgb
f
407.307 197.103 mo
387.031 197.103 li
387.031 180.913 li
407.307 180.913 li
407.307 190.661 li
407.307 197.103 li
.898039 .631373 .4 rgb
f
411.051 183.764 mo
411.051 301 li
383.567 301 li
383.567 183.764 li
411.051 183.764 li
cp
.286275 .32549 .360784 rgb
f
368.481 120.738 mo
398.659 120.738 li
399.644 120.738 400.442 121.536 400.442 122.521 cv
400.442 170.907 li
400.442 171.892 399.644 172.689 398.659 172.689 cv
368.481 172.689 li
367.497 172.689 366.699 171.892 366.699 170.907 cv
366.699 122.521 li
366.699 121.536 367.497 120.738 368.481 120.738 cv
cp
.294118 .337255 .407843 rgb
f
396.768 165.411 mo
370.374 165.411 li
370.374 126.32 li
396.768 126.32 li
396.768 165.411 li
cp
1 1 1 rgb
f
383.57 167.708 mo
384.229 167.708 384.762 168.242 384.762 168.899 cv
384.762 169.558 384.229 170.091 383.57 170.091 cv
382.913 170.091 382.379 169.558 382.379 168.899 cv
382.379 168.242 382.913 167.708 383.57 167.708 cv
cp
f
380.165 123.172 mo
386.977 123.172 li
387.172 123.172 387.331 123.293 387.331 123.443 cv
387.331 123.923 li
387.331 124.073 387.172 124.194 386.977 124.194 cv
380.165 124.194 li
379.969 124.194 379.81 124.073 379.81 123.923 cv
379.81 123.443 li
379.81 123.293 379.969 123.172 380.165 123.172 cv
cp
f
383.879 146.91 mo
382.403 146.91 li
382.262 146.91 382.143 146.987 382.069 147.098 cv
379.325 146.868 378.502 145.226 378.254 144.237 cv
378.473 144.156 li
378.473 139.881 li
379.457 138.076 381.37 136.852 383.57 136.852 cv
385.771 136.852 387.685 138.076 388.668 139.881 cv
388.668 144.156 li
388.787 144.221 388.922 144.261 389.066 144.261 cv
389.083 144.261 li
389.147 144.248 li
388.454 146.678 386.223 148.459 383.57 148.459 cv
381.711 148.459 380.06 147.581 378.997 146.221 cv
379.628 146.834 380.576 147.345 382.024 147.471 cv
382.083 147.624 382.229 147.734 382.403 147.734 cv
383.879 147.734 li
384.104 147.734 384.287 147.552 384.287 147.327 cv
384.287 147.318 li
384.287 147.093 384.104 146.91 383.879 146.91 cv
cp
1 .8 .2 rgb
f
373.023 152.712 mo
373.351 150.819 374.602 149.216 376.357 148.439 cv
378.972 147.282 li
380.022 148.679 381.688 149.586 383.57 149.586 cv
385.453 149.586 387.118 148.679 388.169 147.282 cv
390.784 148.439 li
392.54 149.216 393.791 150.819 394.117 152.712 cv
395.018 157.928 li
395.173 158.826 394.481 159.647 393.57 159.647 cv
373.571 159.647 li
372.659 159.647 371.968 158.826 372.123 157.928 cv
373.023 152.712 li
cp
f
383.57 134.088 mo
385.805 134.088 387.435 134.857 388.401 136.355 cv
388.97 137.235 389.229 138.249 389.328 139.213 cv
389.083 139.163 li
389.066 139.163 li
388.922 139.163 388.787 139.203 388.668 139.268 cv
388.587 138.383 388.36 137.613 387.852 136.83 cv
387.015 135.543 385.571 134.883 383.57 134.883 cv
381.57 134.883 380.127 135.543 379.29 136.83 cv
378.779 137.614 378.554 138.382 378.473 139.268 cv
378.354 139.203 378.22 139.163 378.074 139.163 cv
378.058 139.163 li
377.813 139.213 li
377.912 138.249 378.172 137.235 378.739 136.355 cv
379.707 134.857 381.337 134.088 383.57 134.088 cv
cp
f
389.861 139.693 mo
390.545 139.837 391.069 140.646 391.069 141.632 cv
391.069 142.602 390.562 143.403 389.895 143.566 cv
389.925 143.42 li
389.925 140.005 li
389.925 139.894 389.9 139.79 389.861 139.693 cv
cp
f
389.143 139.666 mo
389.319 139.706 li
389.495 139.769 389.638 139.909 389.705 140.102 cv
389.75 140.356 li
389.75 143.163 li
389.729 143.283 li
389.68 143.588 389.465 143.818 389.188 143.844 cv
389.143 143.854 li
389.13 143.854 li
389.025 143.854 388.929 143.821 388.843 143.769 cv
388.843 140.255 li
388.843 139.88 li
388.843 139.751 li
388.929 139.698 389.025 139.666 389.13 139.666 cv
389.143 139.666 li
cp
f
378.074 144.261 mo
378.254 144.237 li
378.502 145.226 379.325 146.868 382.069 147.098 cv
382.143 146.987 382.262 146.91 382.403 146.91 cv
383.879 146.91 li
384.104 146.91 384.287 147.093 384.287 147.318 cv
384.287 147.327 li
384.287 147.552 384.104 147.734 383.879 147.734 cv
382.403 147.734 li
382.229 147.734 382.083 147.624 382.024 147.471 cv
380.576 147.345 379.628 146.834 378.997 146.221 cv
378.317 145.559 378.011 144.782 377.877 144.225 cv
378.058 144.261 li
378.074 144.261 li
cp
1 1 1 rgb
f
377.279 139.693 mo
377.24 139.79 377.217 139.894 377.217 140.005 cv
377.217 143.42 li
377.246 143.566 li
376.579 143.403 376.071 142.602 376.071 141.632 cv
376.071 140.646 376.597 139.837 377.279 139.693 cv
cp
1 .8 .2 rgb
f
377.821 139.706 mo
377.998 139.666 li
378.011 139.666 li
378.115 139.666 378.212 139.698 378.298 139.751 cv
378.298 139.884 li
378.298 140.255 li
378.298 143.769 li
378.14 143.835 li
378.011 143.854 li
377.998 143.854 li
377.868 143.824 li
377.632 143.764 377.456 143.556 377.412 143.283 cv
377.391 143.163 li
377.391 140.356 li
377.437 140.102 li
377.504 139.909 377.646 139.768 377.821 139.706 cv
cp
f
361.049 135.999 mo
361.102 135.939 li
362.55 134.306 365.148 134.356 367.959 136.734 cv
371.016 139.505 li
371.794 140.201 372.45 141.03 372.916 141.811 cv
373.826 143.336 373.564 144.909 372.782 145.995 cv
372.604 146.228 li
372.55 146.287 li
371.249 147.743 368.646 147.609 366.461 146.049 cv
364.588 144.712 361.278 141.364 360.694 139.985 cv
360.102 138.59 360.167 137.166 360.914 136.175 cv
361.049 135.999 li
cp
.937255 .764706 .603922 rgb
f
361.324 146.998 mo
361.375 146.941 li
362.754 145.387 365.222 145.373 367.902 147.698 cv
370.812 150.336 li
371.554 150.998 372.178 151.788 372.621 152.529 cv
373.488 153.982 373.239 155.48 372.494 156.514 cv
372.323 156.735 li
372.272 156.792 li
371.034 158.178 368.557 158.05 366.477 156.565 cv
364.693 155.293 361.543 152.105 360.986 150.793 cv
360.423 149.464 360.485 148.108 361.196 147.166 cv
361.324 146.998 li
cp
f
361.87 157.563 mo
361.915 157.512 li
363.157 156.111 365.454 156.258 367.797 158.194 cv
370.419 160.571 li
371.087 161.168 371.649 161.879 372.049 162.548 cv
372.83 163.857 372.605 165.207 371.935 166.138 cv
371.781 166.337 li
371.735 166.389 li
370.619 167.638 368.387 167.522 366.512 166.185 cv
364.906 165.037 362.066 162.165 361.565 160.983 cv
361.058 159.785 361.113 158.564 361.754 157.714 cv
361.87 157.563 li
cp
f
293.458 87.6259 mo
291.192 87.6259 li
278.526 87.6259 li
260.538 87.6259 li
258.55 87.6259 256.937 86.0137 256.937 84.0254 cv
256.937 82.3057 li
255.584 82.3057 li
254.785 82.3057 254.138 81.6582 254.138 80.8594 cv
254.138 80.2285 li
254.138 79.4297 254.785 78.7822 255.584 78.7822 cv
256.937 78.7822 li
256.937 78.4707 li
256.937 75.499 li
256.937 75.1885 li
255.584 75.1885 li
254.785 75.1885 254.138 74.541 254.138 73.7422 cv
254.138 73.1104 li
254.138 72.3126 254.785 71.6651 255.584 71.6651 cv
256.937 71.6651 li
256.937 71.3535 li
256.937 68.3819 li
256.937 68.0703 li
255.584 68.0703 li
254.785 68.0703 254.138 67.4228 254.138 66.625 cv
254.138 65.9932 li
254.138 65.1943 254.785 64.5469 255.584 64.5469 cv
256.937 64.5469 li
256.937 64.2363 li
256.937 61.2636 li
256.937 60.9531 li
255.584 60.9531 li
254.785 60.9531 254.138 60.3057 254.138 59.5068 cv
254.138 58.876 li
254.138 58.0772 254.785 57.4297 255.584 57.4297 cv
256.937 57.4297 li
256.937 57.1192 li
256.937 54.1465 li
256.937 53.836 li
255.584 53.836 li
254.785 53.836 254.138 53.1885 254.138 52.3896 cv
254.138 51.7578 li
254.138 50.96 254.785 50.3125 255.584 50.3125 cv
256.937 50.3125 li
256.937 47.3027 li
256.937 45.3144 258.55 43.7021 260.538 43.7021 cv
278.526 43.7021 li
288.616 43.7021 li
293.458 43.7021 li
295.32 43.7021 296.83 45.3135 296.83 47.3027 cv
296.83 84.0254 li
296.83 86.0137 295.32 87.6259 293.458 87.6259 cv
.0117647 .356863 .407843 rgb
f
450 82.3711 mo
367.022 82.3687 li
367.336 81.2495 367.619 80.1161 367.872 78.9726 cv
371.448 78.9712 li
371.448 78.9542 li
450 78.9134 li
450 82.3711 li
.0156863 .388235 .423529 rgb
f
331.721 85.7203 mo
330.126 85.7203 328.783 84.7757 328.413 83.4964 cv
328.816 83.6407 329.258 83.7203 329.721 83.7203 cv
329.731 83.7203 329.741 83.7202 329.751 83.7202 cv
352.459 83.5601 li
353.678 83.5513 360.215 79.5112 361.31 78.9751 cv
367.872 78.9726 li
367.619 80.1161 367.336 81.2495 367.022 82.3687 cv
365.606 82.3687 li
365.606 80.9741 li
363.311 80.9751 li
362.215 81.5112 355.678 85.5513 354.459 85.5601 cv
331.751 85.7202 li
331.741 85.7203 331.731 85.7203 331.721 85.7203 cv
326.968 78.5951 mo
326.298 78.1978 325.778 77.5859 325.515 76.8577 cv
325.906 77.0054 326.331 77.0865 326.776 77.0865 cv
326.785 77.0865 326.793 77.0865 326.801 77.0864 cv
328.543 77.0737 li
328.597 77.3715 328.609 77.4243 328.654 77.689 cv
327.882 77.7961 327.337 78.1365 326.968 78.5951 cv
324.399 71.051 mo
323.847 70.6579 323.42 70.1092 323.186 69.4706 cv
323.574 69.6173 323.996 69.6978 324.437 69.6978 cv
324.445 69.6978 324.453 69.6978 324.461 69.6977 cv
326.587 69.6792 li
326.646 69.9126 326.697 70.1333 326.753 70.3638 cv
326.753 70.3638 326.722 70.3623 326.667 70.3623 cv
326.356 70.3623 325.255 70.4104 324.399 71.051 cv
307.485 64.3424 mo
305.23 64.3424 303.339 63.2552 302.837 61.7852 cv
303.595 62.1375 304.506 62.3425 305.485 62.3425 cv
305.502 62.3425 305.518 62.3424 305.534 62.3423 cv
324.608 62.2075 li
324.705 62.4498 324.811 62.6685 324.906 62.9165 cv
324.413 62.9205 li
323.302 62.9284 322.318 63.4455 321.692 64.2423 cv
307.534 64.3422 li
307.518 64.3423 307.501 64.3424 307.485 64.3424 cv
330.156 55.3909 mo
328.097 54.5983 327.057 53.5819 326.576 52.6313 cv
328.593 53.8472 332.221 54.8122 338.591 54.8123 cv
339.059 54.8123 339.541 54.8071 340.04 54.7964 cv
340.442 54.7876 340.783 54.7856 341.167 54.7788 cv
340.989 54.9605 340.767 55.1391 340.511 55.3179 cv
330.156 55.3909 li
.0117647 .356863 .407843 rgb
f
291.458 41.7021 mo
276.526 41.7021 li
276.526 85.626 li
291.458 85.626 li
293.32 85.626 294.83 84.0137 294.83 82.0254 cv
294.83 45.3027 li
294.83 43.3135 293.32 41.7021 291.458 41.7021 cv
cp
.294118 .337255 .407843 rgb
f
287.832 48.4229 mo
292.793 48.4229 li
292.793 44.166 li
287.832 44.166 li
287.832 48.4229 li
cp
1 .8 .2 rgb
f
287.832 55.0205 mo
292.793 55.0205 li
292.793 50.7627 li
287.832 50.7627 li
287.832 55.0205 li
cp
f
287.832 61.6182 mo
292.793 61.6182 li
292.793 57.3613 li
287.832 57.3613 li
287.832 61.6182 li
cp
f
254.938 69.3535 mo
255.505 69.3535 li
255.505 66.3818 li
254.938 66.3818 li
254.938 69.3535 li
cp
.415686 .74902 .85098 rgb
f
254.938 62.2363 mo
255.505 62.2363 li
255.505 59.2637 li
254.938 59.2637 li
254.938 62.2363 li
cp
f
254.938 55.1191 mo
255.505 55.1191 li
255.505 52.1465 li
254.938 52.1465 li
254.938 55.1191 li
cp
f
286.616 41.7021 mo
258.538 41.7021 li
256.55 41.7021 254.938 43.3145 254.938 45.3027 cv
254.938 82.0254 li
254.938 84.0137 256.55 85.626 258.538 85.626 cv
289.192 85.626 li
291.181 85.626 292.793 84.0137 292.793 82.0254 cv
292.793 63.8691 li
286.616 63.8691 li
286.616 41.7021 li
cp
.913725 .941176 .956863 rgb
f
254.938 76.4707 mo
255.505 76.4707 li
255.505 73.499 li
254.938 73.499 li
254.938 76.4707 li
cp
.415686 .74902 .85098 rgb
f
258.509 48.3125 mo
255.104 48.3125 li
253.584 48.3125 li
252.785 48.3125 252.138 48.96 252.138 49.7578 cv
252.138 50.3896 li
252.138 51.1885 252.785 51.8359 253.584 51.8359 cv
255.104 51.8359 li
258.509 51.8359 li
259.308 51.8359 259.954 51.1885 259.954 50.3896 cv
259.954 49.7578 li
259.954 48.96 259.308 48.3125 258.509 48.3125 cv
cp
.294118 .337255 .407843 rgb
f
258.509 55.4297 mo
255.104 55.4297 li
253.584 55.4297 li
252.785 55.4297 252.138 56.0771 252.138 56.876 cv
252.138 57.5068 li
252.138 58.3057 252.785 58.9531 253.584 58.9531 cv
255.104 58.9531 li
258.509 58.9531 li
259.308 58.9531 259.954 58.3057 259.954 57.5068 cv
259.954 56.876 li
259.954 56.0771 259.308 55.4297 258.509 55.4297 cv
cp
f
258.509 62.5469 mo
255.104 62.5469 li
253.584 62.5469 li
252.785 62.5469 252.138 63.1943 252.138 63.9932 cv
252.138 64.625 li
252.138 65.4229 252.785 66.0703 253.584 66.0703 cv
255.104 66.0703 li
258.509 66.0703 li
259.308 66.0703 259.954 65.4229 259.954 64.625 cv
259.954 63.9932 li
259.954 63.1943 259.308 62.5469 258.509 62.5469 cv
cp
f
258.509 69.665 mo
255.104 69.665 li
253.584 69.665 li
252.785 69.665 252.138 70.3125 252.138 71.1104 cv
252.138 71.7422 li
252.138 72.541 252.785 73.1885 253.584 73.1885 cv
255.104 73.1885 li
258.509 73.1885 li
259.308 73.1885 259.954 72.541 259.954 71.7422 cv
259.954 71.1104 li
259.954 70.3125 259.308 69.665 258.509 69.665 cv
cp
f
258.509 76.7822 mo
255.104 76.7822 li
253.584 76.7822 li
252.785 76.7822 252.138 77.4297 252.138 78.2285 cv
252.138 78.8594 li
252.138 79.6582 252.785 80.3057 253.584 80.3057 cv
255.104 80.3057 li
258.509 80.3057 li
259.308 80.3057 259.954 79.6582 259.954 78.8594 cv
259.954 78.2285 li
259.954 77.4297 259.308 76.7822 258.509 76.7822 cv
cp
f
281.394 66.2695 mo
281.082 66.2646 li
279.179 68.1074 li
279.174 68.4189 li
279.216 68.4629 li
277.749 68.5 274.925 66.9727 273.16 65.1777 cv
271.424 63.3555 269.989 60.4834 270.072 59.0186 cv
270.115 59.0625 li
270.428 59.0674 li
272.33 57.2246 li
272.336 56.9131 li
267.679 52.1025 li
267.366 52.0977 li
265.462 53.9414 li
265.457 54.25 li
265.458 54.252 li
264.482 55.5234 264.259 56.8984 264.859 58.7451 cv
265.159 59.668 266.416 63.0693 270.724 67.5361 cv
275.049 71.9873 278.408 73.3525 279.32 73.6826 cv
281.146 74.3428 282.528 74.1631 283.831 73.2295 cv
283.832 73.2314 li
284.142 73.2363 li
286.046 71.3926 li
286.051 71.0801 li
281.394 66.2695 li
cp
.0196078 .592157 .65098 rgb
f
324.255 49.6548 mo
324.608 51.8296 327.45 55.0669 340.04 54.7964 cv
340.442 54.7876 340.783 54.7856 341.167 54.7788 cv
340.989 54.9605 340.767 55.1391 340.511 55.3179 cv
305.486 55.5649 li
302.833 55.5835 300.693 57.1011 300.706 58.9536 cv
300.707 59.022 li
300.72 60.8745 302.881 62.3608 305.534 62.3423 cv
324.608 62.2075 li
324.705 62.4498 324.811 62.6685 324.906 62.9165 cv
324.413 62.9205 li
322.507 62.9341 320.973 64.4468 320.985 66.2993 cv
320.986 66.3667 li
320.999 68.2203 322.555 69.7104 324.461 69.6977 cv
326.587 69.6792 li
326.646 69.9126 326.697 70.1333 326.753 70.3638 cv
326.753 70.3638 323.146 70.185 323.322 73.7173 cv
323.322 73.7846 li
323.336 75.6216 324.893 77.0991 326.801 77.0864 cv
328.543 77.0737 li
328.597 77.3715 328.609 77.4243 328.654 77.689 cv
326.873 77.936 326.302 79.4234 326.312 80.7408 cv
326.312 80.8002 li
326.323 82.4263 327.863 83.7339 329.751 83.7202 cv
352.459 83.5601 li
353.678 83.5513 360.215 79.5112 361.31 78.9751 cv
371.448 78.9712 li
371.453 58.0611 li
360.34 58.0112 li
360.34 58.0112 352.838 50.6577 349.111 48.3941 cv
348.634 48.2613 348.172 48.1333 347.694 48.0005 cv
325.246 47.8237 li
325.246 47.8237 323.957 47.8237 324.255 49.6548 cv
.988235 .752941 .513726 rgb
f
450 58.7126 mo
371.453 58.7097 li
371.453 58.0611 li
368.935 58.0498 li
368.934 58.0374 368.932 58.0215 368.93 58.0092 cv
450 57.9661 li
450 58.7126 li
.0156863 .494118 .509804 rgb
f
368.935 58.0498 mo
361.294 58.0155 li
361.294 58.0132 li
368.93 58.0092 li
368.932 58.0215 368.934 58.0374 368.935 58.0498 cv
.0117647 .458824 .486274 rgb
f
371.448 78.9542 mo
371.453 58.7097 li
450 58.7126 li
450 78.9134 li
371.448 78.9542 li
.0117647 .32549 .329412 rgb
f
361.351 78.9595 mo
361.294 58.0155 li
368.935 58.0498 li
371.453 58.0611 li
371.453 58.7097 li
371.448 78.9542 li
361.351 78.9595 li
.898039 .631373 .4 rgb
f
363.605 80.3687 mo
467.483 80.3716 li
467.483 56.7134 li
363.612 56.7095 li
363.605 80.3687 li
cp
.698039 .741176 .301961 rgb
f
65.7163 154.427 mo
60.0317 154.427 li
59.1641 154.427 58.4609 153.724 58.4609 152.856 cv
58.4609 152.824 li
58.4609 151.956 59.1641 151.252 60.0317 151.252 cv
65.7163 151.252 li
66.2636 151.252 66.7212 151.548 67.0029 151.972 cv
77.5586 151.088 80.7461 144.77 81.7099 140.96 cv
81.4112 140.891 81.1265 140.785 80.8628 140.642 cv
80.8628 122.426 li
80.5498 119.014 79.6786 115.436 77.7128 112.413 cv
74.4878 107.456 68.9263 104.914 61.2197 104.914 cv
53.5132 104.914 47.9522 107.456 44.727 112.413 cv
42.7646 115.431 41.8931 119.001 41.5786 122.408 cv
41.5786 140.642 li
41.1201 140.89 40.6036 141.044 40.0454 141.044 cv
39.9804 141.044 li
38.3833 141.044 37.0634 139.886 36.7959 138.366 cv
34.2529 137.708 32.3272 134.626 32.3272 130.916 cv
32.3272 127.116 34.3472 123.979 36.9805 123.426 cv
37.3442 122.531 38.0986 121.849 39.0298 121.562 cv
39.4122 117.86 40.4253 113.965 42.607 110.586 cv
46.3335 104.813 52.6118 101.847 61.2197 101.847 cv
69.8281 101.847 76.106 104.813 79.8334 110.586 cv
82.0152 113.965 83.0283 117.86 83.4106 121.561 cv
84.3418 121.848 85.0967 122.531 85.4609 123.426 cv
88.0942 123.979 90.1143 127.116 90.1143 130.916 cv
90.1143 134.626 88.1884 137.708 85.6455 138.366 cv
85.4174 139.661 84.4272 140.69 83.1499 140.967 cv
82.1314 145.123 78.705 152.41 67.1762 153.411 cv
66.9507 154.003 66.3877 154.427 65.7163 154.427 cv
.0117647 .356863 .407843 rgb
f
70.2418 292.5 mo
67.1145 292.5 li
67.0713 210.947 li
67.0688 210.947 li
67.0727 210.088 li
67.0727 210.088 73.6909 203.336 75.7285 199.982 cv
75.8476 199.553 75.9629 199.137 76.0826 198.707 cv
76.2323 179.694 li
76.3556 179.658 76.4764 179.631 76.5937 179.612 cv
76.7644 179.584 76.9174 179.572 77.0545 179.572 cv
78.2417 179.572 78.2417 180.504 78.2417 180.504 cv
78.0825 200.707 li
77.9629 201.137 77.8476 201.553 77.7285 201.982 cv
75.691 205.336 69.0727 212.088 69.0727 212.088 cv
69.0688 212.947 li
69.0713 212.947 li
69.0722 215.033 li
70.2446 215.033 li
70.2418 292.5 li
69.9819 192.833 mo
69.8183 192.673 69.6577 192.472 69.4971 192.242 cv
69.2856 162.304 li
69.9456 162.424 70.607 162.534 71.2732 162.635 cv
71.2738 162.664 71.2742 162.692 71.2744 162.72 cv
71.4014 180.705 li
70.487 182.813 69.8468 186.26 69.9663 191.818 cv
69.9742 192.181 69.9761 192.487 69.9819 192.833 cv
.0156863 .388235 .423529 rgb
f
71.2732 162.635 mo
70.607 162.534 69.9456 162.424 69.2856 162.304 cv
69.2744 160.72 li
69.2688 159.907 69.1068 159.148 68.8298 158.5 cv
70.1917 158.886 71.2315 160.582 71.2732 162.635 cv
.0117647 .356863 .407843 rgb
f
49.3628 181.571 mo
49.3608 181.557 49.3587 181.543 49.3565 181.529 cv
49.3947 181.536 49.4327 181.544 49.4707 181.553 cv
49.4389 181.558 49.4037 181.564 49.3628 181.571 cv
55.9556 179.86 mo
55.9556 179.86 55.9785 179.396 55.8355 178.828 cv
56.114 178.882 56.356 178.969 56.5663 179.08 cv
56.5718 179.71 li
56.3618 179.763 56.1631 179.81 55.9556 179.86 cv
62.6583 178.198 mo
62.6547 177.754 li
62.6523 177.42 62.5988 177.1 62.5021 176.799 cv
62.7846 176.886 63.0498 177.015 63.291 177.178 cv
63.2963 177.93 li
63.0781 178.017 62.8813 178.113 62.6583 178.198 cv
.0156863 .388235 .423529 rgb
f
39.4429 124.886 mo
39.2959 120.371 39.8726 114.803 42.7271 110.413 cv
45.9521 105.456 51.5132 102.914 59.2197 102.914 cv
66.9263 102.914 72.4878 105.456 75.7129 110.413 cv
78.5674 114.803 79.144 120.371 78.9971 124.886 cv
81.5781 124.886 li
81.7588 119.894 81.1079 113.657 77.8335 108.586 cv
74.106 102.813 67.8281 99.8472 59.2197 99.8472 cv
50.6118 99.8472 44.3335 102.813 40.6069 108.586 cv
37.333 113.657 36.6821 119.894 36.8618 124.886 cv
39.4429 124.886 li
cp
.698039 .741176 .301961 rgb
f
37.5859 121.747 mo
37.0273 121.481 36.4302 121.33 35.8071 121.33 cv
32.7803 121.33 30.3271 124.726 30.3271 128.916 cv
30.3271 133.104 32.7803 136.5 35.8071 136.5 cv
36.4302 136.5 37.0273 136.349 37.5859 136.083 cv
37.5859 121.747 li
cp
f
39.5786 119.805 mo
39.1201 119.557 38.6035 119.403 38.0454 119.403 cv
37.9805 119.403 li
36.1904 119.403 34.7393 120.854 34.7393 122.644 cv
34.7393 135.803 li
34.7393 137.593 36.1904 139.044 37.9805 139.044 cv
38.0454 139.044 li
38.6035 139.044 39.1201 138.89 39.5786 138.642 cv
39.5786 119.805 li
cp
f
81.5815 136.085 mo
80.1299 136.082 li
80.1284 136.625 79.9136 148.724 65.0029 149.972 cv
64.7212 149.548 64.2637 149.252 63.7163 149.252 cv
58.0317 149.252 li
57.1641 149.252 56.4609 149.956 56.4609 150.824 cv
56.4609 150.855 li
56.4609 151.724 57.1641 152.427 58.0317 152.427 cv
63.7163 152.427 li
64.3877 152.427 64.9507 152.003 65.1763 151.411 cv
81.3457 150.008 81.5815 136.231 81.5815 136.085 cv
cp
f
80.855 121.747 mo
81.4141 121.481 82.0112 121.33 82.6343 121.33 cv
85.6611 121.33 88.1143 124.726 88.1143 128.916 cv
88.1143 133.104 85.6611 136.5 82.6343 136.5 cv
82.0112 136.5 81.4141 136.349 80.855 136.083 cv
80.855 121.747 li
cp
f
78.8628 119.805 mo
79.3213 119.557 79.8379 119.403 80.396 119.403 cv
80.4609 119.403 li
82.251 119.403 83.7021 120.854 83.7021 122.644 cv
83.7021 135.803 li
83.7021 137.593 82.251 139.044 80.4609 139.044 cv
80.396 139.044 li
79.8379 139.044 79.3213 138.89 78.8628 138.642 cv
78.8628 119.805 li
cp
f
74.5937 177.612 mo
72.6362 177.93 69.7227 180.487 69.9663 191.818 cv
69.9742 192.181 69.9761 192.487 69.9819 192.833 cv
69.8183 192.673 69.6577 192.472 69.4971 192.242 cv
69.2744 160.72 li
69.2578 158.332 67.8921 156.406 66.2246 156.418 cv
66.1631 156.418 li
64.4961 156.43 63.1582 158.375 63.1748 160.763 cv
63.2963 177.93 li
63.0781 178.017 62.8813 178.113 62.6583 178.198 cv
62.6547 177.754 li
62.642 176.039 61.2808 174.658 59.6138 174.669 cv
59.5532 174.67 li
57.8848 174.682 56.5435 176.082 56.5551 177.797 cv
56.5718 179.71 li
56.3618 179.763 56.1631 179.81 55.9556 179.86 cv
55.9556 179.86 56.1162 176.614 52.9376 176.772 cv
52.8769 176.772 li
51.2236 176.785 49.894 178.186 49.9053 179.903 cv
49.9166 181.471 li
49.6485 181.52 49.6011 181.531 49.3628 181.571 cv
49.1406 179.968 47.8017 179.454 46.6162 179.462 cv
46.5629 179.463 li
45.0996 179.473 43.9224 180.859 43.9351 182.558 cv
44.0791 202.996 li
44.0869 204.092 47.7226 209.976 48.2055 210.961 cv
48.209 220.086 li
67.0278 220.09 li
67.0727 210.088 li
67.0727 210.088 73.6909 203.336 75.7285 199.982 cv
75.8476 199.553 75.9629 199.137 76.0826 198.707 cv
76.2417 178.504 li
76.2417 178.504 76.2417 177.344 74.5937 177.612 cv
.988235 .752941 .513726 rgb
f
48.9491 292.5 mo
48.262 292.5 li
48.2245 220.086 li
48.951 220.086 li
48.9491 292.5 li
.0156863 .494118 .509804 rgb
f
67.1145 292.5 mo
48.9491 292.5 li
48.951 220.086 li
67.0278 220.09 li
67.0688 210.947 li
67.0713 210.947 li
67.1145 292.5 li
.0117647 .32549 .329412 rgb
f
67.0278 220.09 mo
48.951 220.086 li
48.2245 220.086 li
48.2198 210.998 li
67.0688 210.947 li
67.0278 220.09 li
.898039 .631373 .4 rgb
f
46.9512 213.027 mo
46.9487 306.518 li
68.2412 306.518 li
68.2446 213.033 li
46.9512 213.027 li
cp
.831373 .254902 .00784314 rgb
f
368.097 292.5 mo
312.739 292.5 li
321.791 280.208 328.32 265.947 331.567 250.475 cv
365.541 250.445 li
365.542 250.445 365.542 250.445 365.543 250.445 cv
366.928 250.445 368.061 251.576 368.061 252.961 cv
368.097 292.5 li
.0156863 .388235 .423529 rgb
f
312.739 292.5 mo
305.795 292.5 li
305.766 259.093 li
305.038 259.152 304.306 259.198 303.562 259.213 cv
303.215 259.22 302.873 259.223 302.532 259.223 cv
286.217 259.223 278.234 251.164 278.234 239.764 cv
278.234 229.021 289.574 220.313 303.562 220.313 cv
317.55 220.313 328.89 229.021 328.89 239.764 cv
328.89 243.758 327.313 247.428 324.623 250.481 cv
331.567 250.475 li
328.32 265.947 321.791 280.208 312.739 292.5 cv
.0117647 .356863 .407843 rgb
f
306.314 293.39 mo
363.58 293.34 li
364.966 293.339 366.098 292.205 366.098 290.819 cv
366.062 250.961 li
366.061 249.575 364.927 248.444 363.541 248.445 cv
306.275 248.496 li
304.89 248.497 303.759 249.631 303.76 251.017 cv
303.795 290.874 li
303.795 292.26 304.93 293.391 306.314 293.39 cv
cp
.286275 .32549 .360784 rgb
ef
308.604 289.38 mo
361.284 289.333 li
361.251 252.455 li
308.572 252.501 li
308.604 289.38 li
cp
1 1 1 rgb
ef
334.928 249.561 mo
335.456 249.561 335.885 249.988 335.885 250.518 cv
335.885 251.047 335.456 251.475 334.928 251.475 cv
334.399 251.475 333.972 251.047 333.972 250.518 cv
333.972 249.988 334.399 249.561 334.928 249.561 cv
cp
ef
331.789 254.911 mo
357.65 254.911 li
358.922 254.911 359.961 255.949 359.961 257.22 cv
359.961 262.762 li
359.961 264.031 358.922 265.07 357.65 265.07 cv
331.789 265.07 li
330.52 265.07 329.48 264.031 329.48 262.762 cv
329.48 257.22 li
329.48 255.949 330.52 254.911 331.789 254.911 cv
cp
.698039 .741176 .301961 rgb
ef
307.267 256.628 mo
321.357 263.718 li
317.556 252.725 li
323.251 249.187 326.89 243.847 326.89 237.764 cv
326.89 227.021 315.55 218.313 301.563 218.313 cv
287.574 218.313 276.234 227.021 276.234 237.764 cv
276.234 249.402 284.552 257.558 301.563 257.213 cv
303.523 257.173 305.434 256.974 307.267 256.628 cv
cp
1 .8 .2 rgb
ef
314.53 233.633 mo
316.606 233.633 318.29 235.316 318.29 237.393 cv
318.29 239.47 316.606 241.152 314.53 241.152 cv
312.452 241.152 310.77 239.47 310.77 237.393 cv
310.77 235.316 312.452 233.633 314.53 233.633 cv
cp
301.432 233.633 mo
303.509 233.633 305.191 235.316 305.191 237.393 cv
305.191 239.47 303.509 241.152 301.432 241.152 cv
299.354 241.152 297.671 239.47 297.671 237.393 cv
297.671 235.316 299.354 233.633 301.432 233.633 cv
cp
288.334 233.633 mo
290.41 233.633 292.094 235.316 292.094 237.393 cv
292.094 239.47 290.41 241.152 288.334 241.152 cv
286.258 241.152 284.573 239.47 284.573 237.393 cv
284.573 235.316 286.258 233.633 288.334 233.633 cv
cp
1 1 1 rgb
ef
335.288 259.768 mo
335.288 258.74 334.846 258.124 334.143 258.124 cv
333.447 258.124 332.998 258.74 332.998 259.768 cv
332.998 260.803 333.447 261.457 334.143 261.457 cv
334.846 261.457 335.288 260.803 335.288 259.768 cv
cp
331.805 259.768 mo
331.805 258.085 332.76 257.12 334.143 257.12 cv
335.533 257.12 336.481 258.093 336.481 259.768 cv
336.481 261.449 335.533 262.461 334.143 262.461 cv
332.76 262.461 331.805 261.449 331.805 259.768 cv
cp
f
337.44 257.215 mo
338.633 257.215 li
339.976 259.774 li
340.489 260.912 li
340.521 260.912 li
340.466 260.367 340.371 259.641 340.371 259.032 cv
340.371 257.215 li
341.478 257.215 li
341.478 262.366 li
340.284 262.366 li
338.941 259.799 li
338.436 258.677 li
338.403 258.677 li
338.459 259.245 338.554 259.933 338.554 260.541 cv
338.554 262.366 li
337.44 262.366 li
337.44 257.215 li
cp
f
342.681 257.215 mo
343.85 257.215 li
343.85 261.387 li
345.88 261.387 li
345.88 262.366 li
342.681 262.366 li
342.681 257.215 li
cp
f
346.753 257.215 mo
347.922 257.215 li
347.922 262.366 li
346.753 262.366 li
346.753 257.215 li
cp
f
349.12 257.215 mo
350.313 257.215 li
351.656 259.774 li
352.17 260.912 li
352.201 260.912 li
352.146 260.367 352.052 259.641 352.052 259.032 cv
352.052 257.215 li
353.157 257.215 li
353.157 262.366 li
351.965 262.366 li
350.621 259.799 li
350.115 258.677 li
350.085 258.677 li
350.14 259.245 350.234 259.933 350.234 260.541 cv
350.234 262.366 li
349.12 262.366 li
349.12 257.215 li
cp
f
354.36 257.215 mo
357.592 257.215 li
357.592 258.195 li
355.53 258.195 li
355.53 259.23 li
357.283 259.23 li
357.283 260.201 li
355.53 260.201 li
355.53 261.387 li
357.671 261.387 li
357.671 262.366 li
354.36 262.366 li
354.36 257.215 li
cp
f
352.711 268.681 mo
352.88 269.226 352.98 269.59 353.262 270.085 cv
353.641 270.751 354.035 272.546 354.571 273.364 cv
354.283 272.073 354.07 270.527 353.636 269.619 cv
353.433 269.193 353.137 268.901 352.711 268.681 cv
cp
350.288 269.221 mo
349.503 264.598 li
349.211 262.123 349.904 261.488 350.355 261.465 cv
350.752 261.445 350.999 261.646 351.377 262.963 cv
351.662 263.957 351.771 265.339 352.03 266.342 cv
352.202 267.015 352.33 267.529 352.448 267.97 cv
352.607 267.298 352.853 266.784 353.755 266.81 cv
354.347 266.827 355.316 266.823 355.708 267.142 cv
355.957 267.346 356.121 267.708 356.313 268.417 cv
356.961 268.053 357.604 268.157 358.017 268.427 cv
358.585 268.798 358.529 270.099 358.724 270.839 cv
359.586 270.521 360.131 271.094 360.37 271.907 cv
360.669 272.924 360.51 274.846 360.58 276.094 cv
360.672 277.788 360.574 279.265 360.362 280.522 cv
359.905 283.227 359.493 284.287 359.413 286.027 cv
359.376 286.824 359.477 291.224 359.622 293.334 cv
353.484 293.334 li
353.477 291.322 353.266 286.691 353.032 285.916 cv
352.223 283.232 350.281 283.011 349.259 279.251 cv
348.888 277.881 348.944 276.725 348.945 274.34 cv
348.945 273.289 348.892 272.202 348.791 271.274 cv
349.213 270.934 li
350.255 270.847 350.745 271.343 350.843 271.661 cv
350.657 271.159 350.485 269.911 350.288 269.221 cv
cp
1 .858824 .654902 rgb
ef
349.838 261.773 mo
349.984 263.191 li
350.02 263.539 350.277 263.811 350.555 263.794 cv
350.832 263.777 351.029 263.479 350.994 263.132 cv
350.844 261.69 li
350.821 261.479 350.558 261.472 350.368 261.474 cv
350.105 261.479 349.807 261.49 349.838 261.773 cv
cp
.988235 .380392 .121569 rgb
ef
348.933 271.03 mo
348.813 271.139 li
348.839 272.034 348.945 273.253 348.945 274.34 cv
348.944 276.724 348.888 277.881 349.26 279.251 cv
350.303 283.091 352.294 283.027 353.04 285.954 cv
353.235 286.72 353.486 291.297 353.501 293.334 cv
354.687 293.334 li
354.632 291.471 354.36 287.107 354.149 286.341 cv
353.251 283.083 350.996 281.913 350.304 279.78 cv
349.899 278.533 349.349 276.93 349.407 274.593 cv
349.46 272.416 349.226 271.483 349.183 271.382 cv
351.824 271.398 350.71 275.124 351.173 277.142 cv
351.146 275.176 352.389 270.742 349.203 270.927 cv
349.078 270.935 349.071 271.008 348.933 271.03 cv
cp
356.641 268.29 mo
356.526 268.326 356.416 268.372 356.313 268.431 cv
356.243 268.176 356.18 267.966 356.111 267.791 cv
356.109 267.98 356.103 268.13 356.103 268.13 cv
356.069 269.075 356.292 270.781 356.575 272 cv
356.755 272.767 356.978 273.421 357.105 273.318 cv
357.185 273.255 357.029 272.719 356.928 272.161 cv
356.742 271.149 356.462 269.711 356.6 268.438 cv
356.641 268.29 li
cp
353.879 270.442 mo
353.799 270.579 353.588 270.593 353.47 270.504 cv
353.192 270.137 352.819 269.107 352.646 268.644 cv
352.417 268.109 li
352.537 268.108 352.649 268.116 352.756 268.134 cv
352.968 268.169 353.072 268.486 353.237 268.59 cv
353.462 268.729 353.729 268.681 353.879 268.909 cv
354.181 269.373 354.242 270.562 354.413 271.603 cv
354.554 272.447 354.87 273.668 354.822 273.648 cv
354.498 273.519 354.187 272.286 354.059 271.725 cv
353.966 271.313 353.941 270.868 353.879 270.442 cv
cp
360.011 271.177 mo
359.715 270.802 359.285 270.628 358.72 270.836 cv
358.633 270.503 358.596 270.056 358.529 269.631 cv
358.553 270.557 358.373 271.12 358.498 272.046 cv
358.523 272.237 358.779 273.73 358.812 273.772 cv
359.049 274.08 358.935 273.214 358.865 272.538 cv
358.811 272.014 358.778 271.516 358.832 271.402 cv
358.991 271.065 359.418 270.997 359.655 271.035 cv
359.766 271.055 359.885 271.104 360.011 271.177 cv
cp
.831373 .713726 .545098 rgb
ef
348.767 271.509 mo
348.825 272.629 li
348.848 273.094 348.982 273.37 349.219 273.32 cv
349.484 273.263 349.541 272.867 349.523 272.456 cv
349.467 271.142 li
349.454 271.024 349.308 270.829 349.067 270.893 cv
348.826 270.958 348.747 271.147 348.767 271.509 cv
cp
.988235 .380392 .121569 rgb
ef
324.565 281.557 mo
324.044 280.821 li
323.527 281.532 li
323.654 281.641 323.822 281.779 323.822 281.779 cv
323.303 284.43 li
323.686 285.476 324.036 286.28 324.036 286.28 cv
324.036 286.28 324.375 285.455 324.764 284.396 cv
324.282 281.802 li
324.282 281.802 324.442 281.667 324.565 281.557 cv
cp
.0196078 .592157 .65098 rgb
f
328.151 270.94 mo
328.214 270.965 li
328.3 269.418 327.946 267.526 327.133 267.521 cv
327.249 267.682 327.359 267.852 327.457 268.038 cv
327.816 268.725 328.064 270.182 328.151 270.94 cv
cp
f
319.861 270.94 mo
319.919 270.927 li
319.96 269.974 320.134 268.929 320.6 268.038 cv
320.696 267.854 320.805 267.686 320.919 267.526 cv
321.622 266.555 322.666 266.054 324.028 266.054 cv
325.284 266.054 326.267 266.483 326.964 267.311 cv
326.477 265.82 324.973 264.811 322.818 265.585 cv
320.304 266.489 319.478 266.522 319.478 266.522 cv
319.751 267.003 320.039 267.403 320.336 267.735 cv
319.815 268.293 319.783 269.828 319.861 270.94 cv
cp
f
321.357 267.749 mo
321.99 266.967 322.883 266.573 324.028 266.573 cv
325.085 266.573 325.923 266.911 326.543 267.573 cv
326.695 267.743 li
326.803 267.875 326.904 268.015 326.997 268.169 cv
327.342 268.743 327.545 269.409 327.663 270.073 cv
327.698 270.269 327.75 270.748 327.771 270.94 cv
327.776 270.94 327.944 270.883 328.093 270.94 cv
328.093 270.94 327.994 270.217 327.947 269.956 cv
327.816 269.243 327.595 268.527 327.221 267.913 cv
327.12 267.748 327.011 267.599 326.895 267.458 cv
326.729 267.275 li
326.062 266.568 325.162 266.208 324.028 266.208 cv
322.799 266.208 321.84 266.629 321.157 267.463 cv
321.044 267.603 320.936 267.75 320.836 267.913 cv
320.326 268.752 320.077 269.96 319.982 270.911 cv
320.169 270.896 320.295 270.94 320.299 270.94 cv
320.39 270.096 320.613 268.912 321.06 268.169 cv
321.151 268.017 321.252 267.879 321.357 267.749 cv
cp
f
319.442 274.038 mo
319.433 273.938 li
319.433 271.567 li
319.475 271.352 li
319.001 271.452 318.638 272.014 318.638 272.697 cv
318.638 273.365 318.984 273.92 319.442 274.038 cv
cp
f
320.109 270.984 mo
320.098 270.984 li
319.991 270.984 319.894 271.015 319.808 271.063 cv
319.796 271.07 li
319.688 271.136 319.604 271.233 319.557 271.352 cv
319.514 271.567 li
319.514 273.938 li
319.524 274.038 li
319.572 274.313 319.81 274.522 320.098 274.522 cv
320.109 274.522 li
320.21 274.522 320.303 274.494 320.386 274.449 cv
320.386 274.229 li
320.386 272.991 li
320.386 271.057 li
320.287 271.017 li
320.109 270.984 li
cp
f
328.633 273.938 mo
328.623 274.038 li
329.081 273.92 329.428 273.365 329.428 272.697 cv
329.428 272.014 329.064 271.452 328.591 271.352 cv
328.633 271.567 li
328.633 273.938 li
cp
f
327.941 270.984 mo
327.764 271.017 li
327.665 271.057 li
327.665 272.791 li
327.665 274.23 li
327.665 274.449 li
327.817 274.506 li
327.941 274.522 li
327.953 274.522 li
328.076 274.509 li
328.307 274.459 328.486 274.272 328.527 274.038 cv
328.537 273.938 li
328.537 271.567 li
328.495 271.352 li
328.446 271.229 328.356 271.129 328.243 271.063 cv
328.157 271.015 328.06 270.984 327.953 270.984 cv
327.941 270.984 li
cp
f
324.956 276.471 mo
324.96 276.556 324.899 276.638 324.798 276.638 cv
323.825 276.638 li
323.736 276.638 323.664 276.565 323.664 276.472 cv
323.825 276.31 li
324.798 276.31 li
324.929 276.385 li
324.956 276.471 li
cp
325.066 276.213 mo
324.996 276.137 324.901 276.095 324.798 276.095 cv
323.825 276.095 li
323.617 276.095 323.448 276.264 323.448 276.477 cv
323.448 276.685 323.617 276.854 323.825 276.854 cv
324.798 276.854 li
324.931 276.854 325.05 276.784 325.117 276.674 cv
325.494 276.659 325.807 276.576 326.093 276.456 cv
325.91 276.656 325.707 276.846 325.49 277.014 cv
324.965 277.422 324.416 277.665 324.021 277.665 cv
323.631 277.665 323.088 277.429 322.568 277.033 cv
322.001 276.602 321.544 276.049 321.314 275.516 cv
321.267 275.405 321.223 275.298 321.183 275.193 cv
320.975 274.66 320.878 274.058 320.871 273.247 cv
320.832 272.264 320.631 271.056 320.999 270.063 cv
321.179 269.578 321.425 269.138 321.653 268.773 cv
323.287 269.597 324.972 268.954 326.016 268.348 cv
326.297 268.761 326.688 269.369 326.946 270.063 cv
327.315 271.056 327.167 272.264 327.129 273.247 cv
327.121 274.423 327.036 274.851 326.695 275.602 cv
326.286 275.942 325.738 276.148 325.066 276.213 cv
cp
324.044 280.477 mo
322.449 278.746 li
322.503 278.431 322.533 278.115 322.54 277.808 cv
322.541 277.666 li
322.54 277.546 li
322.54 277.545 li
322.539 277.279 li
322.487 277.24 li
323.035 277.646 323.592 277.881 324.021 277.881 cv
324.454 277.881 325.015 277.641 325.566 277.225 cv
325.524 277.258 li
325.518 277.527 li
325.518 277.538 li
325.517 277.683 li
325.518 277.82 li
325.524 278.12 325.554 278.424 325.604 278.725 cv
324.044 280.477 li
cp
327.64 274.619 mo
327.577 274.784 327.431 275.019 327.286 275.218 cv
327.193 275.345 327.074 275.446 326.95 275.542 cv
327.253 274.852 327.336 274.368 327.344 273.247 cv
327.529 273.247 li
327.567 271.057 li
327.665 271.017 li
327.629 270.158 327.475 269.227 327.066 268.453 cv
326.906 268.149 326.713 267.89 326.491 267.667 cv
325.89 267.062 325.065 266.75 324.028 266.75 cv
322.978 266.75 322.145 267.068 321.541 267.689 cv
321.329 267.907 321.145 268.161 320.99 268.453 cv
320.583 269.227 320.429 270.158 320.392 271.017 cv
320.49 271.057 li
320.468 273.247 li
320.655 273.247 li
320.663 274.086 320.764 274.712 320.981 275.271 cv
321.023 275.378 321.068 275.487 321.116 275.601 cv
321.354 276.152 321.818 276.722 322.394 277.17 cv
322.298 277.097 li
322.315 277.335 li
322.326 277.667 li
322.324 277.803 li
322.318 278.118 322.285 278.443 322.228 278.768 cv
322.217 278.827 li
322.446 281.215 li
324.045 280.616 li
325.645 281.215 li
325.854 278.813 li
325.8 278.504 325.74 278.124 325.733 277.815 cv
325.731 277.683 li
325.732 277.543 li
325.762 277.072 li
325.682 277.135 li
325.997 276.881 326.284 276.587 326.519 276.276 cv
326.666 276.195 327.099 275.945 327.372 275.654 cv
327.685 275.323 327.854 275.014 327.987 274.665 cv
327.64 274.619 li
cp
f
331.674 281.592 mo
331.277 280.801 330.439 280.201 329.405 279.967 cv
326.015 278.969 li
325.989 278.961 li
325.989 278.961 325.96 281.187 325.391 282.87 cv
325.195 283.449 325.012 284.044 324.816 284.577 cv
324.444 285.592 324.101 286.402 324.018 286.594 cv
323.936 286.402 323.592 285.592 323.22 284.577 cv
323.024 284.044 322.841 283.449 322.646 282.87 cv
322.076 281.187 322.047 278.961 322.047 278.961 cv
322.021 278.969 li
318.631 279.967 li
317.597 280.201 316.759 280.801 316.361 281.592 cv
316.361 281.592 315.172 285.481 315.895 285.808 cv
317.239 286.415 318.694 286.78 320.179 286.933 cv
321.455 287.063 322.736 287.128 324.018 287.129 cv
325.3 287.128 326.581 287.063 327.857 286.933 cv
329.342 286.78 330.797 286.415 332.142 285.808 cv
332.864 285.481 331.674 281.592 331.674 281.592 cv
cp
f
grestore
0 450 mo
450 450 li
450 292.5 li
0 292.5 li
0 450 li
false sop
.698039 .741176 .301961 rgb
f
183.66 426.372 mo
174.129 426.372 166.374 418.618 166.374 409.087 cv
166.374 399.556 174.129 391.802 183.66 391.802 cv
186.354 391.802 188.957 392.418 191.326 393.602 cv
191.755 393.425 192.219 393.331 192.693 393.331 cv
192.805 393.331 192.918 393.336 193.03 393.347 cv
194.355 393.471 195.504 394.316 196.017 395.544 cv
197.583 399.299 li
197.851 399.939 197.917 400.631 197.803 401.294 cv
198.914 401.294 li
199.694 401.294 200.444 401.546 201.06 402.003 cv
202.602 402.409 203.74 403.814 203.74 405.484 cv
203.74 406.247 li
204.275 406.876 204.599 407.69 204.599 408.581 cv
204.599 409.896 li
204.599 410.923 204.169 411.85 203.48 412.505 cv
202.947 413.826 201.653 414.759 200.141 414.759 cv
199.313 414.759 li
199.461 415.547 199.353 416.37 198.972 417.097 cv
195.969 422.818 190.102 426.372 183.66 426.372 cv
.454902 .482353 .196078 rgb
f
201.74 404.247 mo
201.74 403.484 li
201.74 401.813 200.602 400.409 199.06 400.003 cv
198.444 399.546 197.694 399.294 196.914 399.294 cv
195.803 399.294 li
195.917 398.631 195.851 397.939 195.583 397.299 cv
194.017 393.544 li
193.504 392.316 192.355 391.471 191.03 391.347 cv
190.917 391.336 190.805 391.331 190.693 391.331 cv
190.219 391.331 189.755 391.425 189.326 391.602 cv
186.957 390.418 184.354 389.802 181.66 389.802 cv
172.129 389.802 164.375 397.556 164.375 407.087 cv
164.375 416.618 172.129 424.372 181.66 424.372 cv
188.102 424.372 193.969 420.818 196.972 415.097 cv
197.353 414.37 197.461 413.547 197.313 412.759 cv
198.141 412.759 li
199.653 412.759 200.947 411.826 201.48 410.505 cv
202.169 409.85 202.599 408.923 202.599 407.896 cv
202.599 406.581 li
202.599 405.69 202.275 404.876 201.74 404.247 cv
cp
1 1 1 rgb
f
192.689 412.843 mo
190.608 416.814 186.447 419.532 181.66 419.532 cv
174.798 419.532 169.215 413.949 169.215 407.087 cv
169.215 400.225 174.798 394.642 181.66 394.642 cv
184.495 394.642 187.107 395.599 189.199 397.203 cv
188.36 398.479 li
192.261 398.686 li
190.694 394.931 li
189.88 396.168 li
187.59 394.436 184.747 393.401 181.66 393.401 cv
174.114 393.401 167.975 399.541 167.975 407.087 cv
167.975 414.633 174.114 420.772 181.66 420.772 cv
186.921 420.772 191.495 417.787 193.785 413.423 cv
193.371 413.341 192.982 413.148 192.689 412.843 cv
cp
.0196078 .592157 .65098 rgb
f
181.592 416.288 mo
176.628 416.288 172.589 412.25 172.589 407.286 cv
172.589 404.007 174.353 401.131 176.982 399.558 cv
177.082 399.632 177.206 399.682 177.366 399.682 cv
177.366 399.682 177.539 399.682 176.436 400.543 cv
175.333 401.405 175.435 402.602 175.78 401.849 cv
176.125 401.096 176.436 401.371 175.883 402.44 cv
175.333 403.511 176.174 403.165 176.459 403.819 cv
176.746 404.475 176.85 403.683 176.986 404.925 cv
176.986 404.925 177.333 405.338 177.953 405.132 cv
178.574 404.925 177.85 405.683 177.194 406.304 cv
176.539 406.925 176.746 407.131 177.091 407.511 cv
177.435 407.891 177.574 408.201 177.263 408.615 cv
176.953 409.028 177.747 409.166 177.953 409.407 cv
178.16 409.649 178.125 410.442 177.643 410.788 cv
177.161 411.133 177.884 411.892 177.78 412.961 cv
177.676 414.028 177.703 414.478 178.189 414.546 cv
178.677 414.616 178.125 413.615 178.332 413.168 cv
178.54 412.719 178.782 413.478 179.264 412.271 cv
179.264 412.271 180.127 412.478 180.504 411.167 cv
180.504 411.167 181.264 411.063 181.402 410.649 cv
181.54 410.236 181.368 409.96 182.471 409.063 cv
183.574 408.165 181.712 407.477 180.712 407.441 cv
180.712 407.441 180.346 407.591 180.989 406.441 cv
181.268 405.938 180.437 406.063 180.229 405.613 cv
180.022 405.166 179.541 404.648 178.574 404.752 cv
177.608 404.854 177.331 405.2 177.297 404.614 cv
177.263 404.027 177.711 403.752 177.229 403.683 cv
176.746 403.613 176.986 403.578 177.505 403.097 cv
177.505 403.097 177.194 402.888 176.884 403.199 cv
176.573 403.511 176.021 403.027 176.676 402.338 cv
177.333 401.646 178.366 401.13 178.298 402.44 cv
178.229 403.752 178.712 401.849 178.712 401.849 cv
178.712 401.849 179.436 400.922 180.333 400.854 cv
181.229 400.785 180.678 400.751 180.678 400.44 cv
180.678 400.13 181.091 400.958 181.592 400.751 cv
182.092 400.543 181.057 400.475 181.16 400.13 cv
181.264 399.785 181.851 399.888 182.092 400.337 cv
182.333 400.785 182.609 400.096 181.989 399.37 cv
181.368 398.647 181.471 399.095 180.885 399.404 cv
180.299 399.716 180.541 399.888 180.437 399.37 cv
180.333 398.854 180.299 399.404 180.022 399.131 cv
179.746 398.854 180.515 398.98 180.919 399.026 cv
181.324 399.07 181.196 398.785 181.196 398.785 cv
181.592 398.612 li
181.592 398.612 181.851 398.991 182.161 398.923 cv
182.471 398.854 181.955 398.37 182.264 398.439 cv
182.574 398.508 182.989 398.232 183.023 398.647 cv
183.058 399.061 182.781 399.612 183.919 398.991 cv
184.151 398.865 184.304 398.785 184.409 398.736 cv
184.638 398.815 li
184.645 398.898 184.672 399.006 184.816 399.095 cv
185.265 399.37 185.127 399.129 185.712 399.475 cv
186.3 399.819 185.92 400.199 186.368 400.268 cv
186.817 400.337 187.231 400.958 186.887 400.992 cv
186.542 401.026 186.507 400.613 185.99 400.543 cv
185.472 400.475 186.197 400.716 186.542 401.026 cv
186.887 401.337 186.887 401.703 186.542 401.849 cv
186.197 401.992 186.451 402.786 187.014 402.682 cv
187.577 402.579 187.369 401.992 187.679 402.131 cv
187.99 402.269 187.885 402.613 188.403 402.821 cv
188.922 403.027 188.334 403.303 188.955 403.337 cv
189.578 403.372 189.886 403.613 189.334 403.855 cv
188.782 404.098 189.06 404.303 188.575 403.716 cv
188.093 403.131 188.141 403.691 188.093 403.131 cv
188.046 402.569 187.266 403.097 186.853 403.165 cv
186.437 403.234 186.782 403.647 186.402 403.716 cv
186.022 403.785 185.85 403.683 185.955 404.579 cv
186.057 405.476 185.817 405.683 185.403 405.683 cv
184.989 405.683 185.748 406.165 185.955 406.787 cv
186.162 407.406 186.197 407.786 187.094 407.546 cv
187.99 407.305 187.713 407.305 187.818 407.786 cv
187.921 408.27 188.301 407.511 188.369 407.993 cv
188.438 408.477 187.507 408.581 188.023 408.89 cv
188.541 409.199 188.164 409.925 187.921 410.098 cv
187.679 410.271 187.851 410.89 187.334 411.167 cv
186.817 411.442 187.577 411.925 187.266 412.237 cv
186.956 412.547 186.127 412.926 186.437 413.685 cv
186.749 414.443 186.749 413.994 187.405 413.442 cv
188.058 412.892 188.611 411.96 188.922 411.995 cv
189.033 412.008 189.086 412.094 189.152 412.167 cv
187.546 414.646 184.758 416.288 181.592 416.288 cv
cp
181.592 397.768 mo
176.343 397.768 172.072 402.037 172.072 407.286 cv
172.072 412.535 176.343 416.806 181.592 416.806 cv
186.841 416.806 191.112 412.535 191.112 407.286 cv
191.112 402.037 186.841 397.768 181.592 397.768 cv
cp
.180392 .807843 .909804 rgb
f
192.735 404.746 mo
192.735 406.08 191.384 406.733 190.113 407.646 cv
192.807 407.646 li
192.807 409.158 li
187.706 409.158 li
187.706 408.729 li
187.706 408.058 188.064 407.583 188.565 407.136 cv
189.961 405.892 190.963 405.391 190.963 404.81 cv
190.963 404.469 190.74 404.156 190.194 404.156 cv
189.639 404.156 189.326 404.514 189.326 404.997 cv
189.326 405.176 li
187.732 405.176 li
187.724 404.979 li
187.724 403.717 188.601 402.894 190.364 402.894 cv
191.822 402.894 192.735 403.628 192.735 404.746 cv
cp
.0196078 .592157 .65098 rgb
f
196.914 402.894 mo
196.78 403.869 195.518 405.712 194.668 406.581 cv
196.44 406.581 li
196.44 405.301 li
196.744 404.862 197.254 403.994 197.379 403.484 cv
198.14 403.484 li
198.14 406.581 li
198.999 406.581 li
198.999 407.896 li
198.14 407.896 li
198.14 409.158 li
196.44 409.158 li
196.44 407.896 li
193.442 407.896 li
193.442 406.563 li
194.024 405.712 194.758 404.299 195.16 402.894 cv
196.914 402.894 li
cp
f
283.815 423.656 mo
282 423.656 li
281.281 423.656 li
279.619 423.656 li
276.286 423.656 li
274.685 423.656 li
274.662 423.656 li
272.623 423.656 li
272.612 423.656 li
271.037 423.656 li
267.613 423.656 li
266.119 423.656 li
265.4 423.656 li
263.417 423.656 li
261.437 423.656 259.828 422.057 259.816 420.076 cv
259.806 417.948 259.877 414.156 260.487 412.659 cv
261.526 410.114 263.39 408.816 266.167 408.686 cv
266.224 408.657 li
266.366 408.596 266.48 408.547 266.582 408.501 cv
266.484 408.321 266.386 408.143 266.284 407.962 cv
265.958 407.741 265.653 407.482 265.406 407.147 cv
264.899 406.462 264.542 405.709 264.305 404.918 cv
264.109 404.581 263.94 404.227 263.833 403.84 cv
263.368 402.185 li
263.249 401.76 263.198 401.331 263.198 400.909 cv
262.353 397.536 262.926 393.647 265.653 391.143 cv
267.499 389.45 269.88 388.518 272.355 388.518 cv
273.658 388.518 274.928 388.793 276.07 389.302 cv
276.204 389.292 276.336 389.271 276.472 389.271 cv
278.301 389.271 280.129 390.194 281.36 391.74 cv
281.585 392.022 281.811 392.355 282.025 392.725 cv
282.189 392.708 282.347 392.676 282.514 392.676 cv
293.037 392.676 li
295.583 392.676 297.654 394.747 297.654 397.294 cv
297.654 404.536 li
297.654 407.083 295.583 409.154 293.037 409.154 cv
283.996 409.154 li
283.789 409.276 li
285.329 410.072 286.588 411.6 287.003 413.201 cv
287.406 414.758 287.415 420.016 287.415 420.067 cv
287.409 422.052 285.799 423.656 283.815 423.656 cv
.454902 .482353 .196078 rgb
f
291.037 390.676 mo
280.514 390.676 li
280.347 390.676 280.188 390.708 280.025 390.725 cv
279.812 390.355 279.586 390.022 279.36 389.74 cv
278.129 388.194 276.301 387.271 274.472 387.271 cv
274.336 387.271 274.204 387.292 274.07 387.302 cv
272.928 386.793 271.658 386.518 270.355 386.518 cv
267.88 386.518 265.499 387.45 263.653 389.143 cv
260.926 391.647 260.353 395.536 261.198 398.909 cv
261.198 399.331 261.249 399.76 261.368 400.186 cv
261.833 401.84 li
261.94 402.227 262.109 402.581 262.304 402.918 cv
262.542 403.709 262.899 404.462 263.406 405.147 cv
263.653 405.482 263.958 405.741 264.284 405.962 cv
264.386 406.143 264.484 406.321 264.582 406.501 cv
264.479 406.547 264.366 406.596 264.224 406.657 cv
264.167 406.686 li
261.39 406.816 259.526 408.114 258.487 410.659 cv
257.877 412.156 257.806 415.948 257.816 418.076 cv
257.828 420.057 259.437 421.656 261.417 421.656 cv
263.4 421.656 li
264.119 421.656 li
265.613 421.656 li
269.037 421.656 li
270.612 421.656 li
270.623 421.656 li
272.662 421.656 li
272.686 421.656 li
274.286 421.656 li
277.619 421.656 li
279.281 421.656 li
280 421.656 li
281.815 421.656 li
283.799 421.656 285.409 420.052 285.415 418.067 cv
285.415 418.016 285.406 412.758 285.003 411.201 cv
284.588 409.6 283.329 408.072 281.789 407.276 cv
281.996 407.154 li
291.037 407.154 li
293.583 407.154 295.654 405.083 295.654 402.536 cv
295.654 395.294 li
295.654 392.747 293.583 390.676 291.037 390.676 cv
cp
1 1 1 rgb
ef
273.248 391.34 mo
274.203 390.479 275.656 390.869 276.545 391.983 cv
277.541 393.234 277.656 394.671 277.406 396.044 cv
277.382 401.718 274.025 404.148 273.065 409.747 cv
269.38 408.674 li
268.081 404.311 266.094 402.899 265.105 399.099 cv
263.574 393.212 266.635 391.472 269.981 391.819 cv
271.024 391.927 272.144 391.988 273.188 392.144 cv
273.06 391.93 272.922 391.73 272.775 391.55 cv
273.248 391.34 li
cp
.498039 .32549 .105882 rgb
ef
268.303 408.407 mo
268.527 407.924 268.684 407.749 269.257 407.724 cv
269.566 408.762 li
268.851 409.329 li
268.28 409.258 li
268.303 408.407 li
cp
.992157 .741176 .027451 rgb
ef
274.481 408.407 mo
274.257 407.924 274.101 407.749 273.527 407.724 cv
273.218 408.762 li
273.934 409.329 li
274.504 409.258 li
274.481 408.407 li
cp
ef
268.614 404.569 mo
269.118 406.501 269.052 408.537 268.34 409.45 cv
268.158 409.684 267.396 409.866 266.598 410.016 cv
265.507 410.221 264.138 410.382 263.549 410.505 cv
261.888 410.851 261.677 413.013 261.765 413.891 cv
261.879 415.037 262.92 414.844 263.217 415.794 cv
263.285 416.012 263.358 416.508 263.433 417.063 cv
264.132 417.442 264.86 417.774 265.613 418.056 cv
277.619 418.056 li
278.045 417.897 278.462 417.723 278.87 417.532 cv
279.134 415.414 li
281.653 413.66 li
281.61 409.566 277.529 410.623 275.411 409.766 cv
273.682 409.065 273.528 407.607 273.67 404.636 cv
268.614 404.569 li
cp
1 .858824 .654902 rgb
ef
281.815 418.056 mo
281.82 416.41 281.704 412.82 281.519 412.104 cv
281.347 411.443 280.696 410.744 280.097 410.448 cv
278.934 409.874 277.358 410.063 276.054 409.925 cv
275.883 409.88 275.72 409.828 275.565 409.766 cv
274.802 409.456 274.549 408.737 274.289 408.067 cv
274.485 410.196 273.529 414.747 272.686 418.056 cv
281.815 418.056 li
cp
.968627 .733333 .109804 rgb
ef
268.614 404.569 mo
269.092 406.642 269.17 408.483 268.124 409.547 cv
268.235 409.528 268.369 413.878 268.966 417.49 cv
270.494 417.49 li
270.246 416.295 269.968 415.048 269.719 413.922 cv
269.256 411.829 269.294 410.202 269.287 409.942 cv
269.275 409.464 272.771 407.824 273.598 405.963 cv
273.59 405.403 273.635 405.385 273.67 404.636 cv
268.614 404.569 li
cp
.933333 .784314 .356863 rgb
ef
270.611 418.056 mo
269.615 414.805 268.38 410.992 268.471 408.847 cv
268.47 408.468 li
268.112 409.585 267.749 409.801 266.598 410.016 cv
265.953 410.137 265.172 410.206 264.519 410.269 cv
263.071 410.293 262.366 410.684 261.82 412.02 cv
261.502 412.8 261.407 416.474 261.417 418.056 cv
270.611 418.056 li
cp
.968627 .733333 .109804 rgb
ef
268.48 408.057 mo
267.256 409.19 267.178 409.307 265.644 409.965 cv
266.456 410.726 267.282 411.448 268.119 412.182 cv
266.34 412.698 li
266.955 413.911 268.181 416.364 269.037 418.056 cv
270.623 418.056 li
269.813 415.323 268.656 411.333 268.48 408.057 cv
cp
1 .866667 .470588 rgb
ef
274.281 408.048 mo
275.506 409.182 275.584 409.307 277.118 409.965 cv
276.306 410.726 275.479 411.448 274.643 412.182 cv
276.422 412.698 li
275.762 414.001 274.995 416.353 274.285 418.056 cv
272.663 418.056 li
273.354 415.202 274.121 411.027 274.281 408.048 cv
cp
ef
266.322 398.148 mo
265.852 397.444 265.297 397.924 265.468 398.776 cv
265.608 399.471 265.929 400.26 266.106 401.052 cv
266.229 401.595 266.423 401.979 266.899 401.878 cv
266.847 399.619 li
266.322 398.148 li
cp
1 .858824 .654902 rgb
ef
266.037 398.246 mo
265.815 398.084 265.648 398.209 265.604 398.469 cv
265.538 398.852 265.913 399.587 266.035 400.036 cv
266.002 399.416 265.623 398.813 265.7 398.479 cv
265.747 398.273 265.914 398.239 266.084 398.424 cv
266.037 398.246 li
cp
.909804 .572549 .439216 rgb
ef
276.152 398.148 mo
276.623 397.444 277.178 397.924 277.006 398.776 cv
276.865 399.471 276.545 400.26 276.367 401.052 cv
276.246 401.595 276.051 401.979 275.574 401.878 cv
275.627 399.619 li
276.152 398.148 li
cp
1 .858824 .654902 rgb
ef
273.172 405.629 mo
273.752 405.113 274.193 404.63 274.742 403.743 cv
275.394 402.692 275.649 401.969 275.922 400.149 cv
276.129 398.759 276.302 397.313 276.073 396.001 cv
275.628 393.451 273.95 391.513 271.237 391.521 cv
268.232 391.531 266.765 392.724 266.324 395.598 cv
266.036 397.475 266.152 398.687 266.47 400.27 cv
266.821 402.022 267.126 403.01 267.87 404.057 cv
268.341 404.719 268.707 405.162 269.18 405.574 cv
270.143 406.411 270.663 406.78 271.2 406.78 cv
271.751 406.78 272.315 406.391 273.172 405.629 cv
cp
ef
265.617 400.255 mo
264.199 397.998 263.727 393.964 266.089 391.796 cv
268.293 389.772 271.536 389.614 273.537 391.13 cv
273.391 391.173 274.887 392.459 275.354 393.116 cv
275.585 393.441 275.442 393.509 275.273 393.521 cv
276.303 395.429 276.92 395.892 276.651 397.333 cv
276.547 397.896 276.156 399.318 275.835 400.401 cv
276 399.264 276.035 398.401 276.072 397.557 cv
276.142 395.998 275.281 394.729 275.073 393.664 cv
275.081 393.521 li
275.071 393.521 li
274.82 393.938 274.446 394.299 273.991 394.63 cv
272.947 395.614 271.479 396.146 270.261 396.614 cv
269.423 397.042 268.598 397.515 267.886 398.095 cv
266.929 398.876 266.723 399.649 266.7 400.662 cv
266.503 400.411 266.407 399.965 266.33 399.72 cv
265.784 400.669 265.604 401.785 266.303 403.011 cv
265.676 402.161 265.499 401.198 265.617 400.255 cv
cp
.498039 .32549 .105882 rgb
ef
264.942 414.996 mo
264.107 415.444 263.49 416.613 263.4 418.056 cv
264.119 418.056 li
264.199 416.914 264.579 415.749 264.942 414.996 cv
cp
.992157 .741176 .027451 rgb
ef
278.457 414.996 mo
279.293 415.444 279.91 416.613 280 418.056 cv
279.281 418.056 li
279.2 416.914 278.821 415.749 278.457 414.996 cv
cp
ef
271.901 403.931 mo
273.264 403.616 li
273.537 403.554 273.813 403.675 273.958 403.899 cv
274.337 403.703 274.683 403.449 274.982 403.149 cv
275.4 402.732 275.729 402.226 275.937 401.661 cv
275.775 401.625 li
275.238 401.46 275.841 398.92 276.504 398.116 cv
276.504 395.799 li
276.504 394.673 276.043 393.648 275.3 392.905 cv
274.558 392.163 273.533 391.702 272.406 391.702 cv
270.091 391.702 li
268.964 391.702 267.939 392.163 267.197 392.905 cv
266.455 393.648 265.994 394.673 265.994 395.799 cv
265.994 398.081 li
266.646 398.872 267.201 401.479 266.654 401.633 cv
266.072 401.795 265.463 401.453 265.3 400.871 cv
264.835 399.214 li
264.683 398.667 264.975 398.097 265.493 397.894 cv
265.493 395.799 li
265.493 394.534 266.011 393.385 266.844 392.552 cv
267.677 391.719 268.826 391.201 270.091 391.201 cv
272.406 391.201 li
273.672 391.201 274.82 391.719 275.653 392.552 cv
276.486 393.385 277.004 394.534 277.004 395.799 cv
277.004 397.906 li
277.533 398.113 277.823 398.701 277.654 399.253 cv
277.148 400.897 li
277.045 401.234 276.792 401.485 276.484 401.602 cv
276.261 402.328 275.861 402.979 275.336 403.504 cv
274.975 403.865 274.554 404.167 274.089 404.394 cv
274.08 404.683 273.878 404.942 273.584 405.01 cv
272.222 405.323 li
271.873 405.404 271.521 405.184 271.441 404.835 cv
271.412 404.712 li
271.332 404.362 271.553 404.011 271.901 403.931 cv
cp
.286275 .32549 .360784 rgb
ef
291.037 394.275 mo
280.514 394.275 li
279.953 394.275 279.495 394.733 279.495 395.294 cv
279.495 401.973 li
277.813 405.438 li
281.018 403.554 li
291.037 403.554 li
291.598 403.554 292.055 403.096 292.055 402.536 cv
292.055 395.294 li
292.055 394.733 291.598 394.275 291.037 394.275 cv
cp
.831373 .254902 .00784314 rgb
ef
288.813 398.043 mo
289.295 398.043 289.686 398.434 289.686 398.915 cv
289.686 399.396 289.295 399.787 288.813 399.787 cv
288.331 399.787 287.94 399.396 287.94 398.915 cv
287.94 398.434 288.331 398.043 288.813 398.043 cv
cp
285.774 398.043 mo
286.257 398.043 286.647 398.434 286.647 398.915 cv
286.647 399.396 286.257 399.787 285.774 399.787 cv
285.294 399.787 284.902 399.396 284.902 398.915 cv
284.902 398.434 285.294 398.043 285.774 398.043 cv
cp
282.737 398.043 mo
283.219 398.043 283.609 398.434 283.609 398.915 cv
283.609 399.396 283.219 399.787 282.737 399.787 cv
282.256 399.787 281.865 399.396 281.865 398.915 cv
281.865 398.434 282.256 398.043 282.737 398.043 cv
cp
.968627 .733333 .109804 rgb
ef
gsave
320.438 424.699 mo
316.356 424.699 li
312.272 424.699 li
309.728 424.699 307.659 422.631 307.659 420.087 cv
307.659 404.244 li
307.659 401.7 309.728 399.631 312.272 399.631 cv
316.095 399.631 li
315.999 399.071 315.933 398.507 315.933 397.935 cv
315.933 392.167 320.797 387.475 326.775 387.475 cv
332.526 387.475 337.233 391.82 337.584 397.284 cv
340.087 399.095 341.717 401.973 341.717 405.219 cv
341.717 406.898 341.272 408.544 340.444 410.001 cv
340.715 411.339 li
340.985 412.677 340.477 414.052 339.4 414.891 cv
338.756 415.394 337.974 415.652 337.186 415.652 cv
336.659 415.652 336.129 415.537 335.636 415.302 cv
334.41 414.716 li
333.451 414.994 332.448 415.139 331.443 415.139 cv
329.027 415.139 326.808 414.324 325.052 412.972 cv
325.052 420.087 li
325.052 422.631 322.982 424.699 320.438 424.699 cv
clp
307.659 387.475 mo
341.717 387.475 li
341.717 424.699 li
307.659 424.699 li
cp
.454902 .482353 .196078 rgb
f
grestore
338.444 408.001 mo
339.272 406.544 339.717 404.898 339.717 403.219 cv
339.717 399.973 338.087 397.095 335.584 395.284 cv
335.233 389.82 330.526 385.475 324.775 385.475 cv
318.797 385.475 313.933 390.167 313.933 395.935 cv
313.933 396.507 313.999 397.071 314.095 397.631 cv
310.272 397.631 li
307.729 397.631 305.659 399.7 305.659 402.244 cv
305.659 418.087 li
305.659 420.631 307.729 422.699 310.272 422.699 cv
314.356 422.699 li
318.438 422.699 li
320.982 422.699 323.052 420.631 323.052 418.087 cv
323.052 410.972 li
324.808 412.324 327.027 413.139 329.443 413.139 cv
330.448 413.139 331.451 412.994 332.41 412.716 cv
333.636 413.302 li
334.129 413.537 334.659 413.652 335.186 413.652 cv
335.974 413.652 336.756 413.394 337.4 412.891 cv
338.477 412.052 338.985 410.677 338.715 409.339 cv
338.444 408.001 li
cp
1 1 1 rgb
ef
310.272 401.231 mo
318.439 401.231 li
318.996 401.231 319.451 401.687 319.451 402.244 cv
319.451 418.087 li
319.451 418.645 318.996 419.1 318.439 419.1 cv
310.272 419.1 li
309.716 419.1 309.26 418.645 309.26 418.087 cv
309.26 402.244 li
309.26 401.687 309.716 401.231 310.272 401.231 cv
cp
.0196078 .576471 .631373 rgb
ef
310.13 415.874 mo
318.581 415.874 li
318.581 403.102 li
310.13 403.102 li
310.13 415.874 li
cp
.678431 .913725 .941176 rgb
ef
310.395 402.166 mo
318.225 402.166 li
318.329 402.166 318.414 402.252 318.414 402.356 cv
318.414 402.46 318.329 402.546 318.225 402.546 cv
310.395 402.546 li
310.291 402.546 310.205 402.46 310.205 402.356 cv
310.205 402.252 310.291 402.166 310.395 402.166 cv
cp
.760784 .870588 .882353 rgb
ef
313.492 416.336 mo
315.22 416.336 li
315.497 416.336 315.724 416.563 315.724 416.84 cv
315.724 418.15 li
315.724 418.428 315.497 418.655 315.22 418.655 cv
313.492 418.655 li
313.214 418.655 312.987 418.428 312.987 418.15 cv
312.987 416.84 li
312.987 416.563 313.214 416.336 313.492 416.336 cv
cp
ef
314.355 418.022 mo
314.646 418.022 314.883 417.786 314.883 417.495 cv
314.883 417.205 314.646 416.968 314.355 416.968 cv
314.065 416.968 313.828 417.205 313.828 417.495 cv
313.828 417.786 314.065 418.022 314.355 418.022 cv
cp
.0196078 .576471 .631373 rgb
ef
314.356 401.231 mo
318.439 401.231 li
318.996 401.231 319.451 401.687 319.451 402.244 cv
319.451 418.087 li
319.451 418.645 318.996 419.1 318.439 419.1 cv
314.356 419.1 li
314.356 418.632 li
315.35 417.723 li
314.356 416.354 li
314.356 415.856 li
316.372 414.862 li
314.356 403.119 li
314.356 402.515 li
315.115 402.439 li
314.356 402.177 li
314.356 401.231 li
cp
.0156863 .454902 .501961 rgb
ef
314.356 403.102 mo
318.581 403.102 li
318.581 415.874 li
314.356 415.874 li
314.356 403.102 li
cp
.537255 .807843 .839216 rgb
ef
314.356 402.166 mo
318.225 402.166 li
318.329 402.166 318.414 402.252 318.414 402.356 cv
318.414 402.46 318.329 402.546 318.225 402.546 cv
314.356 402.546 li
314.356 402.166 li
cp
.592157 .784314 .8 rgb
ef
314.356 416.336 mo
315.22 416.336 li
315.497 416.336 315.724 416.563 315.724 416.84 cv
315.724 418.15 li
315.724 418.428 315.497 418.655 315.22 418.655 cv
314.356 418.655 li
314.356 417.957 li
314.797 417.507 li
314.356 417.048 li
314.356 416.336 li
cp
ef
314.356 416.968 mo
314.647 416.968 314.883 417.204 314.883 417.495 cv
314.883 417.786 314.647 418.022 314.356 418.022 cv
314.356 416.968 li
cp
.164706 .439216 .454902 rgb
ef
334.613 407.215 mo
335.187 410.052 li
332.569 408.804 li
331.637 409.272 330.573 409.539 329.443 409.539 cv
325.758 409.539 322.77 406.709 322.77 403.219 cv
322.77 399.728 325.758 396.898 329.443 396.898 cv
333.129 396.898 336.116 399.728 336.116 403.219 cv
336.116 404.734 335.553 406.126 334.613 407.215 cv
cp
.968627 .733333 .109804 rgb
ef
326.091 402.256 mo
325.56 402.256 325.128 402.688 325.128 403.219 cv
325.128 403.75 325.56 404.181 326.091 404.181 cv
326.622 404.181 327.053 403.75 327.053 403.219 cv
327.053 402.688 326.622 402.256 326.091 402.256 cv
cp
329.443 402.256 mo
328.912 402.256 328.481 402.688 328.481 403.219 cv
328.481 403.75 328.912 404.181 329.443 404.181 cv
329.975 404.181 330.405 403.75 330.405 403.219 cv
330.405 402.688 329.975 402.256 329.443 402.256 cv
cp
332.796 402.256 mo
332.265 402.256 331.833 402.688 331.833 403.219 cv
331.833 403.75 332.265 404.181 332.796 404.181 cv
333.327 404.181 333.759 403.75 333.759 403.219 cv
333.759 402.688 333.327 402.256 332.796 402.256 cv
cp
.839216 .984314 1 rgb
ef
319.164 400.271 mo
318.543 403.351 li
321.383 401.995 li
322.395 402.505 323.55 402.794 324.775 402.794 cv
328.775 402.794 332.019 399.723 332.019 395.934 cv
332.019 392.146 328.775 389.074 324.775 389.074 cv
320.775 389.074 317.533 392.146 317.533 395.934 cv
317.533 397.579 318.145 399.089 319.164 400.271 cv
cp
.286275 .32549 .360784 rgb
ef
328.818 394.742 mo
329.46 394.742 329.979 395.262 329.979 395.903 cv
329.979 396.544 329.46 397.063 328.818 397.063 cv
328.178 397.063 327.658 396.544 327.658 395.903 cv
327.658 395.262 328.178 394.742 328.818 394.742 cv
cp
324.775 394.742 mo
325.416 394.742 325.937 395.262 325.937 395.903 cv
325.937 396.544 325.416 397.063 324.775 397.063 cv
324.135 397.063 323.615 396.544 323.615 395.903 cv
323.615 395.262 324.135 394.742 324.775 394.742 cv
cp
320.732 394.742 mo
321.374 394.742 321.894 395.262 321.894 395.903 cv
321.894 396.544 321.374 397.063 320.732 397.063 cv
320.092 397.063 319.572 396.544 319.572 395.903 cv
319.572 395.262 320.092 394.742 320.732 394.742 cv
cp
.839216 .984314 1 rgb
ef
231.221 424.168 mo
229.889 424.168 228.56 423.831 227.157 423.139 cv
226.982 423.055 li
225.657 422.429 221.625 420.522 217.484 415.179 cv
213.357 409.812 212.535 405.433 212.266 403.994 cv
212.229 403.803 li
211.69 401.18 212.123 398.895 213.515 396.991 cv
213.76 396.39 214.161 395.844 214.71 395.418 cv
216.861 393.758 li
217.52 393.245 218.354 392.96 219.2 392.96 cv
220.378 392.96 221.512 393.517 222.23 394.451 cv
222.495 394.793 li
224.382 390.818 228.941 388.006 234.262 388.006 cv
241.265 388.006 246.963 392.874 246.963 398.858 cv
246.963 399.699 246.839 400.515 246.626 401.301 cv
248.058 402.884 248.92 404.87 248.92 407.031 cv
248.92 407.709 248.834 408.387 248.666 409.049 cv
250.215 409.594 250.993 411.081 250.81 412.753 cv
250.617 414.502 248.948 415.77 247.191 415.867 cv
246.902 415.883 246.629 415.891 246.369 415.891 cv
244.998 415.891 243.889 415.684 242.995 415.364 cv
241.768 415.897 240.423 416.212 239.039 416.313 cv
239.436 417.019 239.61 417.831 239.505 418.656 cv
239.375 419.673 238.855 420.577 238.043 421.203 cv
235.9 422.856 li
235.37 423.268 234.728 423.532 234.061 423.621 cv
233.137 423.984 232.186 424.168 231.221 424.168 cv
227.512 408.592 mo
227.256 408.674 226.981 408.745 226.694 408.811 cv
227.065 409.218 227.477 409.597 227.885 409.921 cv
227.722 409.49 227.601 409.046 227.512 408.592 cv
.454902 .482353 .196078 rgb
f
224.694 406.811 mo
224.981 406.745 225.255 406.674 225.512 406.592 cv
225.601 407.046 225.722 407.491 225.884 407.921 cv
225.477 407.597 225.065 407.218 224.694 406.811 cv
cp
246.666 407.049 mo
246.834 406.387 246.92 405.709 246.92 405.031 cv
246.92 402.87 246.058 400.884 244.626 399.301 cv
244.839 398.515 244.963 397.699 244.963 396.858 cv
244.963 390.874 239.265 386.006 232.262 386.006 cv
226.941 386.006 222.382 388.819 220.495 392.793 cv
220.23 392.451 li
219.512 391.517 218.378 390.96 217.2 390.96 cv
216.354 390.96 215.521 391.245 214.861 391.758 cv
212.71 393.418 li
212.161 393.844 211.76 394.39 211.515 394.991 cv
210.123 396.895 209.69 399.18 210.229 401.803 cv
210.266 401.994 li
210.535 403.433 211.357 407.812 215.484 413.179 cv
219.625 418.522 223.657 420.429 224.982 421.055 cv
225.157 421.139 li
226.56 421.831 227.889 422.168 229.221 422.168 cv
230.186 422.168 231.137 421.984 232.062 421.621 cv
232.729 421.532 233.37 421.268 233.9 420.856 cv
236.043 419.203 li
236.855 418.577 237.375 417.673 237.505 416.656 cv
237.61 415.831 237.437 415.019 237.039 414.313 cv
238.423 414.212 239.768 413.897 240.995 413.364 cv
241.889 413.684 242.998 413.891 244.369 413.891 cv
244.629 413.891 244.902 413.883 245.191 413.867 cv
246.948 413.77 248.617 412.502 248.81 410.753 cv
248.993 409.081 248.215 407.594 246.666 407.049 cv
cp
1 1 1 rgb
f
233.888 416.033 mo
229.703 410.612 li
229.627 410.514 229.485 410.495 229.387 410.571 cv
227.242 412.228 li
227.144 412.304 227.125 412.445 227.201 412.544 cv
227.239 412.594 li
225.744 412.463 223.048 410.589 221.458 408.563 cv
219.901 406.513 218.771 403.43 219.022 401.95 cv
219.061 402 li
219.137 402.099 219.279 402.117 219.378 402.041 cv
221.522 400.385 li
221.621 400.309 221.639 400.167 221.563 400.068 cv
217.378 394.647 li
217.302 394.549 217.16 394.53 217.061 394.606 cv
214.915 396.264 li
214.817 396.339 214.799 396.479 214.875 396.577 cv
214.876 396.579 li
213.739 397.76 213.355 399.133 213.755 401.078 cv
213.955 402.05 214.46 405.941 218.33 410.974 cv
222.218 415.99 225.86 417.471 226.75 417.91 cv
228.531 418.789 229.956 418.766 231.387 417.965 cv
231.388 417.967 li
231.463 418.063 231.604 418.082 231.701 418.007 cv
233.848 416.35 li
233.946 416.273 233.965 416.132 233.888 416.033 cv
cp
.286275 .32549 .360784 rgb
f
236.135 399.304 mo
240.103 399.304 243.32 401.868 243.32 405.031 cv
243.32 405.875 243.089 406.676 242.678 407.396 cv
243.436 409.585 244.991 410.272 244.991 410.272 cv
242.382 410.418 241.387 409.645 241.038 409.215 cv
239.754 410.171 238.03 410.758 236.135 410.758 cv
232.165 410.758 228.948 408.193 228.948 405.031 cv
228.948 401.868 232.165 399.304 236.135 399.304 cv
cp
.988235 .74902 .109804 rgb
f
232.262 389.606 mo
227.236 389.606 223.162 392.854 223.162 396.858 cv
223.162 397.928 223.454 398.941 223.975 399.855 cv
223.016 402.625 221.045 403.497 221.045 403.497 cv
224.35 403.681 225.61 402.702 226.051 402.157 cv
227.678 403.368 229.86 404.111 232.262 404.111 cv
237.288 404.111 241.362 400.864 241.362 396.858 cv
241.362 392.854 237.288 389.606 232.262 389.606 cv
cp
.0823529 .686275 .745098 rgb
f
233.443 400.628 mo
231.058 400.628 li
231.058 398.398 li
233.443 398.398 li
233.443 400.628 li
cp
235.323 394.65 mo
235.323 396.289 233.263 396.771 233.263 397.411 cv
233.263 397.663 li
231.202 397.663 li
231.202 397.061 li
231.202 396.181 232.769 395.675 232.769 394.698 cv
232.769 394.253 232.479 393.855 231.974 393.855 cv
231.322 393.855 231.189 394.361 231.189 394.867 cv
231.189 394.977 231.189 395.085 231.202 395.193 cv
228.984 395.193 li
228.973 395.036 228.948 394.892 228.948 394.735 cv
228.948 393.168 230.347 392.192 232.238 392.192 cv
234.082 392.192 235.323 393.156 235.323 394.65 cv
cp
1 1 1 rgb
f
234.971 407.533 mo
234.971 407.917 234.659 408.229 234.274 408.229 cv
233.89 408.229 233.578 407.917 233.578 407.533 cv
233.578 407.148 233.89 406.837 234.274 406.837 cv
234.659 406.837 234.971 407.148 234.971 407.533 cv
cp
f
237.055 407.533 mo
237.055 407.917 236.743 408.229 236.358 408.229 cv
235.974 408.229 235.662 407.917 235.662 407.533 cv
235.662 407.148 235.974 406.837 236.358 406.837 cv
236.743 406.837 237.055 407.148 237.055 407.533 cv
cp
f
239.139 407.533 mo
239.139 407.917 238.827 408.229 238.442 408.229 cv
238.059 408.229 237.747 407.917 237.747 407.533 cv
237.747 407.148 238.059 406.837 238.442 406.837 cv
238.827 406.837 239.139 407.148 239.139 407.533 cv
cp
f
377.732 424.96 mo
377.727 424.96 li
376.43 424.959 375.255 424.395 374.505 423.409 cv
373.806 422.501 li
374.381 422.799 375.036 422.959 375.727 422.96 cv
375.732 422.96 li
376.064 422.96 377.055 422.954 378.754 422.142 cv
379.109 421.963 379.417 421.774 379.719 421.548 cv
381.573 420.132 li
382.637 419.331 383.314 418.192 383.479 416.926 cv
383.637 415.699 383.288 414.435 382.539 413.483 cv
375.122 403.889 li
377.041 399.501 376.476 394.378 373.466 390.456 cv
373.387 390.353 373.307 390.252 373.226 390.152 cv
374.051 390.818 374.803 391.589 375.466 392.456 cv
378.476 396.378 379.041 401.501 377.122 405.889 cv
384.539 415.483 li
385.288 416.435 385.637 417.699 385.479 418.926 cv
385.313 420.192 384.637 421.331 383.573 422.132 cv
381.719 423.548 li
381.417 423.774 381.109 423.963 380.754 424.142 cv
379.055 424.954 378.064 424.96 377.732 424.96 cv
364.862 413.917 mo
360.794 413.917 357.035 412.123 354.491 408.981 cv
356.833 410.872 359.757 411.917 362.862 411.917 cv
363.603 411.917 364.335 411.856 365.056 411.737 cv
366.643 413.799 li
366.056 413.877 365.462 413.917 364.862 413.917 cv
.454902 .482353 .196078 rgb
f
382.539 413.483 mo
375.122 403.889 li
377.041 399.501 376.476 394.378 373.466 390.456 cv
370.92 387.125 367.054 385.214 362.857 385.214 cv
359.9 385.214 357.094 386.168 354.743 387.971 cv
348.9 392.448 347.787 400.846 352.261 406.688 cv
354.805 410.012 358.669 411.917 362.862 411.917 cv
363.603 411.917 364.335 411.856 365.056 411.737 cv
372.505 421.409 li
373.255 422.394 374.43 422.959 375.727 422.96 cv
375.732 422.96 li
376.064 422.96 377.055 422.954 378.754 422.142 cv
379.109 421.963 379.417 421.774 379.719 421.548 cv
381.573 420.132 li
382.637 419.331 383.314 418.192 383.479 416.926 cv
383.637 415.699 383.288 414.435 382.539 413.483 cv
1 1 1 rgb
f
362.398 401.648 mo
362.14 402.579 361.175 403.124 360.243 402.865 cv
359.313 402.605 358.769 401.642 359.027 400.711 cv
359.286 399.78 360.251 399.235 361.181 399.494 cv
362.112 399.753 362.657 400.717 362.398 401.648 cv
362.644 397.93 mo
362.418 397.798 362.178 397.689 361.93 397.606 cv
361.628 398.127 li
361.336 398.044 361.032 398.001 360.724 398.004 cv
360.572 397.417 li
360.313 397.428 360.054 397.466 359.797 397.532 cv
359.825 398.141 li
359.681 398.185 359.538 398.239 359.398 398.305 cv
359.258 398.369 359.125 398.443 358.999 398.525 cv
358.551 398.112 li
358.335 398.266 358.139 398.439 357.963 398.63 cv
358.315 399.124 li
358.115 399.358 357.951 399.618 357.826 399.896 cv
357.234 399.79 li
357.138 400.034 357.065 400.287 357.022 400.546 cv
357.574 400.768 li
357.531 401.068 357.531 401.377 357.577 401.685 cv
357.036 401.911 li
357.086 402.164 357.164 402.416 357.269 402.662 cv
357.836 402.554 li
357.842 402.567 li
357.974 402.851 358.141 403.104 358.337 403.327 cv
358.015 403.795 li
358.198 403.987 358.4 404.157 358.616 404.305 cv
359.024 403.918 li
359.286 404.085 359.57 404.214 359.867 404.299 cv
359.85 404.851 li
360.105 404.913 360.368 404.949 360.633 404.956 cv
360.764 404.424 li
361.069 404.422 361.379 404.377 361.682 404.285 cv
361.962 404.753 li
362.085 404.71 362.208 404.661 362.33 404.605 cv
362.45 404.549 362.567 404.486 362.68 404.42 cv
362.502 403.904 li
362.768 403.73 363.001 403.523 363.198 403.29 cv
363.69 403.534 li
363.856 403.326 363.997 403.102 364.114 402.867 cv
363.681 402.525 li
363.807 402.242 363.893 401.942 363.934 401.635 cv
364.491 401.572 li
364.519 401.312 364.519 401.047 364.489 400.783 cv
363.924 400.728 li
363.88 400.435 363.793 400.144 363.661 399.86 cv
363.655 399.848 li
364.104 399.482 li
363.984 399.244 363.841 399.022 363.679 398.821 cv
363.157 399.089 li
362.952 398.855 362.716 398.657 362.458 398.496 cv
362.644 397.93 li
.831373 .254902 .00784314 rgb
f
367.298 396.197 mo
367.017 397.05 366.096 397.513 365.243 397.232 cv
364.39 396.95 363.926 396.03 364.207 395.177 cv
364.489 394.323 365.409 393.859 366.264 394.142 cv
367.116 394.423 367.579 395.343 367.298 396.197 cv
367.691 392.753 mo
367.486 392.62 367.268 392.509 367.042 392.42 cv
366.738 392.891 li
366.471 392.8 366.189 392.747 365.903 392.736 cv
365.788 392.185 li
365.548 392.184 365.305 392.207 365.063 392.257 cv
365.062 392.824 li
364.927 392.858 364.792 392.902 364.658 392.957 cv
364.525 393.012 364.398 393.074 364.277 393.144 cv
363.88 392.741 li
363.672 392.874 363.481 393.026 363.311 393.196 cv
363.615 393.671 li
363.419 393.88 363.256 394.114 363.127 394.366 cv
362.582 394.243 li
362.482 394.465 362.404 394.696 362.351 394.935 cv
362.854 395.166 li
362.802 395.443 362.788 395.729 362.817 396.018 cv
362.305 396.204 li
362.341 396.441 362.4 396.679 362.486 396.913 cv
363.02 396.837 li
363.024 396.849 li
363.134 397.118 363.278 397.361 363.45 397.577 cv
363.131 397.998 li
363.292 398.185 363.473 398.351 363.667 398.497 cv
364.063 398.157 li
364.298 398.323 364.557 398.454 364.829 398.547 cv
364.789 399.06 li
365.023 399.129 365.267 399.174 365.512 399.191 cv
365.656 398.702 li
365.94 398.716 366.23 398.687 366.516 398.615 cv
366.755 399.062 li
366.872 399.028 366.988 398.988 367.103 398.94 cv
367.219 398.894 367.33 398.841 367.438 398.784 cv
367.295 398.297 li
367.55 398.148 367.775 397.966 367.97 397.758 cv
368.415 398.006 li
368.578 397.82 368.721 397.618 368.839 397.404 cv
368.451 397.067 li
368.581 396.811 368.674 396.536 368.725 396.252 cv
369.246 396.219 li
369.282 395.978 369.294 395.732 369.279 395.484 cv
368.757 395.409 li
368.728 395.135 368.661 394.859 368.551 394.591 cv
368.546 394.578 li
368.978 394.261 li
368.877 394.032 368.754 393.82 368.612 393.627 cv
368.116 393.852 li
367.935 393.627 367.727 393.433 367.494 393.27 cv
367.691 392.753 li
.0823529 .686275 .745098 rgb
f
362.871 406.643 mo
360.446 406.643 358.047 405.553 356.459 403.479 cv
353.749 399.944 354.419 394.877 357.957 392.167 cv
359.423 391.044 361.151 390.5 362.864 390.5 cv
365.288 390.5 367.682 391.587 369.271 393.659 cv
371.979 397.203 371.31 402.27 367.773 404.975 cv
366.31 406.099 364.584 406.643 362.871 406.643 cv
359.024 403.918 mo
359.286 404.085 359.57 404.214 359.867 404.299 cv
359.85 404.851 li
360.105 404.913 360.368 404.949 360.633 404.956 cv
360.764 404.424 li
361.069 404.422 361.379 404.377 361.682 404.285 cv
361.962 404.753 li
362.085 404.71 362.208 404.661 362.33 404.605 cv
362.45 404.549 362.567 404.486 362.68 404.42 cv
362.502 403.904 li
362.768 403.73 363.001 403.523 363.198 403.29 cv
363.69 403.534 li
363.856 403.326 363.997 403.102 364.114 402.867 cv
363.681 402.525 li
363.807 402.242 363.893 401.942 363.934 401.635 cv
364.491 401.572 li
364.519 401.312 364.519 401.047 364.489 400.783 cv
363.924 400.728 li
363.88 400.435 363.793 400.144 363.661 399.86 cv
363.655 399.848 li
364.104 399.482 li
363.984 399.244 363.841 399.022 363.679 398.821 cv
363.157 399.089 li
362.952 398.855 362.716 398.657 362.458 398.496 cv
362.644 397.93 li
362.418 397.798 362.178 397.689 361.93 397.606 cv
361.628 398.127 li
361.345 398.047 361.052 398.004 360.753 398.004 cv
360.743 398.004 360.733 398.004 360.724 398.004 cv
360.572 397.417 li
360.313 397.428 360.054 397.466 359.797 397.532 cv
359.825 398.141 li
359.681 398.185 359.538 398.239 359.398 398.305 cv
359.258 398.369 359.125 398.443 358.999 398.525 cv
358.551 398.112 li
358.335 398.266 358.139 398.439 357.963 398.63 cv
358.315 399.124 li
358.115 399.358 357.951 399.618 357.826 399.896 cv
357.234 399.79 li
357.138 400.034 357.065 400.287 357.022 400.546 cv
357.574 400.768 li
357.531 401.068 357.531 401.377 357.577 401.685 cv
357.036 401.911 li
357.086 402.164 357.164 402.416 357.269 402.662 cv
357.836 402.554 li
357.842 402.567 li
357.974 402.851 358.141 403.104 358.337 403.327 cv
358.015 403.795 li
358.198 403.987 358.4 404.157 358.616 404.305 cv
359.024 403.918 li
362.937 391.299 mo
362.428 391.299 361.91 391.346 361.389 391.444 cv
357.344 392.214 354.628 395.762 355.313 399.375 cv
355.336 399.536 355.38 399.697 355.428 399.858 cv
355.059 396.425 357.713 393.155 361.574 392.426 cv
362.099 392.326 362.62 392.278 363.131 392.278 cv
363.797 392.278 364.445 392.359 365.063 392.514 cv
365.062 392.824 li
364.927 392.858 364.792 392.902 364.658 392.957 cv
364.525 393.012 364.398 393.074 364.277 393.144 cv
363.88 392.741 li
363.672 392.874 363.481 393.026 363.311 393.196 cv
363.615 393.671 li
363.419 393.88 363.256 394.114 363.127 394.366 cv
362.582 394.243 li
362.482 394.465 362.404 394.696 362.351 394.935 cv
362.854 395.166 li
362.802 395.443 362.788 395.729 362.817 396.018 cv
362.305 396.204 li
362.341 396.441 362.4 396.679 362.486 396.913 cv
363.02 396.837 li
363.024 396.849 li
363.134 397.118 363.278 397.361 363.45 397.577 cv
363.131 397.998 li
363.292 398.185 363.473 398.351 363.667 398.497 cv
364.063 398.157 li
364.298 398.323 364.557 398.454 364.829 398.547 cv
364.789 399.06 li
365.023 399.129 365.267 399.174 365.512 399.191 cv
365.656 398.702 li
365.702 398.704 365.748 398.705 365.795 398.705 cv
366.034 398.705 366.277 398.676 366.516 398.615 cv
366.755 399.062 li
366.872 399.028 366.988 398.988 367.103 398.94 cv
367.219 398.894 367.33 398.841 367.438 398.784 cv
367.295 398.297 li
367.55 398.148 367.775 397.966 367.97 397.758 cv
368.415 398.006 li
368.578 397.82 368.721 397.618 368.839 397.404 cv
368.451 397.067 li
368.581 396.811 368.674 396.536 368.725 396.252 cv
369.246 396.219 li
369.282 395.978 369.294 395.732 369.279 395.484 cv
368.757 395.409 li
368.728 395.135 368.661 394.859 368.551 394.591 cv
368.546 394.578 li
368.583 394.551 li
369.249 395.267 369.746 396.126 370.014 397.09 cv
370.014 397.09 li
370.014 397.09 li
369.994 396.93 369.979 396.761 369.942 396.599 cv
369.781 395.741 369.442 394.957 368.965 394.271 cv
368.978 394.261 li
368.877 394.032 368.754 393.82 368.612 393.627 cv
368.498 393.679 li
368.24 393.388 367.954 393.12 367.644 392.876 cv
367.691 392.753 li
367.486 392.62 367.268 392.509 367.042 392.42 cv
367.027 392.443 li
365.859 391.712 364.44 391.299 362.937 391.299 cv
360.713 402.93 mo
360.558 402.93 360.4 402.909 360.243 402.865 cv
359.313 402.605 358.769 401.642 359.027 400.711 cv
359.242 399.937 359.946 399.43 360.712 399.43 cv
360.867 399.43 361.024 399.451 361.181 399.494 cv
362.112 399.753 362.657 400.717 362.398 401.648 cv
362.183 402.422 361.48 402.93 360.713 402.93 cv
1 1 1 rgb
f
360.633 404.956 mo
360.368 404.949 360.105 404.913 359.85 404.851 cv
359.867 404.299 li
359.57 404.214 359.286 404.085 359.024 403.918 cv
358.616 404.305 li
358.4 404.157 358.198 403.987 358.015 403.795 cv
358.337 403.327 li
358.141 403.104 357.974 402.851 357.842 402.567 cv
357.836 402.554 li
357.269 402.662 li
357.164 402.416 357.086 402.164 357.036 401.911 cv
357.577 401.685 li
357.531 401.377 357.531 401.068 357.574 400.768 cv
357.022 400.546 li
357.065 400.287 357.138 400.034 357.234 399.79 cv
357.826 399.896 li
357.951 399.618 358.115 399.358 358.315 399.124 cv
357.963 398.63 li
358.139 398.439 358.335 398.266 358.551 398.112 cv
358.999 398.525 li
359.125 398.443 359.258 398.369 359.398 398.305 cv
359.538 398.239 359.681 398.185 359.825 398.141 cv
359.797 397.532 li
360.054 397.466 360.313 397.428 360.572 397.417 cv
360.724 398.004 li
360.733 398.004 360.743 398.004 360.753 398.004 cv
361.052 398.004 361.345 398.047 361.628 398.127 cv
361.93 397.606 li
362.178 397.689 362.418 397.798 362.644 397.93 cv
362.458 398.496 li
362.716 398.657 362.952 398.855 363.157 399.089 cv
363.679 398.821 li
363.841 399.022 363.984 399.244 364.104 399.482 cv
363.655 399.848 li
363.661 399.86 li
363.793 400.144 363.88 400.435 363.924 400.728 cv
364.489 400.783 li
364.519 401.047 364.519 401.312 364.491 401.572 cv
363.934 401.635 li
363.893 401.942 363.807 402.242 363.681 402.525 cv
364.114 402.867 li
363.997 403.102 363.856 403.326 363.69 403.534 cv
363.198 403.29 li
363.001 403.523 362.768 403.73 362.502 403.904 cv
362.68 404.42 li
362.567 404.486 362.45 404.549 362.33 404.605 cv
362.208 404.661 362.085 404.71 361.962 404.753 cv
361.682 404.285 li
361.379 404.377 361.069 404.422 360.764 404.424 cv
360.633 404.956 li
360.712 399.43 mo
359.946 399.43 359.242 399.937 359.027 400.711 cv
358.769 401.642 359.313 402.605 360.243 402.865 cv
360.4 402.909 360.558 402.93 360.713 402.93 cv
361.48 402.93 362.183 402.422 362.398 401.648 cv
362.657 400.717 362.112 399.753 361.181 399.494 cv
361.024 399.451 360.867 399.43 360.712 399.43 cv
.890196 .596078 .505882 rgb
f
365.752 397.314 mo
365.583 397.314 365.412 397.288 365.243 397.232 cv
364.39 396.95 363.926 396.03 364.207 395.177 cv
364.433 394.493 365.069 394.059 365.752 394.059 cv
365.922 394.059 366.094 394.086 366.264 394.142 cv
367.116 394.423 367.579 395.343 367.298 396.197 cv
367.072 396.881 366.435 397.314 365.752 397.314 cv
1 1 1 rgb
f
365.512 399.191 mo
365.267 399.174 365.023 399.129 364.789 399.06 cv
364.829 398.547 li
364.557 398.454 364.298 398.323 364.063 398.157 cv
363.667 398.497 li
363.473 398.351 363.292 398.185 363.131 397.998 cv
363.45 397.577 li
363.278 397.361 363.134 397.118 363.024 396.849 cv
363.02 396.837 li
362.486 396.913 li
362.4 396.679 362.341 396.441 362.305 396.204 cv
362.817 396.018 li
362.788 395.729 362.802 395.443 362.854 395.166 cv
362.351 394.935 li
362.404 394.696 362.482 394.465 362.582 394.243 cv
363.127 394.366 li
363.256 394.114 363.419 393.88 363.615 393.671 cv
363.311 393.196 li
363.481 393.026 363.672 392.874 363.88 392.741 cv
364.277 393.144 li
364.398 393.074 364.525 393.012 364.658 392.957 cv
364.792 392.902 364.927 392.858 365.062 392.824 cv
365.063 392.514 li
366.446 392.86 367.672 393.571 368.583 394.551 cv
368.546 394.578 li
368.551 394.591 li
368.661 394.859 368.728 395.135 368.757 395.409 cv
369.279 395.484 li
369.294 395.732 369.282 395.978 369.246 396.219 cv
368.725 396.252 li
368.674 396.536 368.581 396.811 368.451 397.067 cv
368.839 397.404 li
368.721 397.618 368.578 397.82 368.415 398.006 cv
367.97 397.758 li
367.775 397.966 367.55 398.148 367.295 398.297 cv
367.438 398.784 li
367.33 398.841 367.219 398.894 367.103 398.94 cv
366.988 398.988 366.872 399.028 366.755 399.062 cv
366.516 398.615 li
366.277 398.676 366.034 398.705 365.795 398.705 cv
365.748 398.705 365.702 398.704 365.656 398.702 cv
365.512 399.191 li
365.752 394.059 mo
365.069 394.059 364.433 394.493 364.207 395.177 cv
363.926 396.03 364.39 396.95 365.243 397.232 cv
365.412 397.288 365.583 397.314 365.752 397.314 cv
366.435 397.314 367.072 396.881 367.298 396.197 cv
367.579 395.343 367.116 394.423 366.264 394.142 cv
366.094 394.086 365.922 394.059 365.752 394.059 cv
368.965 394.271 mo
368.821 394.064 368.666 393.867 368.498 393.679 cv
368.612 393.627 li
368.754 393.82 368.877 394.032 368.978 394.261 cv
368.965 394.271 li
367.644 392.876 mo
367.448 392.721 367.242 392.577 367.027 392.443 cv
367.042 392.42 li
367.268 392.509 367.486 392.62 367.691 392.753 cv
367.644 392.876 li
.4 .831372 .87451 rgb
f
356.459 403.479 mo
353.749 399.944 354.419 394.877 357.957 392.167 cv
361.497 389.455 366.56 390.122 369.271 393.659 cv
371.979 397.203 371.31 402.27 367.773 404.975 cv
364.238 407.691 359.169 407.018 356.459 403.479 cv
379.69 415.685 mo
370.822 404.214 li
373.23 400.818 373.274 396.12 370.605 392.642 cv
367.332 388.359 361.208 387.549 356.933 390.828 cv
352.661 394.102 351.848 400.227 355.119 404.5 cv
357.829 408.039 362.489 409.196 366.442 407.638 cv
375.368 419.228 li
375.624 419.563 376.603 419.181 377.14 418.924 cv
377.27 418.857 377.408 418.781 377.533 418.687 cv
379.118 417.477 li
379.407 417.257 li
380.045 416.776 380.016 416.099 379.69 415.685 cv
.968627 .733333 .109804 rgb
f
355.428 399.858 mo
355.38 399.697 355.336 399.536 355.313 399.375 cv
354.628 395.762 357.344 392.214 361.389 391.444 cv
361.91 391.346 362.428 391.299 362.937 391.299 cv
364.44 391.299 365.859 391.712 367.027 392.443 cv
366.738 392.891 li
366.471 392.8 366.189 392.747 365.903 392.736 cv
365.788 392.185 li
365.783 392.185 365.778 392.185 365.773 392.185 cv
365.537 392.185 365.299 392.208 365.063 392.257 cv
365.063 392.514 li
364.445 392.359 363.797 392.278 363.131 392.278 cv
362.62 392.278 362.099 392.326 361.574 392.426 cv
357.713 393.155 355.059 396.425 355.428 399.858 cv
370.014 397.09 mo
369.746 396.126 369.249 395.267 368.583 394.551 cv
368.965 394.271 li
369.442 394.957 369.781 395.741 369.942 396.599 cv
369.979 396.761 369.994 396.93 370.014 397.09 cv
368.116 393.852 mo
367.935 393.627 367.727 393.433 367.494 393.27 cv
367.644 392.876 li
367.954 393.12 368.24 393.388 368.498 393.679 cv
368.116 393.852 li
1 1 1 rgb
f
368.583 394.551 mo
367.672 393.571 366.446 392.86 365.063 392.514 cv
365.063 392.257 li
365.299 392.208 365.537 392.185 365.773 392.185 cv
365.778 392.185 365.783 392.185 365.788 392.185 cv
365.903 392.736 li
366.189 392.747 366.471 392.8 366.738 392.891 cv
367.027 392.443 li
367.242 392.577 367.448 392.721 367.644 392.876 cv
367.494 393.27 li
367.727 393.433 367.935 393.627 368.116 393.852 cv
368.498 393.679 li
368.666 393.867 368.821 394.064 368.965 394.271 cv
368.583 394.551 li
f
92.668 427.64 mo
91.1152 427.64 li
90.4248 427.64 li
85.5826 427.64 li
76.4712 427.64 li
74.7881 427.64 73.3291 426.473 72.959 424.83 cv
72.7241 423.788 72.5424 422.587 72.4087 421.386 cv
72.1147 418.741 72.0537 416.095 72.1723 415.12 cv
72.314 413.972 72.7051 413.018 73.165 412.178 cv
73.4414 411.673 73.7422 411.209 74.0288 410.767 cv
74.0953 410.663 li
74.1743 410.54 74.2539 410.416 74.334 410.291 cv
74.4438 410.117 li
74.5517 409.944 74.6601 409.766 74.7681 409.581 cv
74.8443 409.448 li
74.8975 409.35 li
74.9111 408.829 75.0331 408.311 75.272 407.832 cv
75.5835 407.209 75.7554 406.801 75.98 406.184 cv
75.7495 405.557 75.6416 405.381 75.3764 405.025 cv
73.3531 402.311 72.3794 396.929 74.9766 393.89 cv
76.5053 390.844 79.0752 389.078 82.4497 388.767 cv
82.7876 388.735 83.1293 388.72 83.4717 388.72 cv
84.8936 388.72 86.2085 388.978 87.3789 389.437 cv
88.7754 386.542 91.732 384.534 95.1562 384.534 cv
98.9136 384.534 li
103.677 384.534 107.553 388.41 107.553 393.174 cv
107.553 397.454 104.424 401.018 100.333 401.696 cv
99.4937 403.346 98.0474 404.99 95.3921 405.936 cv
94.9966 406.077 94.5883 406.145 94.1846 406.145 cv
93.9213 406.145 93.6607 406.116 93.4057 406.06 cv
93.4614 407.146 93.1108 408.006 92.7154 408.616 cv
92.3505 409.179 91.5742 410.028 90.1669 410.363 cv
91.9907 412.21 94.0083 414.586 94.9492 416.106 cv
95.0249 416.206 95.1079 416.301 95.1816 416.401 cv
95.2153 416.444 li
95.3579 416.64 95.4805 416.849 95.5811 417.069 cv
95.5913 417.096 li
95.6826 417.297 95.7627 417.498 95.8354 417.703 cv
95.8676 417.794 95.8936 417.886 95.9224 417.977 cv
95.9507 418.067 95.9829 418.156 96.0083 418.248 cv
96.0185 418.304 li
96.3979 419.732 96.3574 421.21 96.2944 423.216 cv
96.2666 424.141 li
96.2119 426.089 94.6166 427.64 92.668 427.64 cv
.454902 .482353 .196078 rgb
f
96.9136 382.534 mo
93.1563 382.534 li
89.7319 382.534 86.7754 384.542 85.3789 387.438 cv
84.2085 386.979 82.8936 386.72 81.4717 386.72 cv
81.1294 386.72 80.7876 386.735 80.4497 386.767 cv
77.0752 387.078 74.5054 388.844 72.9766 391.89 cv
70.3794 394.929 71.353 400.312 73.3765 403.025 cv
73.6416 403.381 73.7495 403.557 73.98 404.184 cv
73.7554 404.801 73.5835 405.209 73.272 405.832 cv
73.0327 406.311 72.9111 406.829 72.8975 407.35 cv
72.8442 407.448 li
72.7681 407.581 li
72.6602 407.766 72.5518 407.944 72.4438 408.117 cv
72.334 408.291 li
72.2539 408.416 72.1743 408.54 72.0952 408.663 cv
72.0288 408.767 li
71.7422 409.209 71.4414 409.673 71.165 410.178 cv
70.7051 411.019 70.314 411.972 70.1724 413.12 cv
70.0537 414.095 70.1147 416.742 70.4087 419.386 cv
70.5425 420.587 70.7241 421.788 70.959 422.83 cv
71.3291 424.473 72.7881 425.64 74.4712 425.64 cv
83.5825 425.64 li
88.4253 425.64 li
89.1152 425.64 li
90.668 425.64 li
92.6167 425.64 94.2119 424.089 94.2666 422.141 cv
94.2944 421.216 li
94.3574 419.21 94.3979 417.732 94.0186 416.304 cv
94.0083 416.248 li
93.9829 416.156 93.9507 416.067 93.9224 415.977 cv
93.8936 415.886 93.8677 415.794 93.8354 415.703 cv
93.7627 415.498 93.6826 415.297 93.5913 415.096 cv
93.5811 415.069 li
93.4805 414.849 93.3579 414.64 93.2153 414.444 cv
93.1816 414.401 li
93.1079 414.301 93.0249 414.206 92.9492 414.106 cv
92.0078 412.586 89.9907 410.21 88.167 408.363 cv
89.5742 408.028 90.3506 407.179 90.7153 406.616 cv
91.1108 406.006 91.4614 405.146 91.4058 404.06 cv
91.6606 404.116 91.9214 404.145 92.1846 404.145 cv
92.5884 404.145 92.9966 404.077 93.3921 403.936 cv
96.0474 402.99 97.4937 401.346 98.3335 399.696 cv
102.424 399.018 105.553 395.454 105.553 391.174 cv
105.553 386.41 101.677 382.534 96.9136 382.534 cv
cp
1 1 1 rgb
ef
77.5215 400.97 mo
77.9248 403.388 77.8096 404.967 77.228 406.54 cv
75.8149 410.364 73.9951 411.531 73.7461 413.558 cv
73.6348 414.467 73.7905 419.019 74.4712 422.039 cv
88.4248 422.039 li
86.9072 413.256 li
86.2451 412.402 83.7266 409.17 83.7085 409.09 cv
83.5332 408.305 83.8716 408.382 83.9517 407.022 cv
83.9971 406.258 83.6831 405.894 83.957 405.457 cv
84.3574 404.817 85.7837 404.994 86.7231 404.806 cv
79.7363 398.017 li
77.5215 400.97 li
cp
1 .858824 .654902 rgb
ef
77.228 406.54 mo
75.8149 410.364 73.9951 411.531 73.7461 413.558 cv
73.6348 414.467 73.7905 419.019 74.4712 422.039 cv
89.1157 422.039 li
90.0581 416.288 li
89.1128 414.201 83.8838 409.158 83.7085 409.09 cv
77.228 406.54 li
cp
.592157 .784314 .8 rgb
ef
83.7866 408.093 mo
83.8501 407.862 83.9204 407.552 83.9517 407.022 cv
83.9971 406.258 83.6831 405.894 83.957 405.457 cv
84.3574 404.817 85.7837 404.994 86.7231 404.806 cv
79.7363 398.017 li
79.1606 398.784 li
79.6035 402.144 81.6909 405.717 83.7866 408.093 cv
cp
1 .815686 .54902 rgb
ef
87.4482 400.766 mo
87.4268 401.102 87.4868 401.285 87.811 401.478 cv
87.8755 401.704 87.7578 401.981 87.521 402.091 cv
87.752 402.233 87.8916 402.516 87.7583 402.842 cv
87.5522 402.914 87.4678 403.011 87.4575 403.119 cv
87.4243 403.456 88.0967 404.038 87.6943 404.659 cv
87.209 405.406 83.9653 404.318 82.4561 403.819 cv
81.2056 403.406 81.4814 402.547 81.437 401.267 cv
80.7817 401.446 80.2393 401.316 80.0664 400.278 cv
79.0273 399.168 78.5957 398.209 77.8516 396.89 cv
77.8516 396.89 79.2754 391.037 79.4067 390.984 cv
79.5391 390.932 83.9419 390.905 83.9419 390.905 cv
84.5767 391.667 85.5317 392.321 86.209 393.219 cv
87.1475 394.462 87.1299 395.717 87.395 396.337 cv
87.6201 396.862 87.5747 397.133 87.4922 397.421 cv
87.4541 397.554 87.3784 397.721 87.396 397.854 cv
87.5366 398.918 88.6943 399.707 88.6777 400.01 cv
88.6641 400.258 88.2271 400.745 87.4482 400.766 cv
cp
1 .858824 .654902 rgb
ef
86.9985 394.734 mo
86.1929 394.082 83.647 392.734 82.8149 394.272 cv
82.623 394.626 83.2905 394.714 83.2607 395.604 cv
83.2407 396.216 82.9219 396.526 82.8472 397.053 cv
82.7427 397.795 83.085 398.13 82.8066 399.243 cv
82.2266 399.085 li
81.6709 398.529 80.3301 397.248 79.5073 397.63 cv
78.8711 397.926 79.272 399.107 79.8438 399.906 cv
80.1504 400.334 80.2061 400.809 80.1162 401.124 cv
79.9185 401.821 79.2598 401.553 78.6743 402.266 cv
78.1968 402.848 77.9834 403.729 77.771 404.12 cv
77.1997 402.448 77.0039 401.867 76.2617 400.872 cv
75.0322 399.223 74.3198 395.316 75.978 393.97 cv
77.0439 391.479 78.7817 390.536 80.7808 390.352 cv
83.6826 390.083 86.9248 391.517 86.9985 394.734 cv
cp
.498039 .32549 .105882 rgb
ef
76.8721 407.433 mo
75.5259 410.562 73.9746 411.698 73.7461 413.558 cv
73.6348 414.467 73.7905 419.019 74.4712 422.039 cv
90.668 422.039 li
90.7524 419.048 90.8667 417.792 90.3066 416.565 cv
86.6274 411.519 81.5093 408.986 76.8721 407.433 cv
cp
.0196078 .576471 .631373 rgb
ef
90.668 422.039 mo
90.7524 419.048 90.8667 417.792 90.3066 416.565 cv
88.9683 414.729 87.4399 413.227 85.8135 411.983 cv
83.834 413.164 li
84.6953 415.957 85.1948 416.983 82.9902 419.122 cv
83.2852 420.566 83.4766 421.355 83.583 422.039 cv
90.668 422.039 li
cp
.0156863 .454902 .501961 rgb
ef
77.625 404.674 mo
77.2432 405.769 77.0117 406.402 76.4917 407.442 cv
78.8511 408.002 82.8149 409.947 84.375 409.947 cv
83.9341 408.938 83.584 408.72 83.6631 407.838 cv
81.4761 406.921 79.6924 405.838 77.625 404.674 cv
cp
.760784 .870588 .882353 rgb
ef
76.8721 407.433 mo
76.5957 408.074 76.311 408.633 76.0308 409.131 cv
77.0845 410.259 80.3086 411.233 81.939 412.215 cv
82.7563 411.028 li
83.3364 413.138 li
85.1094 413.882 88.6641 415.097 90.5366 417.2 cv
90.4771 416.981 90.4014 416.773 90.3066 416.565 cv
86.6274 411.519 81.5093 408.986 76.8721 407.433 cv
cp
.0196078 .576471 .631373 rgb
ef
95.7764 396.213 mo
95.3154 398.095 94.5415 399.705 92.1836 400.545 cv
92.9634 399.22 92.9761 397.658 92.7734 396.198 cv
90.1787 396.001 88.1172 393.816 88.1172 391.174 cv
88.1172 388.402 90.3843 386.134 93.1563 386.134 cv
96.9136 386.134 li
99.6851 386.134 101.953 388.402 101.953 391.174 cv
101.953 393.945 99.6851 396.213 96.9136 396.213 cv
95.7764 396.213 li
cp
.992157 .752941 .0588235 rgb
ef
99.6108 389.881 mo
90.459 389.881 li
90.459 389.561 li
99.6108 389.561 li
99.6108 389.881 li
cp
99.6108 390.802 mo
99.6108 391.122 li
90.459 391.122 li
90.459 390.802 li
99.6108 390.802 li
cp
99.6108 392.022 mo
99.6108 392.343 li
90.459 392.343 li
90.459 392.022 li
99.6108 392.022 li
cp
99.6108 393.243 mo
99.6108 393.563 li
90.459 393.563 li
90.459 393.243 li
99.6108 393.243 li
cp
99.6108 388.359 mo
99.6108 388.681 li
90.459 388.681 li
90.459 388.359 li
99.6108 388.359 li
cp
1 .866667 .470588 rgb
ef
419.077 424.97 mo
413.687 424.97 li
411.592 424.97 li
411.513 424.97 li
409.488 424.97 li
409.478 424.97 li
409.261 424.97 li
408.548 424.97 li
407.865 424.97 li
407.625 424.97 li
407.61 424.97 li
405.686 424.97 li
405.608 424.97 li
403.406 424.97 li
398.013 424.97 li
397.152 424.97 396.326 424.628 395.719 424.019 cv
395.11 423.408 394.771 422.583 394.772 421.722 cv
394.775 420.804 li
394.783 416.995 394.784 416.991 394.805 416.777 cv
395.293 411.551 399.511 411.551 400.896 411.551 cv
401.053 411.551 401.236 411.558 401.407 411.561 cv
401.659 411.551 li
401.75 411.551 401.855 411.555 401.95 411.557 cv
402.083 411.533 402.252 411.489 402.433 411.432 cv
402.294 411.046 402.212 410.686 402.168 410.363 cv
401.825 409.843 401.555 409.233 401.397 408.532 cv
401.371 408.438 401.316 408.289 401.263 408.133 cv
401.121 407.72 400.961 407.251 400.865 406.765 cv
400.669 405.768 400.809 404.824 401.231 404.053 cv
400.973 401.715 401.345 399.229 403.762 397.41 cv
405.136 396.379 406.787 395.834 408.537 395.834 cv
409.374 395.834 410.436 395.992 411.444 396.344 cv
411.287 395.781 li
411.212 395.515 411.174 395.245 411.158 394.976 cv
410.674 392.903 411.046 390.518 412.83 388.88 cv
414.011 387.798 415.531 387.204 417.116 387.204 cv
417.824 387.204 418.516 387.339 419.163 387.575 cv
420.514 387.584 421.796 388.225 422.685 389.339 cv
423.363 390.19 424.089 391.613 423.81 393.633 cv
423.806 393.696 li
424.018 394.406 424.015 395.162 423.79 395.885 cv
423.546 396.684 li
423.46 396.961 423.336 397.215 423.196 397.458 cv
423.328 397.513 li
424.384 398.032 425.233 398.998 425.619 400.082 cv
427.655 400.082 li
429.956 400.082 431.829 401.955 431.829 404.256 cv
431.829 410.893 li
431.829 412.159 431.249 413.282 430.355 414.048 cv
430.355 415.164 li
430.355 417.351 428.575 419.131 426.388 419.131 cv
422.314 419.131 li
422.315 419.784 422.316 420.624 422.317 421.728 cv
422.318 422.588 421.977 423.412 421.369 424.02 cv
420.762 424.628 419.938 424.97 419.077 424.97 cv
.454902 .482353 .196078 rgb
f
425.655 398.082 mo
423.619 398.082 li
423.233 396.998 422.384 396.032 421.328 395.513 cv
421.196 395.458 li
421.336 395.215 421.46 394.961 421.546 394.684 cv
421.79 393.885 li
422.015 393.162 422.018 392.406 421.806 391.696 cv
421.811 391.633 li
422.089 389.613 421.363 388.19 420.686 387.339 cv
419.796 386.225 418.514 385.584 417.163 385.575 cv
416.516 385.339 415.824 385.204 415.116 385.204 cv
413.531 385.204 412.011 385.798 410.83 386.88 cv
409.046 388.519 408.674 390.903 409.158 392.976 cv
409.174 393.245 409.212 393.515 409.287 393.781 cv
409.444 394.344 li
408.436 393.992 407.374 393.834 406.537 393.834 cv
404.787 393.834 403.136 394.379 401.762 395.41 cv
399.345 397.229 398.973 399.715 399.231 402.053 cv
398.809 402.824 398.669 403.768 398.865 404.765 cv
398.961 405.251 399.121 405.72 399.263 406.133 cv
399.316 406.289 399.371 406.438 399.396 406.532 cv
399.554 407.233 399.825 407.843 400.168 408.363 cv
400.212 408.687 400.294 409.046 400.433 409.432 cv
400.252 409.489 400.083 409.533 399.95 409.556 cv
399.854 409.555 399.75 409.551 399.659 409.551 cv
399.407 409.562 li
399.236 409.558 399.053 409.551 398.896 409.551 cv
397.511 409.551 393.293 409.551 392.805 414.777 cv
392.784 414.991 392.783 414.995 392.775 418.804 cv
392.772 419.722 li
392.771 420.583 393.11 421.408 393.719 422.019 cv
394.326 422.628 395.152 422.97 396.013 422.97 cv
401.407 422.97 li
403.608 422.97 li
403.686 422.97 li
405.61 422.97 li
405.625 422.97 li
405.865 422.97 li
406.548 422.97 li
407.261 422.97 li
407.478 422.97 li
407.488 422.97 li
409.513 422.97 li
409.592 422.97 li
411.688 422.97 li
417.077 422.97 li
417.938 422.97 418.762 422.628 419.369 422.02 cv
419.977 421.412 420.318 420.588 420.317 419.728 cv
420.316 418.624 420.315 417.784 420.314 417.131 cv
424.388 417.131 li
426.575 417.131 428.355 415.351 428.355 413.164 cv
428.355 412.048 li
429.249 411.282 429.829 410.159 429.829 408.893 cv
429.829 402.256 li
429.829 399.955 427.956 398.082 425.655 398.082 cv
cp
1 1 1 rgb
ef
409.343 411.146 mo
409.674 412.023 411.936 412.854 412.94 412.811 cv
415.736 412.689 416.354 413.042 416.476 415.574 cv
416.48 415.682 416.486 415.996 416.493 416.431 cv
415.158 417.851 413.522 418.983 411.688 419.73 cv
401.406 419.73 li
399.725 419.046 398.211 418.037 396.941 416.78 cv
396.94 416.234 396.94 415.83 396.945 415.712 cv
397.051 413.055 397.641 412.688 400.486 412.811 cv
401.362 412.849 403.56 411.803 403.799 411.146 cv
404.042 410.478 404.053 409.432 403.898 408.742 cv
406.57 408.793 li
409.243 408.742 li
409.089 409.432 409.092 410.48 409.343 411.146 cv
cp
1 .858824 .654902 rgb
ef
403.353 411.636 mo
406.563 411.979 li
409.813 411.615 li
409.513 419.73 li
403.686 419.73 li
403.353 411.636 li
cp
1 1 1 rgb
ef
403.452 406.633 mo
403.606 404.789 li
403.333 404.521 403.137 404.343 402.994 404.121 cv
402.603 403.514 402.356 403.373 402.118 403.551 cv
402.021 403.622 401.987 403.851 402.044 404.137 cv
402.143 404.638 402.458 405.384 402.558 405.822 cv
402.637 406.175 403.099 407.382 403.452 406.633 cv
cp
1 .858824 .654902 rgb
ef
409.633 406.633 mo
409.479 404.789 li
409.752 404.521 409.948 404.343 410.091 404.121 cv
410.482 403.514 410.729 403.373 410.968 403.551 cv
411.063 403.622 411.098 403.851 411.041 404.137 cv
410.942 404.638 410.627 405.384 410.527 405.822 cv
410.448 406.175 409.986 407.382 409.633 406.633 cv
cp
ef
403.762 411.401 mo
404.011 411.466 404.199 412.996 405.127 412.72 cv
405.594 411.753 406.062 410.948 406.758 410.691 cv
407.243 410.511 407.57 410.523 407.97 410.208 cv
408.285 409.958 408.686 409.407 409.175 409.059 cv
409.192 408.914 409.215 408.867 409.243 408.742 cv
406.57 408.793 li
403.898 408.742 li
403.968 409.055 404.133 410.452 403.762 411.401 cv
cp
.933333 .784314 .356863 rgb
ef
406.612 410.346 mo
406.566 410.347 li
406.012 410.351 405.735 410.341 405.434 410.214 cv
405.142 410.09 405 409.804 404.599 409.417 cv
404.258 409.089 403.646 408.753 403.496 408.396 cv
403.292 407.905 403.372 407.364 403.245 406.604 cv
403.144 405.997 402.857 405.458 402.824 404.851 cv
402.789 404.194 402.895 403.534 402.872 402.793 cv
402.851 402.068 402.83 401.469 402.919 400.96 cv
403.009 400.446 403.21 400.021 403.628 399.646 cv
403.628 399.645 li
403.86 399.439 404.122 399.265 404.408 399.12 cv
404.417 399.117 li
404.474 399.089 li
404.505 399.073 li
404.55 399.053 li
404.594 399.034 li
404.643 399.014 li
404.685 398.994 li
404.746 398.971 li
404.775 398.958 li
404.866 398.925 li
404.867 398.924 li
405.628 398.647 406.491 398.57 407.31 398.691 cv
408.124 398.813 408.893 399.131 409.463 399.64 cv
409.88 400.014 410.079 400.437 410.169 400.948 cv
410.258 401.455 410.24 402.053 410.22 402.774 cv
410.198 403.515 410.306 404.171 410.271 404.825 cv
410.238 405.43 409.954 405.969 409.854 406.574 cv
409.73 407.334 409.81 407.87 409.608 408.362 cv
409.459 408.722 408.852 409.062 408.512 409.394 cv
408.112 409.784 407.972 410.071 407.682 410.2 cv
407.392 410.326 407.126 410.343 406.612 410.346 cv
cp
1 .858824 .654902 rgb
ef
409.189 410.47 mo
409.269 411.032 409.439 411.29 409.814 411.574 cv
408.209 414.315 li
406.511 411.939 li
407.355 411.474 408.86 410.895 409.189 410.47 cv
cp
.901961 .901961 .901961 rgb
ef
403.906 410.47 mo
403.826 411.032 403.655 411.29 403.28 411.574 cv
404.886 414.315 li
406.584 411.939 li
405.739 411.474 404.234 410.895 403.906 410.47 cv
cp
ef
409.742 411.578 mo
410.464 412.188 412.336 412.851 413.312 412.811 cv
416.104 412.697 416.87 412.996 417.065 415.087 cv
417.073 415.172 417.077 418.506 417.078 419.73 cv
407.478 419.73 li
408.179 417.109 409.122 413.418 409.742 411.578 cv
cp
.164706 .439216 .454902 rgb
ef
403.353 411.578 mo
402.631 412.188 400.759 412.851 399.783 412.811 cv
396.991 412.697 396.225 412.996 396.029 415.087 cv
396.021 415.17 396.017 418.513 396.013 419.73 cv
405.625 419.73 li
404.916 417.082 403.964 413.39 403.353 411.578 cv
cp
ef
406.624 412.053 mo
407.457 413.282 li
407.437 413.595 li
406.749 414.293 li
407.521 415.533 li
407.261 419.73 li
405.865 419.73 li
405.575 415.527 li
406.346 414.287 li
405.658 413.589 li
405.638 413.276 li
406.469 412.048 li
406.624 412.053 li
cp
.180392 .807843 .909804 rgb
ef
406.624 412.053 mo
407.457 413.282 li
407.437 413.595 li
406.749 414.293 li
407.521 415.533 li
407.261 419.73 li
406.548 419.73 li
406.548 412.051 li
406.624 412.053 li
cp
.121569 .67451 .760784 rgb
ef
409.742 411.578 mo
410.095 411.876 410.722 412.187 411.385 412.422 cv
411.352 412.446 li
411.436 415.948 li
409.935 415.781 li
410.81 416.948 li
409.592 419.73 li
407.488 419.73 li
408.188 417.101 409.125 413.408 409.742 411.578 cv
cp
.0196078 .576471 .631373 rgb
ef
403.353 411.578 mo
403 411.876 402.373 412.187 401.71 412.422 cv
401.743 412.446 li
401.659 415.948 li
403.16 415.781 li
402.285 416.948 li
403.607 419.73 li
405.61 419.73 li
404.906 417.087 403.965 413.395 403.353 411.578 cv
cp
ef
403.844 400.676 mo
403.584 400.986 403.065 402.856 403.153 404.896 cv
402.274 401.708 401.803 399.433 403.71 398 cv
406.212 396.119 409.324 397.611 409.479 398.05 cv
411.317 399.065 410.678 401.924 410.126 404.448 cv
410.108 403.183 409.842 401.61 409.207 400.507 cv
409.056 400.36 408.883 400.272 408.745 400.331 cv
402.993 402.744 404.072 400.402 403.844 400.676 cv
cp
.498039 .32549 .105882 rgb
ef
416.534 389.043 mo
417.003 388.621 417.716 388.813 418.152 389.359 cv
418.641 389.973 418.697 390.678 418.575 391.352 cv
418.563 394.135 416.915 395.328 416.444 398.075 cv
414.637 397.549 li
413.999 395.408 413.023 394.715 412.539 392.851 cv
411.787 389.962 413.289 389.107 414.932 389.278 cv
415.443 389.331 415.992 389.361 416.505 389.438 cv
416.441 389.332 416.374 389.234 416.303 389.146 cv
416.534 389.043 li
cp
ef
414.107 397.418 mo
414.218 397.181 414.295 397.095 414.576 397.082 cv
414.728 397.592 li
414.377 397.87 li
414.097 397.835 li
414.107 397.418 li
cp
.490196 .521569 .545098 rgb
ef
417.14 397.418 mo
417.029 397.181 416.953 397.095 416.672 397.082 cv
416.52 397.592 li
416.87 397.87 li
417.15 397.835 li
417.14 397.418 li
cp
ef
414.261 395.535 mo
414.508 396.482 414.476 397.481 414.126 397.93 cv
414.037 398.044 413.663 398.134 413.271 398.207 cv
412.735 398.308 412.064 398.387 411.775 398.447 cv
410.96 398.616 410.856 399.678 410.899 400.108 cv
410.956 400.671 411.467 400.575 411.612 401.042 cv
411.646 401.149 411.682 401.393 411.719 401.664 cv
412.062 401.851 412.419 402.014 412.788 402.152 cv
418.68 402.152 li
418.888 402.074 419.093 401.988 419.293 401.895 cv
419.423 400.855 li
420.658 399.995 li
420.638 397.986 418.635 398.505 417.596 398.084 cv
416.747 397.74 416.672 397.025 416.741 395.567 cv
414.261 395.535 li
cp
1 .858824 .654902 rgb
ef
420.738 402.152 mo
420.74 401.345 420.684 399.583 420.593 399.232 cv
420.508 398.907 420.189 398.564 419.895 398.419 cv
419.324 398.138 418.551 398.23 417.911 398.162 cv
417.672 398.084 li
417.297 397.933 417.173 397.58 417.045 397.251 cv
417.142 398.296 416.673 400.528 416.258 402.152 cv
420.738 402.152 li
cp
.286275 .32549 .360784 rgb
ef
415.241 402.152 mo
414.752 400.557 414.146 398.686 414.19 397.633 cv
414.189 397.447 li
414.015 397.996 413.836 398.102 413.271 398.207 cv
412.955 398.267 412.572 398.301 412.251 398.331 cv
411.541 398.343 411.194 398.534 410.927 399.19 cv
410.771 399.573 410.725 401.376 410.729 402.152 cv
415.241 402.152 li
cp
ef
414.195 397.246 mo
413.594 397.803 413.557 397.859 412.804 398.182 cv
413.202 398.555 413.607 398.91 414.018 399.27 cv
413.145 399.523 li
413.446 400.118 414.048 401.322 414.468 402.152 cv
415.246 402.152 li
414.85 400.812 414.281 398.854 414.195 397.246 cv
cp
.490196 .521569 .545098 rgb
ef
417.041 397.241 mo
417.643 397.798 417.681 397.859 418.434 398.182 cv
418.034 398.556 417.63 398.91 417.219 399.27 cv
418.092 399.523 li
417.769 400.162 417.392 401.316 417.043 402.152 cv
416.247 402.152 li
416.586 400.752 416.963 398.703 417.041 397.241 cv
cp
ef
413.136 392.384 mo
412.905 392.039 412.633 392.273 412.717 392.692 cv
412.786 393.032 412.943 393.42 413.03 393.809 cv
413.09 394.075 413.186 394.264 413.419 394.214 cv
413.394 393.105 li
413.136 392.384 li
cp
1 .858824 .654902 rgb
ef
412.996 392.432 mo
412.888 392.352 412.806 392.413 412.783 392.541 cv
412.751 392.729 412.936 393.09 412.995 393.311 cv
412.979 393.006 412.793 392.71 412.831 392.547 cv
412.854 392.445 412.936 392.429 413.02 392.52 cv
412.996 392.432 li
cp
.909804 .572549 .439216 rgb
ef
417.959 392.384 mo
418.19 392.039 418.463 392.273 418.378 392.692 cv
418.31 393.032 418.152 393.42 418.064 393.809 cv
418.005 394.075 417.909 394.264 417.676 394.214 cv
417.701 393.105 li
417.959 392.384 li
cp
1 .858824 .654902 rgb
ef
416.497 396.055 mo
416.781 395.802 416.998 395.564 417.268 395.13 cv
417.587 394.613 417.713 394.259 417.846 393.366 cv
417.948 392.684 418.032 391.974 417.92 391.33 cv
417.702 390.079 416.879 389.128 415.548 389.132 cv
414.073 389.137 413.354 389.722 413.137 391.132 cv
412.996 392.054 413.053 392.647 413.209 393.425 cv
413.381 394.285 413.53 394.77 413.896 395.283 cv
414.127 395.607 414.306 395.825 414.538 396.027 cv
415.011 396.438 415.266 396.62 415.529 396.62 cv
415.8 396.62 416.077 396.428 416.497 396.055 cv
cp
ef
412.79 393.418 mo
412.094 392.311 411.862 390.33 413.021 389.267 cv
414.104 388.274 415.694 388.196 416.676 388.94 cv
416.604 388.961 417.339 389.593 417.567 389.915 cv
417.681 390.074 417.611 390.107 417.528 390.113 cv
418.033 391.049 418.336 391.276 418.204 391.984 cv
418.152 392.26 417.961 392.958 417.804 393.489 cv
417.885 392.931 417.901 392.508 417.92 392.094 cv
417.954 391.329 417.532 390.706 417.43 390.184 cv
417.434 390.113 li
417.43 390.113 li
417.306 390.318 417.122 390.495 416.898 390.657 cv
416.387 391.141 415.667 391.401 415.068 391.631 cv
414.657 391.841 414.253 392.073 413.903 392.357 cv
413.434 392.741 413.332 393.12 413.321 393.617 cv
413.225 393.494 413.178 393.275 413.14 393.155 cv
412.872 393.621 412.783 394.168 413.127 394.77 cv
412.819 394.353 412.732 393.881 412.79 393.418 cv
cp
.498039 .32549 .105882 rgb
ef
412.459 400.65 mo
412.049 400.87 411.747 401.444 411.702 402.152 cv
412.056 402.152 li
412.095 401.592 412.28 401.021 412.459 400.65 cv
cp
.490196 .521569 .545098 rgb
ef
419.091 400.65 mo
419.501 400.87 419.804 401.444 419.848 402.152 cv
419.494 402.152 li
419.455 401.592 419.27 401.021 419.091 400.65 cv
cp
ef
412.729 392.895 mo
412.729 391.231 li
412.729 390.611 412.983 390.047 413.392 389.638 cv
413.801 389.229 414.364 388.976 414.985 388.976 cv
416.121 388.976 li
416.742 388.976 417.306 389.229 417.715 389.638 cv
418.123 390.047 418.377 390.611 418.377 391.231 cv
418.377 392.855 li
418.132 392.855 li
418.132 391.231 li
418.132 390.679 417.906 390.176 417.541 389.812 cv
417.177 389.447 416.674 389.221 416.121 389.221 cv
414.985 389.221 li
414.433 389.221 413.93 389.447 413.565 389.812 cv
413.201 390.176 412.975 390.679 412.975 391.231 cv
412.975 392.895 li
412.729 392.895 li
cp
.180392 .807843 .909804 rgb
ef
418.222 393.419 mo
418.222 394.039 417.968 394.604 417.559 395.012 cv
417.15 395.421 416.586 395.674 415.966 395.674 cv
415.966 395.429 li
416.519 395.429 417.021 395.202 417.386 394.838 cv
417.749 394.474 417.976 393.972 417.976 393.419 cv
418.222 393.419 li
cp
ef
415.873 395.221 mo
416.542 395.067 li
416.713 395.027 416.886 395.136 416.925 395.307 cv
416.939 395.367 li
416.979 395.539 416.871 395.711 416.699 395.751 cv
416.031 395.904 li
415.859 395.944 415.688 395.837 415.647 395.665 cv
415.634 395.604 li
415.595 395.433 415.702 395.261 415.873 395.221 cv
cp
ef
418.34 392.252 mo
418.623 392.339 418.783 392.643 418.696 392.926 cv
418.448 393.732 li
418.361 394.017 418.058 394.177 417.774 394.09 cv
417.454 393.991 417.958 392.176 418.34 392.252 cv
cp
.121569 .67451 .760784 rgb
ef
412.78 392.242 mo
412.495 392.322 412.326 392.621 412.406 392.906 cv
412.634 393.72 li
412.714 394.005 413.014 394.174 413.299 394.094 cv
413.621 394.003 413.163 392.176 412.78 392.242 cv
cp
ef
417.559 401.322 mo
415.694 398.478 li
415.673 401.322 li
415.262 401.322 li
414.749 401.322 414.329 401.742 414.329 402.256 cv
414.329 408.893 li
414.329 409.405 414.749 409.825 415.262 409.825 cv
425.655 409.825 li
426.169 409.825 426.589 409.405 426.589 408.893 cv
426.589 402.256 li
426.589 401.742 426.169 401.322 425.655 401.322 cv
417.559 401.322 li
cp
.992157 .752941 .0588235 rgb
ef
415.249 403.692 mo
425.668 403.692 li
425.668 403.987 li
415.249 403.987 li
415.249 403.692 li
cp
415.249 404.836 mo
425.668 404.836 li
425.668 405.132 li
415.249 405.132 li
415.249 404.836 li
cp
415.249 405.962 mo
425.668 405.962 li
425.668 406.256 li
415.249 406.256 li
415.249 405.962 li
cp
415.249 407.086 mo
425.668 407.086 li
425.668 407.382 li
415.249 407.382 li
415.249 407.086 li
cp
415.249 408.267 mo
425.668 408.267 li
425.668 408.562 li
415.249 408.562 li
415.249 408.267 li
cp
415.249 402.586 mo
425.668 402.586 li
425.668 402.881 li
415.249 402.881 li
415.249 402.586 li
cp
1 .866667 .470588 rgb
ef
416.148 409.385 mo
412.614 410.562 li
416.148 411.524 li
416.148 413.164 li
416.148 413.563 416.476 413.891 416.875 413.891 cv
424.389 413.891 li
424.788 413.891 425.115 413.563 425.115 413.164 cv
425.115 407.993 li
425.115 407.594 424.788 407.267 424.389 407.267 cv
416.875 407.267 li
416.476 407.267 416.148 407.594 416.148 407.993 cv
416.148 409.385 li
cp
.180392 .807843 .909804 rgb
ef
422.896 409.929 mo
423.255 409.929 423.546 410.22 423.546 410.578 cv
423.546 410.938 423.255 411.229 422.896 411.229 cv
422.536 411.229 422.246 410.938 422.246 410.578 cv
422.246 410.22 422.536 409.929 422.896 409.929 cv
cp
420.632 409.929 mo
420.991 409.929 421.281 410.22 421.281 410.578 cv
421.281 410.938 420.991 411.229 420.632 411.229 cv
420.273 411.229 419.982 410.938 419.982 410.578 cv
419.982 410.22 420.273 409.929 420.632 409.929 cv
cp
418.368 409.929 mo
418.728 409.929 419.018 410.22 419.018 410.578 cv
419.018 410.938 418.728 411.229 418.368 411.229 cv
418.009 411.229 417.718 410.938 417.718 410.578 cv
417.718 410.22 418.009 409.929 418.368 409.929 cv
cp
1 1 1 rgb
ef
gsave
40.4107 427.39 mo
38.3183 427.39 36.2031 427.282 34.1231 427.069 cv
31.376 426.787 28.7934 426.106 26.4468 425.047 cv
25.443 424.595 24.7945 423.901 24.4134 423.032 cv
24.4245 423.037 24.4356 423.042 24.4468 423.047 cv
26.7935 424.106 29.376 424.787 32.123 425.069 cv
34.2031 425.282 36.3184 425.39 38.4107 425.39 cv
40.5034 425.39 42.6191 425.282 44.7007 425.069 cv
47.4458 424.787 50.0279 424.106 52.3731 423.048 cv
55.8877 421.464 55.0503 416.925 53.6211 412.256 cv
53.562 412.063 53.4868 411.875 53.3965 411.694 cv
53.2364 411.375 53.054 411.069 52.8509 410.776 cv
53.9395 411.543 54.8153 412.536 55.3965 413.694 cv
55.4868 413.875 55.562 414.063 55.6211 414.256 cv
57.0503 418.925 57.8877 423.464 54.3731 425.048 cv
52.0279 426.106 49.4458 426.787 46.7007 427.069 cv
44.6186 427.282 42.5034 427.39 40.4107 427.39 cv
48.9089 407.739 mo
48.4949 407.577 48.0639 407.442 47.6181 407.336 cv
46.0312 406.873 li
46.6524 406.206 47.1225 405.468 47.4599 404.718 cv
47.5424 404.633 47.6099 404.535 47.6856 404.444 cv
49.064 403.435 49.9576 401.699 49.9576 399.685 cv
49.9576 397.941 49.2837 396.406 48.2075 395.37 cv
48.1967 392.714 47.6636 390.901 46.5405 389.67 cv
46.2934 389.399 46.0176 389.171 45.7261 388.97 cv
45.5772 388.69 45.4136 388.421 45.2362 388.165 cv
46.2643 388.872 47.1178 389.827 47.726 390.97 cv
48.0176 391.171 48.2935 391.399 48.5405 391.67 cv
49.6636 392.901 50.1967 394.714 50.2076 397.37 cv
51.2837 398.406 51.9575 399.941 51.9575 401.686 cv
51.9575 403.699 51.064 405.435 49.6855 406.444 cv
49.6099 406.535 49.5425 406.633 49.4599 406.718 cv
49.3049 407.063 49.1218 407.405 48.9089 407.739 cv
30.8034 406.222 mo
30.451 405.923 30.1357 405.574 29.8657 405.183 cv
30.0647 405.331 30.2765 405.462 30.5 405.576 cv
30.543 405.681 li
30.6204 405.861 30.7076 406.041 30.8034 406.222 cv
clp
24.4134 388.165 mo
57.8877 388.165 li
57.8877 427.39 li
24.4134 427.39 li
cp
.454902 .482353 .196078 rgb
f
grestore
53.6211 412.256 mo
53.562 412.063 53.4868 411.875 53.3965 411.694 cv
52.315 409.539 50.2133 407.956 47.6181 407.336 cv
46.0312 406.873 li
46.6524 406.206 47.1225 405.468 47.4599 404.718 cv
47.5424 404.633 47.6099 404.535 47.6856 404.444 cv
49.064 403.435 49.9576 401.699 49.9576 399.685 cv
49.9576 397.941 49.2837 396.406 48.2075 395.37 cv
48.1967 392.714 47.6636 390.901 46.5405 389.67 cv
46.2934 389.399 46.0176 389.171 45.7261 388.97 cv
44.3589 386.4 41.7529 384.784 38.7094 384.784 cv
37.6045 384.784 36.4619 384.993 35.314 385.406 cv
32.7315 386.335 31.5132 386.576 31.2011 386.629 cv
31.1202 386.628 li
29.8794 386.628 28.8491 387.279 28.1939 388.355 cv
27.5117 389.473 27.6387 390.873 28.288 392.012 cv
28.4081 392.223 28.5323 392.417 28.6553 392.613 cv
28.4751 393.453 28.3902 394.426 28.395 395.541 cv
27.4175 396.572 26.8135 398.034 26.8135 399.685 cv
26.8135 401.699 27.7075 403.435 29.0855 404.444 cv
29.4751 404.912 29.9526 405.297 30.5 405.576 cv
30.543 405.681 li
30.6992 406.044 30.895 406.409 31.1216 406.772 cv
29.1997 407.337 li
26.605 407.958 24.5048 409.541 23.4249 411.695 cv
23.3349 411.876 23.2597 412.063 23.2007 412.256 cv
21.7714 416.925 20.934 421.464 24.4468 423.047 cv
26.7935 424.106 29.376 424.787 32.123 425.069 cv
34.2031 425.282 36.3184 425.39 38.4107 425.39 cv
40.5034 425.39 42.6191 425.282 44.7007 425.069 cv
47.4458 424.787 50.0279 424.106 52.3731 423.048 cv
55.8877 421.464 55.0503 416.925 53.6211 412.256 cv
f
40.8946 406.307 mo
38.6269 406.307 li
38.1445 406.307 li
35.877 406.307 li
35.877 406.307 36.643 410.665 32.9942 414.27 cv
38.1445 420.492 li
38.6269 420.492 li
43.7774 414.27 li
40.1279 410.665 40.8946 406.307 40.8946 406.307 cv
.988235 .752941 .513726 rgb
f
35.6064 409.831 mo
35.2354 411.205 34.4819 412.8 32.9942 414.27 cv
38.1445 420.492 li
38.6269 420.492 li
43.7774 414.27 li
42.2895 412.8 41.5357 411.205 41.1645 409.831 cv
38.4107 411.353 li
35.6064 409.831 li
1 1 1 rgb
f
35.6064 409.831 mo
35.2354 411.205 38.0327 413.36 38.0327 413.36 cv
36.6348 420.492 li
38.3858 421.543 li
40.1323 420.492 li
38.8169 413.399 li
38.8169 413.399 41.5357 411.205 41.1645 409.831 cv
38.4107 411.353 li
35.6064 409.831 li
.831373 .254902 .00784314 rgb
f
40.8945 406.307 mo
38.627 406.307 li
38.1445 406.307 li
35.877 406.307 li
35.877 406.307 35.9756 406.875 35.9321 407.768 cv
36.792 408.198 37.6606 408.463 38.3574 408.463 cv
39.0723 408.463 39.9614 408.182 40.8374 407.729 cv
40.7983 406.858 40.8945 406.307 40.8945 406.307 cv
cp
.909804 .666667 .388235 rgb
f
44.9941 398.069 mo
44.8003 397.57 44.4624 397.828 44.1992 398.157 cv
44.2744 394.281 42.2285 392.313 42.2285 392.313 cv
38.3857 392.313 li
34.543 392.313 li
34.543 392.313 32.4834 394.277 32.5488 398.129 cv
32.2891 397.814 31.9648 397.585 31.7773 398.069 cv
31.4277 398.971 32.2485 400.205 32.0913 401.456 cv
31.9854 402.302 32.6528 402.217 33.0752 401.98 cv
33.2344 402.62 33.4702 403.376 33.8506 404.259 cv
34.6538 406.127 36.9595 407.829 38.3745 407.829 cv
39.7891 407.829 42.061 406.114 42.8979 404.259 cv
43.2827 403.406 43.5234 402.698 43.6758 401.97 cv
44.0967 402.215 44.7876 402.315 44.6797 401.456 cv
44.5225 400.205 45.3438 398.971 44.9941 398.069 cv
cp
.988235 .752941 .513726 rgb
f
43.0127 391.913 mo
43.0127 391.913 35.9722 398.22 31.415 390.229 cv
31.415 390.229 32.6812 390.178 36.5317 388.793 cv
40.0576 387.525 42.4453 389.377 43.0127 391.913 cv
cp
.631373 .278431 .12549 rgb
f
42.5791 391.871 mo
40.9443 392.296 li
41.1587 392.696 42.251 394.027 42.854 395.65 cv
43.4189 397.172 43.5049 398.948 43.4463 400.455 cv
43.7446 399.947 li
44.1714 399.221 44.4287 398.41 44.5054 397.571 cv
44.7153 395.29 44.8291 390.999 42.5791 391.871 cv
cp
f
32.8555 399.947 mo
33.1533 400.455 li
33.0952 398.948 33.1812 397.172 33.7461 395.65 cv
34.3491 394.027 35.4414 392.696 35.6558 392.296 cv
34.021 391.871 li
31.771 390.999 31.8843 395.29 32.0942 397.571 cv
32.1714 398.41 32.4292 399.221 32.8555 399.947 cv
cp
f
41.8014 411.534 mo
41.5472 411.011 41.3567 410.498 41.215 410.011 cv
41.2148 410.01 41.2146 410.01 41.2144 410.009 cv
41.2133 410.005 41.2121 410.001 41.211 409.997 cv
41.2104 409.995 41.2097 409.993 41.209 409.99 cv
41.208 409.987 41.2071 409.984 41.2061 409.98 cv
41.2052 409.977 41.2043 409.974 41.2035 409.971 cv
41.2027 409.968 41.2019 409.965 41.201 409.962 cv
41.1956 409.943 41.1903 409.925 41.185 409.906 cv
41.185 409.905 41.1849 409.905 41.1848 409.905 cv
41.1844 409.904 41.1839 409.902 41.1835 409.9 cv
42.437 410.632 li
41.8014 411.534 li
.823529 .823529 .823529 rgb
f
41.215 410.011 mo
41.2148 410.01 41.2146 410.01 41.2144 410.009 cv
41.2146 410.01 41.2148 410.01 41.215 410.011 cv
41.211 409.997 mo
41.2104 409.995 41.2097 409.993 41.209 409.99 cv
41.2097 409.993 41.2104 409.995 41.211 409.997 cv
41.2061 409.98 mo
41.2052 409.977 41.2044 409.974 41.2035 409.971 cv
41.2043 409.974 41.2052 409.977 41.2061 409.98 cv
41.201 409.962 mo
41.1956 409.944 41.1903 409.925 41.185 409.906 cv
41.1903 409.925 41.1956 409.943 41.201 409.962 cv
41.1848 409.905 mo
41.1844 409.903 41.1839 409.902 41.1835 409.9 cv
41.1835 409.9 li
41.1839 409.902 41.1844 409.904 41.1848 409.905 cv
.811765 .619608 .423529 rgb
f
39.918 414.205 mo
39.1706 413.094 li
39.8789 412.457 41.3867 410.957 41.1801 409.898 cv
41.1835 409.9 li
41.1839 409.902 41.1844 409.903 41.1848 409.905 cv
41.1849 409.905 41.185 409.905 41.185 409.906 cv
41.1903 409.925 41.1956 409.944 41.201 409.962 cv
41.2019 409.965 41.2027 409.968 41.2035 409.971 cv
41.2044 409.974 41.2052 409.977 41.2061 409.98 cv
41.2071 409.984 41.208 409.987 41.209 409.99 cv
41.2097 409.993 41.2104 409.995 41.211 409.997 cv
41.2121 410.001 41.2133 410.005 41.2144 410.009 cv
41.2146 410.01 41.2148 410.01 41.215 410.011 cv
41.3567 410.498 41.5472 411.011 41.8014 411.534 cv
39.918 414.205 li
.823529 .823529 .823529 rgb
f
34.9903 411.491 mo
34.3843 410.632 li
35.5776 409.936 li
35.4375 410.432 35.2471 410.956 34.9903 411.491 cv
f
36.9038 414.205 mo
34.9903 411.491 li
35.2471 410.956 35.4375 410.432 35.5776 409.936 cv
35.5851 409.931 li
35.4183 410.988 36.9517 412.444 37.6719 413.063 cv
36.9038 414.205 li
f
38.4107 411.353 mo
40.9746 409.778 li
41.1134 409.859 li
38.4107 411.353 li
.811765 .619608 .423529 rgb
f
38.4107 411.353 mo
35.6843 409.873 li
35.8471 409.778 li
38.4107 411.353 li
f
39.1706 413.094 mo
38.4107 411.965 li
37.6719 413.063 li
36.9517 412.444 35.4183 410.988 35.5851 409.931 cv
35.6843 409.873 li
38.4107 411.353 li
41.1134 409.859 li
41.1801 409.898 li
41.3867 410.957 39.8789 412.457 39.1706 413.094 cv
.682353 .207843 .00784314 rgb
f
32.8057 398.22 mo
32.7637 396.649 32.9268 394.713 33.7319 393.186 cv
34.6421 391.462 36.2109 390.577 38.3857 390.577 cv
40.5596 390.577 42.1289 391.462 43.0391 393.186 cv
43.8442 394.713 44.0068 396.649 43.9658 398.22 cv
44.6938 398.22 li
44.7446 396.483 44.561 394.314 43.6372 392.55 cv
42.5854 390.542 40.814 389.511 38.3857 389.511 cv
35.9565 389.511 34.1851 390.542 33.1338 392.55 cv
32.21 394.314 32.0264 396.483 32.0771 398.22 cv
32.8057 398.22 li
cp
.286275 .32549 .360784 rgb
f
32.4165 397.708 mo
32.2622 397.635 32.0972 397.593 31.9253 397.593 cv
31.0903 397.593 30.4136 398.53 30.4136 399.686 cv
30.4136 400.842 31.0903 401.779 31.9253 401.779 cv
32.0972 401.779 32.2622 401.737 32.4165 401.664 cv
32.4165 397.708 li
cp
f
32.9658 397.173 mo
32.8394 397.104 32.6968 397.062 32.543 397.062 cv
32.5249 397.062 li
32.0313 397.062 31.6309 397.462 31.6309 397.956 cv
31.6309 401.587 li
31.6309 402.08 32.0313 402.48 32.5249 402.48 cv
32.543 402.48 li
32.6968 402.48 32.8394 402.438 32.9658 402.37 cv
32.9658 397.173 li
cp
.180392 .807843 .909804 rgb
f
44.5552 401.664 mo
44.1548 401.664 li
44.1548 401.813 44.0952 405.151 39.981 405.496 cv
39.9033 405.379 39.7773 405.298 39.626 405.298 cv
38.0576 405.298 li
37.8179 405.298 37.624 405.492 37.624 405.731 cv
37.624 405.74 li
37.624 405.979 37.8179 406.174 38.0576 406.174 cv
39.626 406.174 li
39.8115 406.174 39.9668 406.057 40.0288 405.893 cv
44.4902 405.506 44.5552 401.705 44.5552 401.664 cv
cp
.286275 .32549 .360784 rgb
f
44.355 397.708 mo
44.5093 397.635 44.6738 397.593 44.8457 397.593 cv
45.6812 397.593 46.3579 398.53 46.3579 399.686 cv
46.3579 400.842 45.6812 401.779 44.8457 401.779 cv
44.6738 401.779 44.5093 401.737 44.355 401.664 cv
44.355 397.708 li
cp
f
43.8052 397.173 mo
43.9316 397.104 44.0742 397.062 44.228 397.062 cv
44.2461 397.062 li
44.7402 397.062 45.1406 397.462 45.1406 397.956 cv
45.1406 401.587 li
45.1406 402.08 44.7402 402.48 44.2461 402.48 cv
44.228 402.48 li
44.0742 402.48 43.9316 402.438 43.8052 402.37 cv
43.8052 397.173 li
cp
.180392 .807843 .909804 rgb
f
38.4106 411.353 mo
39.918 413.404 li
42.437 409.831 li
40.9746 408.978 li
38.4106 411.353 li
cp
1 1 1 rgb
f
38.4106 411.353 mo
36.9038 413.404 li
34.3843 409.831 li
35.8472 408.978 li
38.4106 411.353 li
cp
f
50.1787 413.309 mo
49.5713 412.098 48.2876 411.178 46.7036 410.819 cv
41.4297 409.279 li
41.4297 409.279 41.6782 411.743 40.5273 415.267 cv
39.6025 418.1 38.3979 421.035 38.3979 421.035 cv
38.3979 421.035 37.1274 418.121 36.2666 415.266 cv
35.2051 411.743 35.3501 409.279 35.3501 409.279 cv
30.1182 410.819 li
28.5342 411.178 27.2505 412.098 26.6431 413.309 cv
26.6431 413.309 24.8203 419.266 25.9277 419.766 cv
27.9873 420.695 30.2153 421.255 32.4893 421.487 cv
36.4253 421.891 40.3965 421.891 44.3325 421.487 cv
46.6064 421.255 48.8345 420.695 50.894 419.766 cv
52.0015 419.266 50.1787 413.309 50.1787 413.309 cv
cp
.286275 .32549 .360784 rgb
f
141.259 424.674 mo
122.383 424.674 li
120.908 424.674 119.518 424.027 118.568 422.899 cv
117.618 421.771 117.217 420.292 117.468 418.839 cv
118.318 413.914 li
118.76 411.352 120.275 409.143 122.449 407.794 cv
121.637 406.825 121.143 405.524 121.143 404.069 cv
121.143 402.243 121.919 400.657 123.132 399.672 cv
123.384 398.745 123.75 397.891 124.237 397.136 cv
125.483 395.206 127.434 393.974 129.832 393.537 cv
129.977 392.913 130.267 392.326 130.723 391.853 cv
133.843 388.605 li
134.533 387.889 135.475 387.5 136.439 387.5 cv
136.797 387.5 137.158 387.554 137.51 387.663 cv
138.36 387.928 139.064 388.492 139.513 389.226 cv
139.727 389.217 139.94 389.213 140.154 389.213 cv
149.101 389.213 156.379 396.491 156.379 405.437 cv
156.379 412.043 152.295 418.034 146.18 420.489 cv
146.038 421.367 145.661 422.201 145.073 422.899 cv
144.123 424.027 142.733 424.674 141.259 424.674 cv
140.716 397.592 mo
140.59 397.963 140.401 398.31 140.162 398.623 cv
140.296 398.96 140.411 399.311 140.509 399.672 cv
141.722 400.657 142.499 402.243 142.499 404.069 cv
142.499 405.526 142.002 406.829 141.188 407.799 cv
142.348 408.521 143.311 409.48 144.028 410.603 cv
146.843 409.044 147.274 407.1 147.274 405.353 cv
147.274 401.051 144.548 397.874 140.716 397.592 cv
.454902 .482353 .196078 rgb
f
142.028 408.603 mo
141.311 407.48 140.348 406.521 139.188 405.799 cv
140.002 404.829 140.499 403.526 140.499 402.069 cv
140.499 400.243 139.722 398.657 138.509 397.672 cv
138.411 397.311 138.296 396.96 138.162 396.623 cv
138.401 396.31 138.59 395.963 138.716 395.592 cv
142.548 395.874 145.274 399.051 145.274 403.353 cv
145.274 405.101 144.843 407.043 142.028 408.603 cv
cp
138.154 387.213 mo
137.94 387.213 137.727 387.217 137.513 387.226 cv
137.064 386.492 136.36 385.928 135.51 385.663 cv
135.158 385.554 134.797 385.5 134.439 385.5 cv
133.474 385.5 132.533 385.889 131.843 386.605 cv
128.723 389.853 li
128.267 390.326 127.977 390.913 127.832 391.537 cv
125.434 391.974 123.483 393.206 122.237 395.136 cv
121.75 395.891 121.384 396.745 121.132 397.672 cv
119.919 398.657 119.143 400.243 119.143 402.069 cv
119.143 403.524 119.637 404.825 120.449 405.794 cv
118.275 407.143 116.76 409.352 116.318 411.914 cv
115.468 416.839 li
115.217 418.292 115.618 419.771 116.568 420.899 cv
117.518 422.027 118.908 422.674 120.383 422.674 cv
139.259 422.674 li
140.733 422.674 142.123 422.027 143.073 420.899 cv
143.661 420.201 144.038 419.367 144.18 418.489 cv
150.295 416.034 154.379 410.043 154.379 403.438 cv
154.379 394.491 147.101 387.213 138.154 387.213 cv
cp
1 1 1 rgb
f
119.016 417.45 mo
119.866 412.527 li
120.174 410.741 121.354 409.228 123.012 408.494 cv
126.196 407.142 li
133.445 407.142 li
136.629 408.494 li
138.287 409.228 139.467 410.741 139.775 412.527 cv
140.625 417.45 li
140.772 418.299 140.119 419.073 139.259 419.073 cv
120.382 419.073 li
119.522 419.073 118.869 418.299 119.016 417.45 cv
cp
.286275 .32549 .360784 rgb
f
124.343 403.036 mo
124.343 406.061 126.795 408.514 129.82 408.514 cv
132.846 408.514 135.298 406.061 135.298 403.036 cv
135.298 400.01 132.846 397.558 129.82 397.558 cv
126.795 397.558 124.343 400.01 124.343 403.036 cv
cp
.988235 .74902 .109804 rgb
f
134.666 401.082 mo
134.702 399.977 134.561 398.612 133.861 397.537 cv
133.071 396.322 131.708 395.7 129.821 395.7 cv
127.933 395.7 126.57 396.322 125.78 397.537 cv
125.081 398.612 124.939 399.977 124.976 401.082 cv
124.343 401.082 li
124.299 399.859 124.458 398.332 125.261 397.09 cv
126.174 395.675 127.712 394.948 129.821 394.948 cv
131.93 394.948 133.468 395.675 134.38 397.09 cv
135.183 398.332 135.342 399.859 135.298 401.082 cv
134.666 401.082 li
cp
.286275 .32549 .360784 rgb
f
135.121 400.313 mo
135.257 400.248 135.403 400.211 135.556 400.211 cv
136.298 400.211 136.899 401.043 136.899 402.069 cv
136.899 403.096 136.298 403.928 135.556 403.928 cv
135.403 403.928 135.257 403.891 135.121 403.825 cv
135.121 400.313 li
cp
f
134.632 399.838 mo
134.745 399.777 134.871 399.739 135.008 399.739 cv
135.024 399.739 li
135.462 399.739 135.818 400.095 135.818 400.533 cv
135.818 403.757 li
135.818 404.195 135.462 404.551 135.024 404.551 cv
135.008 404.551 li
134.871 404.551 134.745 404.514 134.632 404.452 cv
134.632 399.838 li
cp
f
124.343 403.826 mo
124.698 403.825 li
124.699 403.958 124.751 406.922 128.404 407.228 cv
128.473 407.124 128.585 407.052 128.719 407.052 cv
130.112 407.052 li
130.324 407.052 130.497 407.225 130.497 407.437 cv
130.497 407.444 li
130.497 407.657 130.324 407.83 130.112 407.83 cv
128.719 407.83 li
128.555 407.83 128.417 407.726 128.362 407.58 cv
124.4 407.236 124.343 403.862 124.343 403.826 cv
cp
f
124.521 400.313 mo
124.384 400.248 124.237 400.211 124.084 400.211 cv
123.343 400.211 122.742 401.043 122.742 402.069 cv
122.742 403.096 123.343 403.928 124.084 403.928 cv
124.237 403.928 124.384 403.891 124.521 403.825 cv
124.521 400.313 li
cp
f
125.009 399.838 mo
124.896 399.777 124.77 399.739 124.633 399.739 cv
124.617 399.739 li
124.179 399.739 123.823 400.095 123.823 400.533 cv
123.823 403.757 li
123.823 404.195 124.179 404.551 124.617 404.551 cv
124.633 404.551 li
124.77 404.551 124.896 404.514 125.009 404.452 cv
125.009 399.838 li
cp
f
131.318 392.346 mo
134.438 389.1 li
134.792 391.279 li
135.864 390.981 136.989 390.813 138.154 390.813 cv
145.116 390.813 150.779 396.477 150.779 403.438 cv
150.779 408.857 147.346 413.49 142.54 415.276 cv
141.73 412.701 li
146.022 411.042 148.874 408.223 148.874 403.352 cv
148.874 397.029 144.477 391.971 138.154 391.971 cv
137.051 391.971 135.987 392.132 134.978 392.426 cv
135.305 394.439 li
131.318 392.346 li
cp
.180392 .807843 .909804 rgb
f
138.542 378.565 mo
135.185 378.565 li
132.688 378.565 130.657 376.534 130.657 374.037 cv
130.657 373.459 130.775 372.911 130.971 372.402 cv
129.305 371.773 127.793 370.838 126.499 369.66 cv
126.342 369.783 126.176 369.898 125.997 369.995 cv
125.186 370.433 124.282 370.663 123.383 370.663 cv
123.345 370.663 li
121.42 370.663 119.725 369.671 118.738 368.172 cv
116.628 366.812 115.226 364.177 115.226 361.082 cv
115.226 357.744 116.859 354.944 119.251 353.699 cv
119.448 353.482 li
119.881 351.097 120.684 348.965 121.872 347.125 cv
123.875 344.021 127.935 340.318 135.887 340.318 cv
143.838 340.318 147.897 344.021 149.902 347.125 cv
151.07 348.935 151.873 351.085 152.313 353.475 cv
152.515 353.694 li
154.912 354.937 156.548 357.74 156.548 361.082 cv
156.548 364.177 155.146 366.813 153.035 368.172 cv
152.703 368.678 152.288 369.123 151.812 369.494 cv
150.496 372.878 147.449 376.784 141.064 377.789 cv
140.331 378.282 139.457 378.565 138.542 378.565 cv
.454902 .482353 .196078 rgb
f
150.515 351.694 mo
150.313 351.475 li
149.873 349.085 149.07 346.935 147.902 345.125 cv
145.897 342.021 141.838 338.318 133.887 338.318 cv
125.935 338.318 121.875 342.021 119.872 345.125 cv
118.684 346.965 117.881 349.097 117.447 351.482 cv
117.25 351.699 li
114.859 352.944 113.226 355.744 113.226 359.082 cv
113.226 362.177 114.628 364.812 116.738 366.172 cv
117.725 367.671 119.42 368.663 121.345 368.663 cv
121.383 368.663 li
122.282 368.663 123.186 368.433 123.997 367.995 cv
124.176 367.898 124.342 367.783 124.5 367.66 cv
125.793 368.838 127.305 369.773 128.971 370.402 cv
128.775 370.911 128.657 371.459 128.657 372.037 cv
128.657 374.534 130.688 376.565 133.185 376.565 cv
136.542 376.565 li
137.457 376.565 138.332 376.282 139.064 375.789 cv
145.449 374.784 148.496 370.878 149.813 367.494 cv
150.288 367.123 150.703 366.678 151.035 366.172 cv
153.146 364.813 154.548 362.177 154.548 359.082 cv
154.548 355.74 152.912 352.938 150.515 351.694 cv
cp
1 1 1 rgb
f
140.197 355.85 mo
139.524 356.683 138.898 357.627 138.898 358.704 cv
138.898 359.017 li
137.72 359.017 li
137.72 358.009 138.208 357.054 138.871 356.279 cv
137.121 356.279 li
137.121 355.367 li
140.197 355.367 li
140.197 355.85 li
cp
.286275 .32549 .360784 rgb
f
144.265 357.335 mo
144.265 363.066 139.618 367.712 133.887 367.712 cv
128.156 367.712 123.51 363.066 123.51 357.335 cv
123.51 351.604 128.156 346.957 133.887 346.957 cv
139.618 346.957 144.265 351.604 144.265 357.335 cv
cp
.0823529 .686275 .745098 rgb
f
142.624 357.335 mo
142.624 362.16 138.712 366.072 133.887 366.072 cv
129.062 366.072 125.15 362.16 125.15 357.335 cv
125.15 352.51 129.062 348.598 133.887 348.598 cv
138.712 348.598 142.624 352.51 142.624 357.335 cv
cp
.988235 .74902 .109804 rgb
f
133.89 350.686 mo
133.885 350.686 li
133.753 350.686 133.646 350.578 133.646 350.447 cv
133.646 349.685 li
133.646 349.553 133.753 349.446 133.885 349.446 cv
133.89 349.446 li
134.021 349.446 134.128 349.553 134.128 349.685 cv
134.128 350.447 li
134.128 350.578 134.021 350.686 133.89 350.686 cv
cp
.286275 .32549 .360784 rgb
f
133.89 365.271 mo
133.885 365.271 li
133.753 365.271 133.646 365.164 133.646 365.032 cv
133.646 364.271 li
133.646 364.139 133.753 364.031 133.885 364.031 cv
133.89 364.031 li
134.021 364.031 134.128 364.139 134.128 364.271 cv
134.128 365.032 li
134.128 365.164 134.021 365.271 133.89 365.271 cv
cp
f
129.17 352.638 mo
129.167 352.642 li
129.074 352.734 128.923 352.734 128.83 352.642 cv
128.291 352.103 li
128.197 352.01 128.197 351.858 128.291 351.766 cv
128.294 351.762 li
128.387 351.669 128.538 351.669 128.631 351.762 cv
129.17 352.301 li
129.263 352.395 129.263 352.545 129.17 352.638 cv
cp
f
139.483 362.952 mo
139.48 362.955 li
139.387 363.048 139.236 363.048 139.143 362.955 cv
138.604 362.416 li
138.511 362.323 138.511 362.172 138.604 362.079 cv
138.607 362.075 li
138.701 361.982 138.852 361.982 138.945 362.075 cv
139.483 362.614 li
139.577 362.707 139.577 362.858 139.483 362.952 cv
cp
f
127.214 357.356 mo
127.214 357.361 li
127.214 357.492 127.107 357.6 126.976 357.6 cv
126.213 357.6 li
126.082 357.6 125.975 357.492 125.975 357.361 cv
125.975 357.356 li
125.975 357.225 126.082 357.118 126.213 357.118 cv
126.976 357.118 li
127.107 357.118 127.214 357.225 127.214 357.356 cv
cp
f
141.799 357.356 mo
141.799 357.361 li
141.799 357.492 141.693 357.6 141.561 357.6 cv
140.799 357.6 li
140.667 357.6 140.561 357.492 140.561 357.361 cv
140.561 357.356 li
140.561 357.225 140.667 357.118 140.799 357.118 cv
141.561 357.118 li
141.693 357.118 141.799 357.225 141.799 357.356 cv
cp
f
129.167 362.075 mo
129.17 362.079 li
129.263 362.172 129.263 362.323 129.17 362.416 cv
128.631 362.955 li
128.538 363.048 128.387 363.048 128.294 362.955 cv
128.291 362.952 li
128.197 362.858 128.197 362.707 128.291 362.614 cv
128.83 362.075 li
128.923 361.982 129.074 361.982 129.167 362.075 cv
cp
f
139.48 351.762 mo
139.483 351.766 li
139.577 351.858 139.577 352.01 139.483 352.103 cv
138.945 352.642 li
138.852 352.734 138.701 352.734 138.607 352.642 cv
138.604 352.638 li
138.511 352.545 138.511 352.395 138.604 352.301 cv
139.143 351.762 li
139.236 351.669 139.387 351.669 139.48 351.762 cv
cp
f
122.208 356.703 mo
122.122 354.037 122.462 350.749 124.147 348.157 cv
126.052 345.229 129.336 343.729 133.887 343.729 cv
138.437 343.729 141.721 345.229 143.625 348.157 cv
145.311 350.749 145.651 354.037 145.565 356.703 cv
147.089 356.703 li
147.195 353.755 146.811 350.072 144.878 347.078 cv
142.677 343.669 138.97 341.918 133.887 341.918 cv
128.804 341.918 125.096 343.669 122.896 347.078 cv
120.962 350.072 120.578 353.755 120.685 356.703 cv
122.208 356.703 li
cp
f
121.112 354.85 mo
120.782 354.692 120.43 354.604 120.062 354.604 cv
118.274 354.604 116.826 356.608 116.826 359.082 cv
116.826 361.556 118.274 363.562 120.062 363.562 cv
120.43 363.562 120.782 363.472 121.112 363.315 cv
121.112 354.85 li
cp
f
122.289 353.703 mo
122.018 353.557 121.713 353.466 121.383 353.466 cv
121.345 353.466 li
120.288 353.466 119.431 354.322 119.431 355.379 cv
119.431 363.149 li
119.431 364.206 120.288 365.063 121.345 365.063 cv
121.383 365.063 li
121.713 365.063 122.018 364.973 122.289 364.826 cv
122.289 353.703 li
cp
f
147.091 363.316 mo
146.234 363.314 li
146.233 363.635 146.106 370.779 137.302 371.516 cv
137.135 371.267 136.865 371.091 136.542 371.091 cv
133.185 371.091 li
132.673 371.091 132.257 371.507 132.257 372.02 cv
132.257 372.038 li
132.257 372.551 132.673 372.966 133.185 372.966 cv
136.542 372.966 li
136.938 372.966 137.271 372.716 137.404 372.365 cv
146.952 371.537 147.091 363.402 147.091 363.316 cv
cp
f
146.662 354.85 mo
146.992 354.692 147.345 354.604 147.712 354.604 cv
149.5 354.604 150.949 356.608 150.949 359.082 cv
150.949 361.556 149.5 363.562 147.712 363.562 cv
147.345 363.562 146.992 363.472 146.662 363.315 cv
146.662 354.85 li
cp
f
145.485 353.703 mo
145.756 353.557 146.062 353.466 146.391 353.466 cv
146.429 353.466 li
147.486 353.466 148.343 354.322 148.343 355.379 cv
148.343 363.149 li
148.343 364.206 147.486 365.063 146.429 365.063 cv
146.391 365.063 li
146.062 365.063 145.756 364.973 145.485 364.826 cv
145.485 353.703 li
cp
f
130.907 356.401 mo
130.907 357.192 130.106 357.579 129.353 358.12 cv
130.949 358.12 li
130.949 359.017 li
127.926 359.017 li
127.926 358.762 li
127.926 358.364 128.138 358.083 128.435 357.818 cv
129.263 357.081 129.856 356.783 129.856 356.438 cv
129.856 356.237 129.724 356.052 129.4 356.052 cv
129.072 356.052 128.886 356.264 128.886 356.55 cv
128.886 356.656 li
127.942 356.656 li
127.937 356.539 li
127.937 355.791 128.456 355.304 129.501 355.304 cv
130.366 355.304 130.907 355.738 130.907 356.401 cv
cp
f
133.384 355.304 mo
133.305 355.882 132.557 356.975 132.053 357.489 cv
133.104 357.489 li
133.104 356.73 li
133.284 356.47 133.586 355.956 133.661 355.653 cv
134.111 355.653 li
134.111 357.489 li
134.621 357.489 li
134.621 358.269 li
134.111 358.269 li
134.111 359.017 li
133.104 359.017 li
133.104 358.269 li
131.327 358.269 li
131.327 357.479 li
131.671 356.975 132.106 356.136 132.345 355.304 cv
133.384 355.304 li
cp
f
135.746 359.271 mo
135.099 359.271 li
135.948 355.112 li
136.589 355.112 li
135.746 359.271 li
cp
f
140.197 355.85 mo
139.524 356.683 138.898 357.627 138.898 358.704 cv
138.898 359.017 li
137.72 359.017 li
137.72 358.009 138.208 357.054 138.871 356.279 cv
137.121 356.279 li
137.121 355.367 li
140.197 355.367 li
140.197 355.85 li
cp
f
370.444 378.156 mo
356.927 378.156 li
354.501 378.156 352.528 376.183 352.528 373.758 cv
352.528 352.083 li
352.528 349.657 354.501 347.685 356.927 347.685 cv
364.067 347.685 li
365.66 342.52 370.763 338.728 376.808 338.728 cv
384.122 338.728 390.073 344.274 390.073 351.092 cv
390.073 354.703 388.408 357.966 385.732 360.233 cv
385.922 360.68 386.024 361.162 386.021 361.656 cv
385.985 368.313 381.058 373.858 374.674 374.898 cv
374.168 376.768 372.473 378.156 370.444 378.156 cv
.454902 .482353 .196078 rgb
f
388.073 349.092 mo
388.073 342.274 382.122 336.728 374.808 336.728 cv
368.763 336.728 363.66 340.521 362.067 345.685 cv
354.927 345.685 li
352.501 345.685 350.528 347.657 350.528 350.083 cv
350.528 371.758 li
350.528 374.183 352.501 376.156 354.927 376.156 cv
368.444 376.156 li
370.473 376.156 372.168 374.769 372.674 372.898 cv
379.058 371.858 383.985 366.313 384.021 359.656 cv
384.024 359.162 383.922 358.68 383.732 358.233 cv
386.408 355.966 388.073 352.703 388.073 349.092 cv
cp
1 1 1 rgb
f
370.569 362.817 mo
370.569 363.742 li
372.822 363.714 374.646 361.89 374.675 359.637 cv
373.749 359.637 li
373.721 361.38 372.312 362.789 370.569 362.817 cv
cp
.286275 .32549 .360784 rgb
f
370.569 365.711 mo
370.569 366.637 li
374.417 366.607 377.54 363.485 377.568 359.637 cv
376.644 359.637 li
376.614 362.975 373.906 365.683 370.569 365.711 cv
cp
f
370.569 368.563 mo
370.569 369.489 li
375.99 369.46 380.393 365.058 380.421 359.637 cv
379.496 359.637 li
379.468 364.548 375.479 368.535 370.569 368.563 cv
cp
f
368.444 372.556 mo
354.927 372.556 li
354.485 372.556 354.128 372.198 354.128 371.758 cv
354.128 350.083 li
354.128 349.643 354.485 349.285 354.927 349.285 cv
368.444 349.285 li
368.886 349.285 369.243 349.643 369.243 350.083 cv
369.243 371.758 li
369.243 372.198 368.886 372.556 368.444 372.556 cv
cp
f
367.597 369.296 mo
355.774 369.296 li
355.774 351.785 li
367.597 351.785 li
367.597 369.296 li
cp
.180392 .807843 .909804 rgb
f
362.219 370.858 mo
362.219 371.153 361.98 371.393 361.686 371.393 cv
361.391 371.393 361.151 371.153 361.151 370.858 cv
361.151 370.563 361.391 370.325 361.686 370.325 cv
361.98 370.325 362.219 370.563 362.219 370.858 cv
cp
1 1 1 rgb
f
363.211 350.833 mo
360.16 350.833 li
360.001 350.711 li
360.001 350.497 li
360.16 350.375 li
363.211 350.375 li
363.37 350.497 li
363.37 350.711 li
363.211 350.833 li
cp
f
365.144 349.093 mo
365.144 344.26 369.479 340.328 374.809 340.328 cv
380.138 340.328 384.474 344.26 384.474 349.093 cv
384.474 353.598 380.756 357.306 375.89 357.793 cv
375.894 357.85 li
374.939 357.852 li
374.855 357.855 374.805 357.859 374.658 357.851 cv
365.144 357.857 li
365.144 349.093 li
cp
.988235 .74902 .109804 rgb
f
372.568 348.457 mo
372.568 349.576 371.435 350.124 370.367 350.891 cv
372.629 350.891 li
372.629 352.16 li
368.348 352.16 li
368.348 351.8 li
368.348 351.236 368.647 350.838 369.067 350.462 cv
370.24 349.418 371.081 348.998 371.081 348.51 cv
371.081 348.224 370.893 347.961 370.436 347.961 cv
369.97 347.961 369.707 348.262 369.707 348.667 cv
369.707 348.817 li
368.369 348.817 li
368.362 348.652 li
368.362 347.594 369.098 346.902 370.577 346.902 cv
371.802 346.902 372.568 347.519 372.568 348.457 cv
cp
1 1 1 rgb
f
376.077 346.902 mo
375.965 347.721 374.905 349.268 374.192 349.996 cv
375.679 349.996 li
375.679 348.923 li
375.935 348.555 376.363 347.826 376.468 347.397 cv
377.106 347.397 li
377.106 349.996 li
377.827 349.996 li
377.827 351.101 li
377.106 351.101 li
377.106 352.16 li
375.679 352.16 li
375.679 351.101 li
373.163 351.101 li
373.163 349.981 li
373.651 349.268 374.268 348.081 374.605 346.902 cv
376.077 346.902 li
cp
f
379.262 349.953 mo
379.458 349.757 379.737 349.641 380.031 349.641 cv
380.614 349.641 380.89 349.981 380.89 350.564 cv
380.89 352.16 li
379.961 352.16 li
379.961 350.676 li
379.961 350.472 379.854 350.326 379.649 350.326 cv
379.416 350.326 379.262 350.504 379.262 350.714 cv
379.262 352.16 li
378.333 352.16 li
378.333 348.777 li
379.262 348.777 li
379.262 349.953 li
cp
f
362.208 361.378 mo
361.547 361.378 li
361.446 361.378 361.364 361.296 361.364 361.195 cv
361.364 361.191 li
361.364 361.091 361.446 361.009 361.547 361.009 cv
362.208 361.009 li
362.357 361.093 li
363.587 360.989 363.956 360.254 364.067 359.812 cv
363.969 359.775 li
363.969 357.859 li
363.528 357.052 362.671 356.503 361.686 356.503 cv
360.7 356.503 359.843 357.052 359.401 357.859 cv
359.401 359.775 li
359.224 359.822 li
359.216 359.822 li
359.188 359.816 li
359.498 360.904 360.497 361.702 361.686 361.702 cv
362.519 361.702 363.258 361.309 363.734 360.699 cv
363.451 360.975 363.026 361.203 362.378 361.26 cv
362.208 361.378 li
cp
.0196078 .592157 .65098 rgb
f
366.813 365.944 mo
366.41 363.607 li
366.264 362.76 365.703 362.041 364.917 361.693 cv
363.745 361.175 li
363.274 361.801 362.528 362.207 361.686 362.207 cv
360.842 362.207 360.096 361.801 359.626 361.175 cv
358.454 361.693 li
357.668 362.041 357.107 362.76 356.961 363.607 cv
356.558 365.944 li
356.488 366.347 356.798 366.714 357.206 366.714 cv
366.165 366.714 li
366.573 366.714 366.883 366.347 366.813 365.944 cv
cp
f
359.224 357.538 mo
359.401 357.585 li
359.438 357.188 359.54 356.844 359.768 356.493 cv
360.143 355.917 360.789 355.621 361.686 355.621 cv
362.581 355.621 363.228 355.917 363.603 356.493 cv
363.831 356.845 363.933 357.188 363.969 357.585 cv
364.147 357.538 li
364.155 357.538 li
364.265 357.561 li
364.221 357.129 364.104 356.675 363.85 356.28 cv
363.416 355.609 362.687 355.265 361.686 355.265 cv
360.685 355.265 359.955 355.609 359.521 356.28 cv
359.267 356.675 359.15 357.129 359.106 357.561 cv
359.216 357.538 li
359.224 357.538 li
cp
f
358.853 359.511 mo
358.839 359.445 li
358.839 357.915 li
358.867 357.775 li
358.562 357.84 358.326 358.203 358.326 358.645 cv
358.326 359.078 358.554 359.438 358.853 359.511 cv
cp
f
358.917 359.33 mo
358.927 359.384 li
358.948 359.521 359.045 359.624 359.169 359.635 cv
359.189 359.64 li
359.194 359.64 li
359.323 359.602 li
359.323 358.027 li
359.323 357.859 li
359.323 357.802 li
359.194 357.764 li
359.189 357.764 li
359.11 357.781 li
358.938 357.959 li
358.917 358.073 li
358.917 359.33 li
cp
f
364.155 359.822 mo
364.147 359.822 li
364.067 359.812 li
363.956 360.254 363.587 360.989 362.357 361.093 cv
362.208 361.009 li
361.547 361.009 li
361.446 361.009 361.364 361.091 361.364 361.191 cv
361.364 361.195 li
361.364 361.296 361.446 361.378 361.547 361.378 cv
362.208 361.378 li
362.378 361.26 li
363.026 361.203 363.451 360.975 363.734 360.699 cv
364.039 360.403 364.176 360.056 364.235 359.806 cv
364.155 359.822 li
cp
.831373 .254902 .00784314 rgb
f
364.531 359.445 mo
364.519 359.511 li
364.817 359.438 365.045 359.078 365.045 358.645 cv
365.045 358.203 364.81 357.84 364.504 357.775 cv
364.531 357.915 li
364.531 359.445 li
cp
.0196078 .592157 .65098 rgb
f
364.176 357.764 mo
364.047 357.802 li
364.047 357.861 li
364.047 358.027 li
364.047 359.602 li
364.118 359.631 li
364.176 359.64 li
364.182 359.64 li
364.24 359.626 li
364.346 359.599 364.425 359.506 364.444 359.384 cv
364.453 359.33 li
364.453 358.073 li
364.434 357.959 li
364.261 357.781 li
364.182 357.764 li
364.176 357.764 li
cp
f
gsave
279.032 377.106 mo
277.251 377.106 275.45 377.016 273.68 376.834 cv
271.308 376.591 269.074 376.002 267.039 375.083 cv
266.809 374.959 li
264.426 374.268 262.211 373 260.443 371.25 cv
260.337 371.156 260.233 371.057 260.137 370.95 cv
259.447 370.188 li
259.412 370.148 259.378 370.109 259.344 370.069 cv
260.939 371.399 262.815 372.381 264.809 372.959 cv
265.039 373.083 li
267.074 374.002 269.308 374.591 271.68 374.834 cv
273.45 375.016 275.251 375.106 277.032 375.106 cv
278.814 375.106 280.614 375.016 282.386 374.834 cv
284.757 374.592 286.991 374.002 289.023 373.084 cv
292.385 371.568 291.663 367.492 290.384 363.311 cv
290.325 363.119 290.25 362.932 290.16 362.752 cv
290.031 362.495 289.887 362.248 289.728 362.009 cv
290.771 362.719 291.609 363.653 292.16 364.752 cv
292.25 364.932 292.325 365.119 292.384 365.312 cv
293.663 369.492 294.385 373.568 291.023 375.084 cv
288.991 376.002 286.757 376.592 284.386 376.834 cv
282.614 377.016 280.813 377.106 279.032 377.106 cv
287.06 359.601 mo
286.408 359.245 285.693 358.97 284.932 358.786 cv
284.441 358.644 li
284.724 358.25 284.953 357.839 285.144 357.425 cv
285.223 357.329 li
286.5 356.372 287.325 354.759 287.325 352.893 cv
287.325 351.356 286.763 349.993 285.851 349.023 cv
285.81 346.757 285.309 345.185 284.298 344.078 cv
284.091 343.851 283.863 343.65 283.623 343.474 cv
283.527 343.3 283.424 343.132 283.315 342.969 cv
284.262 343.596 285.052 344.448 285.623 345.474 cv
285.863 345.65 286.091 345.851 286.298 346.078 cv
287.309 347.186 287.81 348.757 287.851 351.023 cv
288.763 351.993 289.325 353.356 289.325 354.893 cv
289.325 356.759 288.5 358.372 287.223 359.329 cv
287.144 359.425 li
287.116 359.484 287.089 359.543 287.06 359.601 cv
clp
259.344 342.969 mo
294.385 342.969 li
294.385 377.106 li
259.344 377.106 li
cp
.454902 .482353 .196078 rgb
f
grestore
290.384 363.311 mo
290.325 363.119 290.25 362.932 290.16 362.752 cv
289.177 360.79 287.275 359.351 284.932 358.786 cv
284.441 358.644 li
284.724 358.25 284.953 357.839 285.144 357.425 cv
285.223 357.329 li
286.5 356.372 287.325 354.759 287.325 352.893 cv
287.325 351.356 286.763 349.993 285.851 349.023 cv
285.81 346.757 285.309 345.185 284.298 344.078 cv
284.091 343.851 283.863 343.65 283.623 343.474 cv
282.357 341.201 280.014 339.777 277.282 339.777 cv
276.286 339.777 275.261 339.965 274.231 340.334 cv
272.211 341.061 271.214 341.275 270.918 341.329 cv
270.807 341.327 li
269.578 341.327 268.568 341.972 267.91 343.038 cv
267.742 343.311 267.625 343.602 267.551 343.9 cv
263.932 344.236 260.518 345.887 258.031 348.553 cv
257.923 348.656 257.818 348.766 257.721 348.885 cv
257.074 349.661 li
256.941 349.821 256.825 349.991 256.724 350.169 cv
255.05 352.565 254.105 355.451 254.041 358.37 cv
254.027 358.53 254.023 358.691 254.031 358.853 cv
254.076 359.841 li
254.083 360.001 254.101 360.157 254.128 360.312 cv
254.419 362.987 255.426 365.515 257.054 367.663 cv
257.168 367.849 257.299 368.023 257.447 368.187 cv
258.137 368.95 li
258.233 369.057 258.337 369.156 258.443 369.25 cv
260.211 371 262.426 372.268 264.809 372.959 cv
265.039 373.083 li
267.074 374.002 269.308 374.591 271.68 374.834 cv
273.45 375.016 275.251 375.106 277.032 375.106 cv
278.814 375.106 280.614 375.016 282.386 374.834 cv
284.757 374.592 286.991 374.002 289.023 373.084 cv
292.385 371.568 291.663 367.492 290.384 363.311 cv
1 1 1 rgb
f
260.627 352.61 mo
260.705 352.507 260.759 352.431 260.755 352.429 cv
260.627 352.61 li
cp
.968627 .733333 .109804 rgb
f
266.734 348.64 mo
267.027 348.615 267.586 348.545 267.636 348.486 cv
267.332 348.524 267.031 348.576 266.734 348.64 cv
cp
f
270.26 368.887 mo
271.298 367.811 272.214 366.607 272.939 365.301 cv
273.902 365.585 274.833 365.949 275.738 366.38 cv
274.41 367.564 272.823 368.365 271.11 368.736 cv
271.303 368.726 271.219 368.762 270.26 368.887 cv
269.409 364.661 mo
270.266 364.72 271.107 364.845 271.943 365.038 cv
271.492 365.818 270.976 366.557 270.397 367.249 cv
270.084 367.626 269.754 367.988 269.409 368.337 cv
269.409 364.661 li
269.409 359.681 mo
273.632 359.681 li
273.588 360.372 273.48 361.058 273.31 361.728 cv
273.101 362.559 272.801 363.358 272.428 364.129 cv
271.439 363.885 270.425 363.726 269.409 363.661 cv
269.409 359.681 li
269.409 354.22 mo
270.432 354.155 271.451 353.994 272.445 353.748 cv
273.158 355.304 273.604 356.974 273.649 358.689 cv
269.409 358.689 li
269.409 354.22 li
269.409 349.129 mo
269.529 349.27 269.65 349.41 269.768 349.553 cv
270.606 350.575 271.366 351.666 271.993 352.832 cv
271.141 353.03 270.282 353.161 269.409 353.22 cv
269.409 349.129 li
276.093 351.327 mo
275.088 351.829 274.054 352.248 272.977 352.568 cv
272.213 351.101 271.241 349.739 270.166 348.483 cv
272.107 348.724 273.946 349.516 275.455 350.757 cv
275.264 350.554 275.285 350.541 276.093 351.327 cv
268.418 353.254 mo
267.51 353.258 266.602 353.182 265.707 353.024 cv
266.228 352.026 266.849 351.083 267.532 350.188 cv
267.611 350.086 li
267.533 350.187 li
267.811 349.824 268.107 349.463 268.418 349.101 cv
268.418 353.254 li
268.418 358.689 mo
264.153 358.689 li
264.166 358.209 264.209 357.73 264.282 357.256 cv
264.457 356.115 264.798 355.012 265.262 353.957 cv
266.3 354.156 267.362 354.25 268.418 354.253 cv
268.418 358.689 li
268.418 363.628 mo
267.366 363.628 266.31 363.725 265.276 363.922 cv
264.656 362.586 264.265 361.153 264.171 359.681 cv
268.418 359.681 li
268.418 363.628 li
268.418 368.359 mo
268.203 368.143 267.992 367.922 267.789 367.694 cv
267.789 367.693 li
267.784 367.688 li
267.007 366.818 266.322 365.868 265.752 364.849 cv
266.635 364.697 267.521 364.623 268.418 364.627 cv
268.418 368.359 li
261.765 366.081 mo
262.724 365.65 263.71 365.308 264.732 365.062 cv
265.477 366.458 266.439 367.742 267.536 368.88 cv
265.621 368.619 263.813 367.82 262.328 366.584 cv
262.568 366.826 262.624 366.911 261.765 366.081 cv
258.678 359.681 mo
263.175 359.681 li
263.265 361.216 263.655 362.729 264.278 364.133 cv
264.265 364.136 li
264.269 364.147 li
263.164 364.43 262.08 364.826 261.047 365.312 cv
259.706 363.721 258.878 361.749 258.678 359.681 cv
260.627 352.61 mo
260.323 353.015 259.66 353.855 260.755 352.429 cv
261.873 352.98 263.053 353.424 264.261 353.732 cv
264.256 353.743 li
264.269 353.746 li
263.605 355.307 263.198 356.99 263.157 358.689 cv
258.629 358.689 li
258.629 356.5 259.339 354.366 260.627 352.61 cv
267.636 348.486 mo
266.5 349.811 265.48 351.256 264.697 352.818 cv
263.568 352.543 262.469 352.146 261.419 351.647 cv
262.855 350.118 264.71 349.077 266.734 348.64 cv
266.424 348.666 266.413 348.639 267.636 348.486 cv
279.701 361.92 mo
279.701 361.92 278.875 361.744 278.733 361.689 cv
278.382 362.84 277.841 363.927 277.108 364.894 cv
277.182 364.849 277.07 365.009 276.493 365.638 cv
275.503 365.147 274.471 364.728 273.415 364.402 cv
273.42 364.392 li
273.407 364.389 li
274.1 362.914 274.533 361.309 274.629 359.681 cv
274.646 358.689 li
274.603 356.896 274.149 355.123 273.421 353.488 cv
273.432 353.484 li
273.428 353.476 li
274.589 353.117 275.72 352.645 276.799 352.089 cv
277.049 352.387 277.274 352.701 277.486 353.024 cv
278.422 352.657 li
278.196 352.298 277.958 351.946 277.689 351.614 cv
277.707 351.605 li
277.283 351.136 li
277.023 350.847 li
277.014 350.852 li
274.972 348.744 272.123 347.494 269.189 347.423 cv
269.185 347.418 li
269.035 347.417 li
268.992 347.416 li
268.929 347.415 li
268.84 347.416 li
268.81 347.416 li
268.785 347.417 li
268.597 347.419 li
268.592 347.425 li
265.513 347.512 262.553 348.889 260.503 351.186 cv
260.493 351.182 li
260.237 351.488 li
260.236 351.489 li
259.845 351.961 li
259.861 351.97 li
258.425 353.906 257.638 356.268 257.638 358.689 cv
257.628 358.689 li
257.651 359.207 li
257.673 359.681 li
257.683 359.681 li
257.878 361.902 258.736 364.024 260.135 365.761 cv
260.115 365.77 li
260.555 366.256 li
260.807 366.534 li
260.816 366.529 li
262.814 368.592 265.576 369.831 268.444 369.95 cv
268.444 369.964 li
269.129 369.964 li
269.132 369.962 li
269.135 369.959 li
271.945 369.905 274.652 368.791 276.687 366.851 cv
276.695 366.855 li
276.951 366.595 li
277.423 366.115 li
277.402 366.104 li
278.47 364.883 279.243 363.454 279.701 361.92 cv
f
271.11 368.736 mo
270.894 368.748 270.326 368.817 270.26 368.887 cv
270.547 368.849 270.83 368.797 271.11 368.736 cv
cp
f
276.493 365.638 mo
276.712 365.399 276.915 365.149 277.108 364.894 cv
276.99 364.968 276.387 365.586 276.493 365.638 cv
f
276.093 351.327 mo
275.888 351.128 275.675 350.938 275.455 350.757 cv
275.646 350.959 276.047 351.351 276.093 351.327 cv
cp
f
261.765 366.081 mo
261.946 366.257 262.136 366.423 262.328 366.584 cv
262.128 366.38 261.799 366.066 261.765 366.081 cv
cp
f
279.124 358.47 mo
277.214 358.47 li
276.809 358.47 li
274.898 358.47 li
274.898 358.47 275.544 362.14 272.471 365.174 cv
276.809 370.414 li
277.214 370.414 li
281.552 365.174 li
278.479 362.14 279.124 358.47 279.124 358.47 cv
.988235 .752941 .513726 rgb
f
274.671 361.437 mo
274.358 362.594 273.724 363.937 272.471 365.174 cv
276.809 370.414 li
277.214 370.414 li
281.552 365.174 li
280.299 363.937 279.664 362.594 279.352 361.437 cv
277.032 362.718 li
274.671 361.437 li
1 1 1 rgb
f
274.671 361.437 mo
274.358 362.594 276.714 364.409 276.714 364.409 cv
275.537 370.414 li
277.011 371.299 li
278.482 370.414 li
277.374 364.441 li
277.374 364.441 279.664 362.594 279.352 361.437 cv
277.032 362.718 li
274.671 361.437 li
.831373 .254902 .00784314 rgb
f
279.124 358.47 mo
277.214 358.47 li
276.809 358.47 li
274.898 358.47 li
274.898 358.47 274.982 358.947 274.945 359.699 cv
275.669 360.063 276.4 360.285 276.987 360.285 cv
277.589 360.285 278.338 360.049 279.075 359.667 cv
279.043 358.934 279.124 358.47 279.124 358.47 cv
cp
.909804 .666667 .388235 rgb
f
282.576 351.533 mo
282.413 351.112 282.128 351.33 281.906 351.606 cv
281.97 348.344 280.247 346.687 280.247 346.687 cv
277.012 346.687 li
273.775 346.687 li
273.775 346.687 272.041 348.34 272.096 351.583 cv
271.877 351.318 271.604 351.125 271.446 351.533 cv
271.152 352.292 271.844 353.331 271.711 354.385 cv
271.622 355.098 272.184 355.025 272.539 354.826 cv
272.674 355.365 272.872 356.001 273.192 356.745 cv
273.869 358.318 275.811 359.751 277.002 359.751 cv
278.193 359.751 280.106 358.307 280.811 356.745 cv
281.135 356.027 281.337 355.431 281.466 354.817 cv
281.82 355.023 282.402 355.108 282.312 354.385 cv
282.179 353.331 282.87 352.292 282.576 351.533 cv
cp
.988235 .752941 .513726 rgb
f
280.907 346.349 mo
280.907 346.349 274.979 351.659 271.142 344.931 cv
271.142 344.931 272.208 344.888 275.45 343.722 cv
278.419 342.654 280.43 344.214 280.907 346.349 cv
cp
.631373 .278431 .12549 rgb
f
280.542 346.313 mo
279.166 346.672 li
279.347 347.008 280.267 348.129 280.773 349.496 cv
281.249 350.777 281.322 352.273 281.272 353.542 cv
281.523 353.114 li
281.883 352.502 282.1 351.82 282.165 351.113 cv
282.341 349.192 282.437 345.579 280.542 346.313 cv
cp
f
272.354 353.114 mo
272.605 353.542 li
272.557 352.273 272.629 350.777 273.104 349.496 cv
273.612 348.129 274.532 347.008 274.713 346.672 cv
273.336 346.313 li
271.441 345.579 271.537 349.192 271.714 351.113 cv
271.778 351.82 271.995 352.502 272.354 353.114 cv
cp
f
279.888 362.87 mo
279.781 362.651 279.688 362.435 279.607 362.221 cv
279.639 362.121 279.671 362.021 279.701 361.92 cv
279.701 361.92 279.61 361.9 279.482 361.872 cv
279.44 361.745 279.402 361.619 279.367 361.495 cv
280.423 362.111 li
279.888 362.87 li
.823529 .823529 .823529 rgb
f
279.607 362.221 mo
279.562 362.104 279.52 361.988 279.482 361.872 cv
279.61 361.9 279.701 361.92 279.701 361.92 cv
279.671 362.021 279.639 362.121 279.607 362.221 cv
.796078 .603922 .0901961 rgb
f
278.302 365.12 mo
277.672 364.184 li
278.269 363.648 279.539 362.385 279.365 361.494 cv
279.367 361.495 li
279.402 361.619 279.44 361.745 279.482 361.872 cv
279.52 361.988 279.562 362.104 279.607 362.221 cv
279.688 362.435 279.781 362.651 279.888 362.87 cv
278.302 365.12 li
.823529 .823529 .823529 rgb
f
274.152 362.834 mo
274.064 362.709 li
274.168 362.378 274.259 362.044 274.337 361.706 cv
274.647 361.525 li
274.529 361.943 274.368 362.384 274.152 362.834 cv
f
274.064 362.709 mo
273.643 362.111 li
274.337 361.706 li
274.259 362.044 274.168 362.378 274.064 362.709 cv
.796078 .603922 .0901961 rgb
f
275.764 365.12 mo
274.152 362.834 li
274.368 362.384 274.529 361.943 274.647 361.525 cv
274.653 361.522 li
274.512 362.411 275.804 363.638 276.41 364.159 cv
275.764 365.12 li
.823529 .823529 .823529 rgb
f
277.032 362.718 mo
279.191 361.393 li
279.309 361.461 li
277.032 362.718 li
.811765 .619608 .423529 rgb
f
277.032 362.718 mo
274.736 361.473 li
274.874 361.393 li
277.032 362.718 li
f
277.672 364.184 mo
277.032 363.233 li
276.41 364.159 li
275.804 363.638 274.512 362.411 274.653 361.522 cv
274.736 361.473 li
277.032 362.718 li
279.309 361.461 li
279.365 361.494 li
279.539 362.385 278.269 363.648 277.672 364.184 cv
.682353 .207843 .00784314 rgb
f
272.313 351.659 mo
272.277 350.337 272.414 348.706 273.093 347.421 cv
273.859 345.969 275.18 345.225 277.011 345.225 cv
278.842 345.225 280.163 345.969 280.93 347.421 cv
281.607 348.706 281.745 350.337 281.71 351.659 cv
282.323 351.659 li
282.366 350.197 282.211 348.371 281.434 346.886 cv
280.548 345.194 279.057 344.326 277.011 344.326 cv
274.966 344.326 273.475 345.194 272.589 346.886 cv
271.811 348.371 271.656 350.197 271.699 351.659 cv
272.313 351.659 li
cp
.286275 .32549 .360784 rgb
f
271.984 351.229 mo
271.854 351.167 271.716 351.132 271.571 351.132 cv
270.868 351.132 270.298 351.921 270.298 352.895 cv
270.298 353.868 270.868 354.656 271.571 354.656 cv
271.716 354.656 271.854 354.621 271.984 354.56 cv
271.984 351.229 li
cp
f
272.447 350.777 mo
272.341 350.72 272.221 350.685 272.092 350.685 cv
272.076 350.685 li
271.66 350.685 271.323 351.021 271.323 351.438 cv
271.323 354.494 li
271.323 354.91 271.66 355.248 272.076 355.248 cv
272.092 355.248 li
272.221 355.248 272.341 355.212 272.447 355.154 cv
272.447 350.777 li
cp
.968627 .733333 .109804 rgb
f
282.206 354.561 mo
281.869 354.56 li
281.869 354.686 281.819 357.497 278.354 357.786 cv
278.289 357.688 278.183 357.619 278.056 357.619 cv
276.735 357.619 li
276.533 357.619 276.37 357.783 276.37 357.984 cv
276.37 357.992 li
276.37 358.193 276.533 358.357 276.735 358.357 cv
278.056 358.357 li
278.212 358.357 278.343 358.259 278.395 358.121 cv
282.151 357.795 282.206 354.594 282.206 354.561 cv
cp
.286275 .32549 .360784 rgb
f
282.038 351.229 mo
282.168 351.167 282.307 351.132 282.451 351.132 cv
283.154 351.132 283.725 351.921 283.725 352.895 cv
283.725 353.868 283.154 354.656 282.451 354.656 cv
282.307 354.656 282.168 354.621 282.038 354.56 cv
282.038 351.229 li
cp
f
281.575 350.777 mo
281.682 350.72 281.802 350.685 281.931 350.685 cv
281.946 350.685 li
282.362 350.685 282.699 351.021 282.699 351.438 cv
282.699 354.494 li
282.699 354.91 282.362 355.248 281.946 355.248 cv
281.931 355.248 li
281.802 355.248 281.682 355.212 281.575 355.154 cv
281.575 350.777 li
cp
.968627 .733333 .109804 rgb
f
277.032 362.718 mo
278.302 364.445 li
280.423 361.438 li
279.191 360.719 li
277.032 362.718 li
cp
1 1 1 rgb
f
277.032 362.718 mo
275.764 364.445 li
273.643 361.438 li
274.874 360.719 li
277.032 362.718 li
cp
f
286.941 364.365 mo
286.43 363.346 285.35 362.571 284.016 362.27 cv
279.574 360.973 li
279.574 360.973 279.784 363.047 278.814 366.015 cv
278.036 368.399 277.021 370.871 277.021 370.871 cv
277.021 370.871 275.952 368.418 275.227 366.014 cv
274.333 363.047 274.455 360.973 274.455 360.973 cv
270.05 362.27 li
268.716 362.571 267.635 363.346 267.123 364.365 cv
267.123 364.365 265.589 369.382 266.521 369.803 cv
268.256 370.585 270.132 371.057 272.046 371.253 cv
275.36 371.592 278.704 371.592 282.019 371.253 cv
283.934 371.057 285.81 370.585 287.544 369.803 cv
288.477 369.382 286.941 364.365 286.941 364.365 cv
cp
.286275 .32549 .360784 rgb
f
330.001 376.795 mo
326.087 376.795 li
325.212 376.795 324.366 376.477 323.71 375.898 cv
323.511 375.705 li
319.866 375.705 li
319.667 375.898 li
319.011 376.477 318.165 376.795 317.29 376.795 cv
313.376 376.795 li
312.501 376.795 311.655 376.477 310.999 375.898 cv
310.797 375.721 310.618 375.528 310.452 375.329 cv
309.205 374.906 308.092 374.14 307.244 373.087 cv
305.925 371.448 305.424 369.331 305.872 367.28 cv
307.045 361.913 li
306.984 361.986 li
306.509 362.462 li
306.34 362.632 306.155 362.782 305.958 362.913 cv
305.831 363.103 305.686 363.284 305.519 363.451 cv
305.044 363.928 li
304.369 364.604 303.452 364.984 302.496 364.984 cv
302.488 364.984 li
301.53 364.982 300.611 364.598 299.937 363.916 cv
295.79 359.726 295.789 352.906 299.935 348.715 cv
300.609 348.034 301.527 347.649 302.485 347.647 cv
302.495 347.647 li
303.449 347.647 304.365 348.026 305.04 348.702 cv
305.517 349.178 li
305.685 349.347 305.831 349.528 305.959 349.719 cv
306.157 349.882 li
306.894 349.248 307.771 348.699 308.805 348.25 cv
310.648 347.448 314.772 346.102 321.683 346.09 cv
328.604 346.102 332.728 347.448 334.572 348.25 cv
335.605 348.7 336.482 349.248 337.219 349.882 cv
337.417 349.719 li
337.545 349.528 337.691 349.347 337.859 349.178 cv
338.336 348.702 li
339.011 348.026 339.927 347.647 340.881 347.647 cv
340.891 347.647 li
341.849 347.649 342.767 348.034 343.44 348.715 cv
347.586 352.906 347.586 359.725 343.44 363.916 cv
342.767 364.598 341.849 364.981 340.891 364.984 cv
340.881 364.984 li
339.927 364.984 339.011 364.605 338.336 363.93 cv
337.859 363.453 li
337.691 363.285 337.546 363.103 337.418 362.913 cv
337.223 362.783 337.039 362.633 336.87 362.465 cv
336.52 362.114 li
337.648 367.279 li
338.096 369.331 337.596 371.447 336.275 373.087 cv
335.386 374.191 334.201 374.976 332.879 375.383 cv
332.727 375.561 332.564 375.734 332.383 375.895 cv
331.726 376.476 330.878 376.795 330.001 376.795 cv
.454902 .482353 .196078 rgb
f
341.44 346.715 mo
340.767 346.034 339.849 345.649 338.891 345.647 cv
338.881 345.647 li
337.927 345.647 337.011 346.026 336.336 346.702 cv
335.859 347.178 li
335.691 347.347 335.545 347.528 335.417 347.719 cv
335.219 347.882 li
334.482 347.248 333.605 346.7 332.572 346.25 cv
330.729 345.448 326.604 344.102 319.683 344.09 cv
312.772 344.102 308.648 345.448 306.805 346.25 cv
305.771 346.699 304.894 347.248 304.157 347.882 cv
303.959 347.719 li
303.831 347.528 303.685 347.347 303.517 347.178 cv
303.04 346.702 li
302.365 346.026 301.449 345.647 300.495 345.647 cv
300.485 345.647 li
299.527 345.649 298.609 346.034 297.936 346.715 cv
293.789 350.906 293.79 357.726 297.938 361.916 cv
298.611 362.598 299.53 362.982 300.487 362.984 cv
300.496 362.984 li
301.452 362.984 302.369 362.604 303.044 361.928 cv
303.52 361.451 li
303.687 361.284 303.831 361.103 303.958 360.913 cv
304.155 360.782 304.34 360.632 304.509 360.462 cv
304.984 359.986 li
305.045 359.913 li
303.872 365.28 li
303.424 367.331 303.925 369.448 305.244 371.087 cv
306.092 372.14 307.205 372.906 308.452 373.329 cv
308.618 373.528 308.797 373.721 308.999 373.898 cv
309.655 374.477 310.501 374.795 311.376 374.795 cv
315.29 374.795 li
316.165 374.795 317.011 374.477 317.667 373.898 cv
317.866 373.705 li
321.511 373.705 li
321.71 373.898 li
322.366 374.477 323.212 374.795 324.087 374.795 cv
328.001 374.795 li
328.878 374.795 329.726 374.476 330.383 373.895 cv
330.564 373.734 330.727 373.561 330.879 373.383 cv
332.201 372.976 333.386 372.192 334.275 371.087 cv
335.596 369.447 336.096 367.331 335.648 365.279 cv
334.52 360.114 li
334.87 360.465 li
335.039 360.633 335.223 360.783 335.418 360.913 cv
335.546 361.104 335.691 361.285 335.859 361.453 cv
336.336 361.93 li
337.011 362.605 337.927 362.984 338.881 362.984 cv
338.891 362.984 li
339.849 362.981 340.767 362.598 341.44 361.916 cv
345.586 357.725 345.586 350.906 341.44 346.715 cv
cp
1 1 1 rgb
f
311.375 371.195 mo
315.29 371.195 li
315.53 370.984 315.671 370.733 315.671 370.463 cv
315.671 369.722 314.624 369.121 313.333 369.121 cv
312.042 369.121 310.995 369.722 310.995 370.463 cv
310.995 370.733 311.136 370.984 311.375 371.195 cv
cp
.286275 .32549 .360784 rgb
f
324.086 371.195 mo
328.001 371.195 li
328.24 370.984 328.381 370.733 328.381 370.463 cv
328.381 369.722 327.335 369.121 326.044 369.121 cv
324.752 369.121 323.706 369.722 323.706 370.463 cv
323.706 370.733 323.847 370.984 324.086 371.195 cv
cp
f
332.131 366.049 mo
330.07 356.623 li
329.429 353.48 li
325.909 353.48 li
323.111 353.48 li
323.111 354.792 li
319.76 354.792 li
316.409 354.792 li
316.409 353.48 li
313.61 353.48 li
310.092 353.48 li
309.449 356.623 li
307.389 366.049 li
306.933 368.136 308.556 370.105 310.733 370.105 cv
319.76 370.105 li
328.786 370.105 li
330.964 370.105 332.587 368.136 332.131 366.049 cv
cp
f
305.144 356.061 mo
312.518 356.061 li
312.651 356.061 312.761 355.964 312.761 355.844 cv
312.761 353.25 li
312.761 353.13 312.651 353.033 312.518 353.033 cv
312.45 353.033 li
313.545 351.977 316.916 351.029 319.688 351.01 cv
322.46 351.029 325.832 351.977 326.927 353.033 cv
326.859 353.033 li
326.725 353.033 326.616 353.13 326.616 353.25 cv
326.616 355.844 li
326.616 355.964 326.725 356.061 326.859 356.061 cv
334.232 356.061 li
334.367 356.061 334.476 355.964 334.476 355.844 cv
334.476 353.248 li
334.476 353.129 334.368 353.033 334.234 353.033 cv
334.232 353.033 li
333.974 351.48 333.057 350.387 331.136 349.552 cv
330.176 349.134 326.522 347.701 319.688 347.689 cv
312.854 347.701 309.2 349.134 308.24 349.552 cv
306.319 350.387 305.403 351.48 305.144 353.033 cv
305.142 353.033 li
305.009 353.033 304.9 353.129 304.9 353.248 cv
304.9 355.844 li
304.9 355.964 305.01 356.061 305.144 356.061 cv
cp
.988235 .74902 .109804 rgb
f
323.706 361.793 mo
323.706 364.012 321.907 365.811 319.688 365.811 cv
317.47 365.811 315.671 364.012 315.671 361.793 cv
315.671 359.574 317.47 357.775 319.688 357.775 cv
321.907 357.775 323.706 359.574 323.706 361.793 cv
cp
1 1 1 rgb
f
322.668 361.793 mo
322.668 363.438 321.334 364.772 319.688 364.772 cv
318.043 364.772 316.708 363.438 316.708 361.793 cv
316.708 360.147 318.043 358.813 319.688 358.813 cv
321.334 358.813 322.668 360.147 322.668 361.793 cv
cp
.988235 .74902 .109804 rgb
f
335.448 355.952 mo
335.925 356.428 li
337.068 355.254 337.068 353.378 335.925 352.204 cv
335.448 352.68 li
336.33 353.591 336.33 355.041 335.448 355.952 cv
cp
f
336.938 357.44 mo
337.413 357.917 li
339.378 355.923 339.378 352.709 337.413 350.715 cv
336.938 351.191 li
338.64 352.923 338.64 355.709 336.938 357.44 cv
cp
f
338.405 358.908 mo
338.881 359.384 li
341.655 356.581 341.655 352.051 338.881 349.247 cv
338.405 349.723 li
340.916 352.265 340.917 356.367 338.405 358.908 cv
cp
f
303.928 355.952 mo
303.452 356.428 li
302.308 355.254 302.308 353.378 303.452 352.204 cv
303.928 352.68 li
303.046 353.591 303.046 355.041 303.928 355.952 cv
cp
f
302.439 357.44 mo
301.963 357.917 li
299.998 355.923 299.998 352.709 301.963 350.715 cv
302.439 351.191 li
300.736 352.923 300.736 355.709 302.439 357.44 cv
cp
f
300.972 358.908 mo
300.495 359.384 li
297.722 356.581 297.722 352.051 300.495 349.247 cv
300.972 349.723 li
298.46 352.265 298.46 356.367 300.972 358.908 cv
cp
f
51.2211 375.171 mo
50.5811 375.171 li
50.1577 375.171 49.75 375.074 49.3672 374.919 cv
48.9668 374.919 li
48.5865 374.919 48.2232 374.851 47.8838 374.729 cv
47.5528 374.844 47.2031 374.919 46.8335 374.919 cv
43.8394 374.919 li
42.7681 374.919 41.8261 374.393 41.2364 373.592 cv
40.6465 374.393 39.7041 374.919 38.6333 374.919 cv
36.6158 374.919 li
36.4116 374.919 36.2124 374.9 36.0191 374.864 cv
35.8253 374.9 35.6259 374.919 35.4219 374.919 cv
33.4903 374.919 li
33.2813 374.919 33.0767 374.899 32.8789 374.861 cv
32.6812 374.899 32.4766 374.919 32.2681 374.919 cv
30.3071 374.919 li
30.0967 374.919 29.8911 374.899 29.6915 374.86 cv
29.4921 374.899 29.2861 374.919 29.0757 374.919 cv
25.8745 374.919 li
24.0849 374.919 22.6342 373.469 22.6342 371.679 cv
22.6342 367.152 li
22.6342 366.673 22.748 366.224 22.9345 365.814 cv
22.7246 365.341 22.6036 364.82 22.6036 364.271 cv
22.6036 346.69 li
22.6036 344.578 24.3223 342.859 26.435 342.859 cv
29.4087 342.859 li
30.0185 341.033 31.7407 339.713 33.7691 339.713 cv
56.0254 339.713 li
58.561 339.713 60.624 341.775 60.624 344.312 cv
60.624 347.676 li
60.624 349.83 59.1328 351.638 57.1299 352.135 cv
57.1299 365.37 li
58.0005 365.951 58.5753 366.94 58.5753 368.065 cv
58.5753 368.543 li
58.5753 369.284 58.3208 370.004 57.855 370.58 cv
57.3794 371.169 57.2955 371.395 57.2808 371.449 cv
57.2885 371.679 li
57.2885 373.469 55.8379 374.919 54.0483 374.919 cv
52.8823 374.919 li
52.7613 374.919 52.647 374.896 52.5297 374.884 cv
52.126 375.063 51.6861 375.171 51.2211 375.171 cv
.454902 .482353 .196078 rgb
f
54.0254 337.713 mo
31.769 337.713 li
29.7407 337.713 28.0186 339.033 27.4087 340.859 cv
24.4351 340.859 li
22.3223 340.859 20.603 342.578 20.603 344.69 cv
20.603 362.271 li
20.603 362.82 20.7246 363.341 20.9346 363.814 cv
20.748 364.224 20.6343 364.673 20.6343 365.152 cv
20.6343 369.679 li
20.6343 371.469 22.085 372.919 23.8745 372.919 cv
27.0757 372.919 li
27.2861 372.919 27.4922 372.899 27.6914 372.86 cv
27.8911 372.899 28.0967 372.919 28.3071 372.919 cv
30.2681 372.919 li
30.4766 372.919 30.6812 372.899 30.8789 372.861 cv
31.0767 372.899 31.2813 372.919 31.4902 372.919 cv
33.4219 372.919 li
33.626 372.919 33.8257 372.9 34.019 372.864 cv
34.2124 372.9 34.4116 372.919 34.6157 372.919 cv
36.6333 372.919 li
37.7041 372.919 38.6465 372.393 39.2363 371.592 cv
39.8262 372.393 40.7681 372.919 41.8394 372.919 cv
44.833 372.919 li
45.2031 372.919 45.5527 372.844 45.8838 372.729 cv
46.2231 372.851 46.5864 372.919 46.9668 372.919 cv
47.3672 372.919 li
47.75 373.074 48.1577 373.171 48.5811 373.171 cv
49.2212 373.171 li
49.686 373.171 50.126 373.063 50.5298 372.884 cv
50.647 372.896 50.7612 372.919 50.8823 372.919 cv
52.0483 372.919 li
53.8379 372.919 55.2886 371.469 55.2886 369.679 cv
55.2808 369.449 li
55.2954 369.395 55.3794 369.169 55.855 368.58 cv
56.3208 368.004 56.5752 367.284 56.5752 366.543 cv
56.5752 366.065 li
56.5752 364.94 56.0005 363.951 55.1299 363.37 cv
55.1299 350.135 li
57.1328 349.638 58.624 347.83 58.624 345.676 cv
58.624 342.312 li
58.624 339.775 56.561 337.713 54.0254 337.713 cv
cp
1 1 1 rgb
f
54.0249 340.953 mo
31.7686 340.953 li
31.0181 340.953 30.4097 341.561 30.4097 342.312 cv
30.4097 346.068 li
29.0352 348.183 li
31.458 347.034 li
54.0249 347.034 li
54.7754 347.034 55.3838 346.426 55.3838 345.676 cv
55.3838 342.312 li
55.3838 341.561 54.7754 340.953 54.0249 340.953 cv
cp
.0196078 .592157 .65098 rgb
f
36.1787 362.272 mo
36.1787 369.225 li
35.0703 369.225 li
35.0703 367.529 li
32.9678 367.529 li
32.9678 369.225 li
31.9448 369.225 li
31.9448 367.501 li
29.8135 367.501 li
29.8135 369.225 li
28.7617 369.225 li
28.7617 367.501 li
26.6211 367.501 li
26.6211 369.225 li
24.3291 369.225 li
24.3291 365.606 li
27.1899 365.606 li
27.1899 362.424 li
26.7354 362.424 li
26.7354 365.152 li
23.8745 365.152 li
23.8745 369.679 li
27.0757 369.679 li
27.0757 367.878 li
28.3071 367.878 li
28.3071 369.679 li
30.2681 369.679 li
30.2681 367.899 li
31.4897 367.899 li
31.4897 369.679 li
33.4224 369.679 li
33.4224 367.984 li
34.6157 367.984 li
34.6157 369.679 li
36.6333 369.679 li
36.6333 362.272 li
36.1787 362.272 li
cp
.988235 .74902 .109804 rgb
f
51.4541 348.321 mo
37.8657 348.321 li
37.5093 348.321 li
32.5527 348.321 li
32.2793 348.321 li
32.0483 348.321 li
31.8076 348.321 31.6123 348.517 31.6123 348.758 cv
31.6123 364.203 li
31.6123 364.444 31.8076 364.64 32.0483 364.64 cv
32.2793 364.64 li
32.5527 364.64 li
37.5093 364.64 li
37.8657 364.64 li
51.4541 364.64 li
51.6948 364.64 51.8901 364.444 51.8901 364.203 cv
51.8901 348.758 li
51.8901 348.517 51.6948 348.321 51.4541 348.321 cv
cp
f
50.3149 353.386 mo
38.6108 353.386 li
38.6108 349.784 li
50.3149 349.784 li
50.3149 353.386 li
cp
.180392 .807843 .909804 rgb
f
40.4351 357.348 mo
38.6108 357.348 li
38.6108 355.523 li
40.4351 355.523 li
40.4351 357.348 li
cp
.286275 .32549 .360784 rgb
f
43.4053 357.348 mo
41.5815 357.348 li
41.5815 355.523 li
43.4053 355.523 li
43.4053 357.348 li
cp
f
46.376 357.348 mo
44.5518 357.348 li
44.5518 355.523 li
46.376 355.523 li
46.376 357.348 li
cp
f
40.4351 360.267 mo
38.6108 360.267 li
38.6108 358.442 li
40.4351 358.442 li
40.4351 360.267 li
cp
f
43.4053 360.267 mo
41.5815 360.267 li
41.5815 358.442 li
43.4053 358.442 li
43.4053 360.267 li
cp
f
46.376 360.267 mo
44.5518 360.267 li
44.5518 358.442 li
46.376 358.442 li
46.376 360.267 li
cp
f
40.4351 363.185 mo
38.6108 363.185 li
38.6108 361.36 li
40.4351 361.36 li
40.4351 363.185 li
cp
f
43.4053 363.185 mo
41.5815 363.185 li
41.5815 361.36 li
43.4053 361.36 li
43.4053 363.185 li
cp
f
46.376 363.185 mo
44.5518 363.185 li
44.5518 361.36 li
46.376 361.36 li
46.376 363.185 li
cp
f
50.3149 357.348 mo
47.8433 357.348 li
47.8433 355.523 li
50.3149 355.523 li
50.3149 357.348 li
cp
.180392 .807843 .909804 rgb
f
50.3149 360.267 mo
47.8433 360.267 li
47.8433 358.442 li
50.3149 358.442 li
50.3149 360.267 li
cp
f
50.3149 363.185 mo
47.8433 363.185 li
47.8433 361.36 li
50.3149 361.36 li
50.3149 363.185 li
cp
f
36.9468 362.735 mo
33.1592 362.735 li
32.896 362.735 32.6826 362.522 32.6826 362.258 cv
32.6826 350.383 li
32.6826 350.119 32.896 349.905 33.1592 349.905 cv
36.9468 349.905 li
37.2104 349.905 37.4238 350.119 37.4238 350.383 cv
37.4238 362.258 li
37.4238 362.522 37.2104 362.735 36.9468 362.735 cv
cp
.721569 .545098 .0784314 rgb
f
28.728 348.619 mo
28.728 344.69 li
28.728 344.364 28.4634 344.099 28.1367 344.099 cv
26.8193 344.099 li
24.4409 344.099 li
24.4346 344.099 li
24.1079 344.099 23.8433 344.364 23.8433 344.69 cv
23.8433 362.271 li
23.8433 362.597 24.1079 362.861 24.4346 362.861 cv
24.4409 362.861 li
26.8193 362.861 li
28.1367 362.861 li
28.4634 362.861 28.728 362.597 28.728 362.271 cv
28.728 358.342 li
28.728 358.016 28.4634 357.75 28.1367 357.75 cv
27.4111 357.75 li
27.084 357.75 26.8193 357.485 26.8193 357.159 cv
26.8193 349.802 li
26.8193 349.476 27.084 349.21 27.4111 349.21 cv
28.1367 349.21 li
28.4634 349.21 28.728 348.945 28.728 348.619 cv
cp
.988235 .74902 .109804 rgb
f
44.791 367.09 mo
44.791 367.872 43.9976 368.256 43.252 368.792 cv
44.833 368.792 li
44.833 369.679 li
41.8389 369.679 li
41.8389 369.427 li
41.8389 369.033 42.0493 368.755 42.3433 368.492 cv
43.1626 367.762 43.751 367.468 43.751 367.127 cv
43.751 366.927 43.6201 366.743 43.2993 366.743 cv
42.9741 366.743 42.7896 366.953 42.7896 367.237 cv
42.7896 367.342 li
41.855 367.342 li
41.8496 367.227 li
41.8496 366.485 42.3643 366.003 43.3994 366.003 cv
44.2554 366.003 44.791 366.433 44.791 367.09 cv
cp
.831373 .254902 .00784314 rgb
f
47.2456 366.003 mo
47.1665 366.575 46.4263 367.657 45.9272 368.166 cv
46.9668 368.166 li
46.9668 367.415 li
47.146 367.158 47.4453 366.648 47.5186 366.349 cv
47.9648 366.349 li
47.9648 368.166 li
48.4692 368.166 li
48.4692 368.938 li
47.9648 368.938 li
47.9648 369.679 li
46.9668 369.679 li
46.9668 368.938 li
45.2075 368.938 li
45.2075 368.156 li
45.5488 367.657 45.98 366.827 46.2163 366.003 cv
47.2456 366.003 li
cp
f
49.2212 369.932 mo
48.5811 369.932 li
49.4214 365.813 li
50.0571 365.813 li
49.2212 369.932 li
cp
f
53.335 366.543 mo
52.668 367.368 52.0483 368.303 52.0483 369.369 cv
52.0483 369.679 li
50.8823 369.679 li
50.8823 368.682 51.3652 367.735 52.022 366.969 cv
50.2891 366.969 li
50.2891 366.065 li
53.335 366.065 li
53.335 366.543 li
cp
f
34.0288 343.791 mo
33.3643 343.791 li
33.3643 343.488 33.2324 343.292 32.9829 343.292 cv
32.6875 343.292 32.5737 343.542 32.5737 343.903 cv
32.5737 344.148 li
32.5737 344.51 32.6938 344.759 32.9766 344.759 cv
33.251 344.759 33.3862 344.578 33.3862 344.275 cv
34.0288 344.275 li
34.0288 345.001 33.6479 345.393 32.9863 345.393 cv
32.2466 345.393 31.8618 344.928 31.8618 344.025 cv
31.8618 343.123 32.2466 342.659 32.9863 342.659 cv
33.6162 342.659 34.0288 343.054 34.0288 343.791 cv
cp
1 1 1 rgb
f
35.0254 343.903 mo
35.0254 344.148 li
35.0254 344.51 35.1763 344.759 35.4819 344.759 cv
35.7876 344.759 35.9419 344.51 35.9419 344.148 cv
35.9419 343.903 li
35.9419 343.542 35.7876 343.292 35.4819 343.292 cv
35.1763 343.292 35.0254 343.542 35.0254 343.903 cv
cp
36.6533 344.025 mo
36.6533 344.928 36.2222 345.393 35.4819 345.393 cv
34.7422 345.393 34.3135 344.928 34.3135 344.025 cv
34.3135 343.123 34.7422 342.659 35.4819 342.659 cv
36.2222 342.659 36.6533 343.123 36.6533 344.025 cv
cp
f
39.1865 345.347 mo
38.5791 345.347 li
37.6689 344.064 li
37.6689 345.347 li
37.0298 345.347 li
37.0298 342.705 li
37.6377 342.705 li
38.5474 344.006 li
38.5474 342.705 li
39.1865 342.705 li
39.1865 345.347 li
cp
f
41.6104 343.381 mo
40.9014 343.381 li
40.9014 345.347 li
40.2056 345.347 li
40.2056 343.381 li
39.4941 343.381 li
39.4941 342.705 li
41.6104 342.705 li
41.6104 343.381 li
cp
f
42.6914 343.442 mo
42.4619 344.383 li
42.9312 344.383 li
42.7041 343.442 li
42.6914 343.442 li
cp
43.9043 345.347 mo
43.167 345.347 li
43.0757 344.974 li
42.3169 344.974 li
42.2256 345.347 li
41.5142 345.347 li
42.3042 342.705 li
43.1138 342.705 li
43.9043 345.347 li
cp
f
46.1855 343.791 mo
45.521 343.791 li
45.521 343.488 45.3887 343.292 45.1396 343.292 cv
44.8442 343.292 44.7305 343.542 44.7305 343.903 cv
44.7305 344.148 li
44.7305 344.51 44.8506 344.759 45.1333 344.759 cv
45.4077 344.759 45.543 344.578 45.543 344.275 cv
46.1855 344.275 li
46.1855 345.001 45.8047 345.393 45.1431 345.393 cv
44.4033 345.393 44.0186 344.928 44.0186 344.025 cv
44.0186 343.123 44.4033 342.659 45.1431 342.659 cv
45.7729 342.659 46.1855 343.054 46.1855 343.791 cv
cp
f
48.5176 343.381 mo
47.8086 343.381 li
47.8086 345.347 li
47.1128 345.347 li
47.1128 343.381 li
46.4014 343.381 li
46.4014 342.705 li
48.5176 342.705 li
48.5176 343.381 li
cp
f
52.043 344.283 mo
52.043 345.013 51.6465 345.393 50.9663 345.393 cv
50.2856 345.393 49.8862 345.013 49.8862 344.283 cv
49.8862 342.705 li
50.582 342.705 li
50.582 344.271 li
50.582 344.556 50.708 344.759 50.9629 344.759 cv
51.2183 344.759 51.3477 344.556 51.3477 344.271 cv
51.3477 342.705 li
52.043 342.705 li
52.043 344.283 li
cp
f
54.3779 343.473 mo
54.3779 343.519 li
53.7261 343.519 li
53.7261 343.504 li
53.7261 343.365 53.6475 343.234 53.4458 343.234 cv
53.2539 343.234 53.1592 343.315 53.1592 343.407 cv
53.1592 343.803 54.4219 343.492 54.438 344.471 cv
54.438 345.128 54.0288 345.393 53.4834 345.393 cv
52.876 345.393 52.4131 345.204 52.4131 344.452 cv
53.0713 344.452 li
53.0713 344.735 53.207 344.786 53.4209 344.786 cv
53.5474 344.786 53.7261 344.774 53.7261 344.609 cv
53.7261 344.229 52.4473 344.532 52.4473 343.504 cv
52.4473 342.889 52.9077 342.659 53.4209 342.659 cv
53.9434 342.659 54.3682 342.908 54.3779 343.473 cv
cp
f
195.043 378.634 mo
189.969 378.634 li
187.996 378.634 li
187.921 378.634 li
186.016 378.634 li
186.006 378.634 li
185.802 378.634 li
185.13 378.634 li
184.487 378.634 li
184.262 378.634 li
184.248 378.634 li
182.436 378.634 li
182.362 378.634 li
180.29 378.634 li
175.212 378.634 li
174.265 378.634 173.357 378.257 172.688 377.586 cv
172.02 376.916 171.645 376.007 171.648 375.061 cv
171.65 374.122 li
171.658 370.598 171.658 370.598 171.677 370.382 cv
172.014 366.786 174.117 364.972 177.929 364.972 cv
178.084 364.972 178.265 364.979 178.436 364.982 cv
178.644 364.972 li
178.717 364.973 li
178.683 364.827 178.651 364.685 178.63 364.55 cv
178.306 364.031 178.049 363.435 177.896 362.758 cv
177.878 362.696 177.832 362.568 177.786 362.436 cv
177.667 362.089 177.542 361.696 177.445 361.283 cv
176.466 360.38 li
175.709 360.499 174.936 360.561 174.153 360.561 cv
167.555 360.561 162.387 356.376 162.387 351.034 cv
162.387 345.692 167.555 341.508 174.153 341.508 cv
178.266 341.508 181.821 343.135 183.917 345.653 cv
183.917 345.239 li
183.917 342.488 186.156 340.25 188.907 340.25 cv
203.652 340.25 li
206.403 340.25 208.641 342.488 208.641 345.239 cv
208.641 354.256 li
208.641 357.006 206.403 359.244 203.652 359.244 cv
195.677 359.244 li
192.693 361.727 li
192.62 361.974 192.542 362.211 192.466 362.431 cv
192.421 362.564 192.374 362.693 192.344 362.802 cv
192.197 363.454 191.948 364.031 191.635 364.536 cv
191.613 364.677 191.579 364.827 191.543 364.979 cv
191.672 364.977 191.8 364.972 191.927 364.972 cv
192.02 364.979 li
192.121 364.977 192.235 364.972 192.331 364.972 cv
196.145 364.972 198.247 366.787 198.581 370.367 cv
198.6 370.567 198.606 370.636 198.608 375.068 cv
198.608 376.014 198.233 376.92 197.564 377.59 cv
196.896 378.258 195.989 378.634 195.043 378.634 cv
.454902 .482353 .196078 rgb
f
201.652 338.25 mo
186.907 338.25 li
184.156 338.25 181.917 340.488 181.917 343.239 cv
181.917 343.653 li
179.821 341.135 176.266 339.508 172.153 339.508 cv
165.555 339.508 160.387 343.692 160.387 349.034 cv
160.387 354.376 165.555 358.561 172.153 358.561 cv
172.936 358.561 173.709 358.499 174.466 358.38 cv
175.445 359.283 li
175.542 359.696 175.667 360.089 175.786 360.436 cv
175.832 360.568 175.878 360.696 175.896 360.758 cv
176.049 361.436 176.306 362.031 176.63 362.55 cv
176.651 362.685 176.683 362.827 176.717 362.973 cv
176.644 362.972 li
176.436 362.982 li
176.265 362.979 176.084 362.972 175.929 362.972 cv
172.117 362.972 170.014 364.786 169.677 368.382 cv
169.658 368.598 169.658 368.598 169.65 372.122 cv
169.648 373.061 li
169.646 374.007 170.02 374.916 170.688 375.586 cv
171.357 376.257 172.265 376.634 173.212 376.634 cv
178.29 376.634 li
180.362 376.634 li
180.436 376.634 li
182.248 376.634 li
182.262 376.634 li
182.487 376.634 li
183.13 376.634 li
183.802 376.634 li
184.006 376.634 li
184.016 376.634 li
185.921 376.634 li
185.996 376.634 li
187.969 376.634 li
193.043 376.634 li
193.989 376.634 194.896 376.258 195.564 375.59 cv
196.232 374.92 196.608 374.014 196.608 373.068 cv
196.606 368.636 196.6 368.567 196.581 368.367 cv
196.247 364.787 194.145 362.972 190.331 362.972 cv
190.235 362.972 190.121 362.977 190.02 362.979 cv
189.927 362.972 li
189.8 362.972 189.672 362.977 189.542 362.979 cv
189.579 362.827 189.613 362.677 189.635 362.536 cv
189.948 362.031 190.197 361.454 190.344 360.802 cv
190.374 360.693 190.421 360.564 190.466 360.431 cv
190.542 360.211 190.62 359.974 190.693 359.727 cv
193.677 357.244 li
201.652 357.244 li
204.403 357.244 206.641 355.006 206.641 352.256 cv
206.641 343.239 li
206.641 340.488 204.403 338.25 201.652 338.25 cv
cp
1 1 1 rgb
f
185.762 364.987 mo
186.073 365.813 188.203 366.597 189.149 366.555 cv
191.781 366.44 192.363 366.772 192.477 369.156 cv
192.482 369.258 192.487 369.555 192.494 369.963 cv
191.237 371.3 189.697 372.367 187.969 373.069 cv
178.29 373.069 li
176.707 372.426 175.281 371.476 174.086 370.292 cv
174.085 369.778 174.086 369.397 174.09 369.286 cv
174.189 366.785 174.744 366.438 177.423 366.555 cv
178.249 366.591 180.317 365.605 180.542 364.987 cv
180.771 364.359 180.781 363.374 180.636 362.724 cv
183.152 362.772 li
185.668 362.724 li
185.522 363.374 185.525 364.361 185.762 364.987 cv
cp
1 .858824 .654902 rgb
ef
180.122 365.448 mo
183.144 365.772 li
186.204 365.429 li
185.921 373.069 li
180.436 373.069 li
180.122 365.448 li
cp
.592157 .784314 .8 rgb
ef
180.216 360.738 mo
180.361 359.003 li
180.104 358.749 179.919 358.582 179.785 358.374 cv
179.416 357.802 179.184 357.67 178.959 357.837 cv
178.869 357.904 178.837 358.119 178.89 358.389 cv
178.983 358.86 179.28 359.563 179.374 359.976 cv
179.449 360.308 179.883 361.444 180.216 360.738 cv
cp
1 .858824 .654902 rgb
ef
186.035 360.738 mo
185.89 359.003 li
186.147 358.749 186.332 358.582 186.466 358.374 cv
186.835 357.802 187.067 357.67 187.291 357.837 cv
187.382 357.904 187.415 358.119 187.361 358.389 cv
187.268 358.86 186.971 359.563 186.877 359.976 cv
186.802 360.308 186.368 361.444 186.035 360.738 cv
cp
ef
180.507 365.228 mo
180.742 365.288 180.919 366.73 181.792 366.47 cv
182.232 365.559 182.672 364.802 183.328 364.56 cv
183.785 364.39 184.093 364.402 184.469 364.104 cv
184.766 363.87 185.143 363.352 185.604 363.022 cv
185.62 362.886 185.642 362.842 185.668 362.724 cv
183.152 362.772 li
180.636 362.724 li
180.701 363.019 180.857 364.335 180.507 365.228 cv
cp
1 .815686 .54902 rgb
ef
183.191 364.234 mo
183.148 364.235 li
182.625 364.238 182.365 364.23 182.081 364.11 cv
181.807 363.993 181.673 363.724 181.295 363.36 cv
180.974 363.051 180.397 362.735 180.257 362.398 cv
180.064 361.937 180.141 361.428 180.021 360.711 cv
179.925 360.14 179.656 359.633 179.625 359.061 cv
179.592 358.443 179.691 357.821 179.67 357.124 cv
179.649 356.441 179.63 355.877 179.714 355.397 cv
179.798 354.914 179.988 354.514 180.381 354.16 cv
180.381 354.159 li
180.6 353.966 180.847 353.802 181.116 353.666 cv
181.124 353.662 li
181.178 353.637 li
181.208 353.622 li
181.25 353.603 li
181.291 353.585 li
181.336 353.565 li
181.376 353.547 li
181.434 353.524 li
181.461 353.514 li
181.547 353.481 li
181.548 353.48 li
182.264 353.221 183.077 353.148 183.847 353.263 cv
184.615 353.376 185.338 353.676 185.875 354.155 cv
186.268 354.507 186.455 354.905 186.54 355.387 cv
186.624 355.863 186.607 356.427 186.587 357.106 cv
186.567 357.803 186.668 358.421 186.635 359.037 cv
186.605 359.606 186.337 360.113 186.244 360.684 cv
186.126 361.398 186.202 361.903 186.011 362.367 cv
185.871 362.705 185.299 363.025 184.979 363.338 cv
184.604 363.706 184.471 363.976 184.198 364.097 cv
183.925 364.216 183.674 364.232 183.191 364.234 cv
cp
1 .858824 .654902 rgb
ef
185.617 364.351 mo
185.692 364.881 185.853 365.123 186.206 365.391 cv
184.695 367.971 li
183.095 365.734 li
183.891 365.297 185.307 364.751 185.617 364.351 cv
cp
.760784 .870588 .882353 rgb
ef
180.643 364.351 mo
180.568 364.881 180.407 365.123 180.054 365.391 cv
181.565 367.971 li
183.164 365.734 li
182.369 365.297 180.953 364.751 180.643 364.351 cv
cp
ef
186.138 365.395 mo
186.817 365.969 188.58 366.592 189.498 366.555 cv
192.127 366.448 192.849 366.729 193.032 368.698 cv
193.04 368.777 193.043 371.917 193.043 373.069 cv
184.006 373.069 li
184.666 370.603 185.554 367.126 186.138 365.395 cv
cp
.286275 .32549 .360784 rgb
ef
180.122 365.395 mo
179.442 365.969 177.68 366.592 176.762 366.555 cv
174.133 366.448 173.412 366.729 173.228 368.698 cv
173.22 368.776 173.215 371.924 173.212 373.069 cv
182.262 373.069 li
181.594 370.576 180.697 367.101 180.122 365.395 cv
cp
ef
183.202 365.841 mo
183.987 366.999 li
183.967 367.293 li
183.319 367.951 li
184.045 369.118 li
183.802 373.069 li
182.487 373.069 li
182.214 369.113 li
182.94 367.945 li
182.292 367.288 li
182.273 366.993 li
183.056 365.837 li
183.202 365.841 li
cp
1 1 1 rgb
ef
183.202 365.841 mo
183.987 366.999 li
183.967 367.293 li
183.319 367.951 li
184.045 369.118 li
183.802 373.069 li
183.13 373.069 li
183.13 365.839 li
183.202 365.841 li
cp
.839216 .839216 .839216 rgb
ef
186.138 365.395 mo
186.47 365.675 187.06 365.967 187.685 366.188 cv
187.653 366.212 li
187.732 369.509 li
186.319 369.352 li
187.143 370.45 li
185.996 373.069 li
184.016 373.069 li
184.674 370.594 185.556 367.117 186.138 365.395 cv
cp
.341176 .388235 .431373 rgb
ef
180.122 365.395 mo
179.791 365.675 179.199 365.967 178.575 366.188 cv
178.606 366.212 li
178.528 369.509 li
179.941 369.352 li
179.117 370.45 li
180.362 373.069 li
182.248 373.069 li
181.585 370.581 180.699 367.104 180.122 365.395 cv
cp
ef
180.584 355.131 mo
180.34 355.423 179.852 357.183 179.934 359.103 cv
179.107 356.103 178.663 353.96 180.458 352.611 cv
182.814 350.841 185.744 352.245 185.89 352.658 cv
187.621 353.614 187.019 356.306 186.499 358.683 cv
186.482 357.49 186.232 356.011 185.634 354.972 cv
185.492 354.834 185.329 354.751 185.199 354.806 cv
179.784 357.078 180.8 354.873 180.584 355.131 cv
cp
.286275 .32549 .360784 rgb
ef
201.652 341.814 mo
186.907 341.814 li
186.12 341.814 185.481 342.452 185.481 343.239 cv
185.481 352.256 li
185.481 353.042 186.12 353.68 186.907 353.68 cv
188.518 353.68 li
187.983 357.345 li
192.388 353.68 li
201.652 353.68 li
202.438 353.68 203.077 353.042 203.077 352.256 cv
203.077 343.239 li
203.077 342.452 202.438 341.814 201.652 341.814 cv
cp
.180392 .807843 .909804 rgb
f
201.831 345.952 mo
192.211 345.952 li
192.211 345.012 li
201.831 345.012 li
201.831 345.952 li
cp
1 1 1 rgb
f
201.831 348.578 mo
192.211 348.578 li
192.211 347.638 li
201.831 347.638 li
201.831 348.578 li
cp
f
201.831 351.205 mo
192.211 351.205 li
192.211 350.265 li
201.831 350.265 li
201.831 351.205 li
cp
f
180.354 349.034 mo
180.354 345.741 176.683 343.072 172.153 343.072 cv
167.624 343.072 163.952 345.741 163.952 349.034 cv
163.952 352.327 167.624 354.996 172.153 354.996 cv
173.343 354.996 174.474 354.811 175.494 354.479 cv
178.26 357.032 li
177.729 353.404 li
179.343 352.315 180.354 350.761 180.354 349.034 cv
cp
.988235 .74902 .109804 rgb
f
175.365 351.917 mo
174.053 351.917 li
174.053 350.754 li
175.365 350.754 li
175.365 351.917 li
cp
173.54 351.917 mo
172.228 351.917 li
172.228 350.754 li
173.54 350.754 li
173.54 351.917 li
cp
171.535 351.917 mo
169.763 351.917 li
169.763 350.346 li
171.535 350.346 li
171.535 351.917 li
cp
172.931 347.704 mo
172.931 348.858 171.401 349.198 171.401 349.648 cv
171.401 349.827 li
169.871 349.827 li
169.871 349.402 li
169.871 348.782 171.034 348.426 171.034 347.737 cv
171.034 347.423 170.819 347.144 170.443 347.144 cv
169.96 347.144 169.862 347.5 169.862 347.856 cv
169.871 348.086 li
168.224 348.086 li
168.215 347.976 168.197 347.874 168.197 347.764 cv
168.197 346.659 169.235 345.971 170.64 345.971 cv
172.009 345.971 172.931 346.65 172.931 347.704 cv
cp
1 1 1 rgb
f
98.1489 375.086 mo
96.8408 375.086 li
89.5253 375.086 li
79.1372 375.086 li
76.52 375.086 74.2929 373.41 73.456 371.077 cv
72.2641 370.204 71.48 368.806 71.48 367.218 cv
71.48 366.854 li
71.48 366.189 71.6167 365.557 71.8618 364.98 cv
71.6167 364.404 71.48 363.772 71.48 363.107 cv
71.48 362.743 li
71.48 362.078 71.6167 361.445 71.8618 360.869 cv
71.6167 360.294 71.48 359.661 71.48 358.996 cv
71.48 358.632 li
71.48 357.968 71.6167 357.335 71.8618 356.759 cv
71.6167 356.184 71.48 355.551 71.48 354.887 cv
71.48 354.522 li
71.48 353.856 71.6167 353.225 71.8618 352.648 cv
71.6167 352.073 71.48 351.44 71.48 350.775 cv
71.48 350.411 li
71.48 348.944 72.1567 347.644 73.1983 346.765 cv
73.7066 343.945 76.1733 341.798 79.1372 341.798 cv
89.5253 341.798 li
95.3525 341.798 li
98.1489 341.798 li
101.407 341.798 104.057 344.507 104.057 347.838 cv
104.057 369.046 li
104.057 372.377 101.407 375.086 98.1489 375.086 cv
.454902 .482353 .196078 rgb
f
96.1489 339.798 mo
93.3525 339.798 li
87.5254 339.798 li
77.1372 339.798 li
74.1733 339.798 71.7065 341.945 71.1982 344.765 cv
70.1567 345.645 69.48 346.944 69.48 348.411 cv
69.48 348.775 li
69.48 349.44 69.6167 350.073 69.8618 350.648 cv
69.6167 351.225 69.48 351.856 69.48 352.521 cv
69.48 352.887 li
69.48 353.551 69.6167 354.184 69.8618 354.759 cv
69.6167 355.335 69.48 355.968 69.48 356.632 cv
69.48 356.996 li
69.48 357.661 69.6167 358.294 69.8618 358.869 cv
69.6167 359.445 69.48 360.078 69.48 360.743 cv
69.48 361.107 li
69.48 361.771 69.6167 362.404 69.8618 362.98 cv
69.6167 363.557 69.48 364.189 69.48 364.854 cv
69.48 365.218 li
69.48 366.806 70.2642 368.204 71.4561 369.077 cv
72.293 371.41 74.52 373.086 77.1372 373.086 cv
87.5254 373.086 li
94.8408 373.086 li
96.1489 373.086 li
99.4067 373.086 102.057 370.377 102.057 367.046 cv
102.057 345.838 li
102.057 342.507 99.4067 339.798 96.1489 339.798 cv
cp
1 1 1 rgb
ef
96.1489 343.758 mo
87.5254 343.758 li
87.5254 369.126 li
96.1489 369.126 li
97.2246 369.126 98.0967 368.195 98.0967 367.047 cv
98.0967 345.838 li
98.0967 344.689 97.2246 343.758 96.1489 343.758 cv
cp
.286275 .32549 .360784 rgb
f
96.9204 347.64 mo
94.0547 347.64 li
94.0547 345.181 li
96.9204 345.181 li
96.9204 347.64 li
cp
1 1 1 rgb
f
96.9204 351.45 mo
94.0547 351.45 li
94.0547 348.991 li
96.9204 348.991 li
96.9204 351.45 li
cp
f
96.9204 355.261 mo
94.0547 355.261 li
94.0547 352.802 li
96.9204 352.802 li
96.9204 355.261 li
cp
f
75.3843 358.012 mo
75.0571 358.012 li
75.0571 359.729 li
75.3843 359.729 li
75.3843 358.012 li
cp
.0823529 .686275 .745098 rgb
f
75.3843 353.9 mo
75.0571 353.9 li
75.0571 355.617 li
75.3843 355.617 li
75.3843 353.9 li
cp
f
75.3843 349.79 mo
75.0571 349.79 li
75.0571 351.507 li
75.3843 351.507 li
75.3843 349.79 li
cp
f
93.3525 356.561 mo
93.3525 343.758 li
77.1367 343.758 li
75.9883 343.758 75.0571 344.689 75.0571 345.838 cv
75.0571 367.047 li
75.0571 368.195 75.9883 369.126 77.1367 369.126 cv
94.8408 369.126 li
95.9893 369.126 96.9204 368.195 96.9204 367.047 cv
96.9204 356.561 li
93.3525 356.561 li
cp
.180392 .807843 .909804 rgb
f
75.3843 362.122 mo
75.0571 362.122 li
75.0571 363.839 li
75.3843 363.839 li
75.3843 362.122 li
cp
.0823529 .686275 .745098 rgb
f
77.1196 347.576 mo
75.1533 347.576 li
74.2754 347.576 li
73.814 347.576 73.4399 347.949 73.4399 348.411 cv
73.4399 348.775 li
73.4399 349.236 73.814 349.61 74.2754 349.61 cv
75.1533 349.61 li
77.1196 349.61 li
77.5806 349.61 77.9546 349.236 77.9546 348.775 cv
77.9546 348.411 li
77.9546 347.949 77.5806 347.576 77.1196 347.576 cv
cp
.286275 .32549 .360784 rgb
f
77.1196 351.687 mo
75.1533 351.687 li
74.2754 351.687 li
73.814 351.687 73.4399 352.061 73.4399 352.521 cv
73.4399 352.887 li
73.4399 353.348 73.814 353.722 74.2754 353.722 cv
75.1533 353.722 li
77.1196 353.722 li
77.5806 353.722 77.9546 353.348 77.9546 352.887 cv
77.9546 352.521 li
77.9546 352.061 77.5806 351.687 77.1196 351.687 cv
cp
f
77.1196 355.797 mo
75.1533 355.797 li
74.2754 355.797 li
73.814 355.797 73.4399 356.171 73.4399 356.632 cv
73.4399 356.997 li
73.4399 357.458 73.814 357.832 74.2754 357.832 cv
75.1533 357.832 li
77.1196 357.832 li
77.5806 357.832 77.9546 357.458 77.9546 356.997 cv
77.9546 356.632 li
77.9546 356.171 77.5806 355.797 77.1196 355.797 cv
cp
f
77.1196 359.907 mo
75.1533 359.907 li
74.2754 359.907 li
73.814 359.907 73.4399 360.281 73.4399 360.743 cv
73.4399 361.107 li
73.4399 361.568 73.814 361.942 74.2754 361.942 cv
75.1533 361.942 li
77.1196 361.942 li
77.5806 361.942 77.9546 361.568 77.9546 361.107 cv
77.9546 360.743 li
77.9546 360.281 77.5806 359.907 77.1196 359.907 cv
cp
f
77.1196 364.019 mo
75.1533 364.019 li
74.2754 364.019 li
73.814 364.019 73.4399 364.393 73.4399 364.854 cv
73.4399 365.218 li
73.4399 365.68 73.814 366.053 74.2754 366.053 cv
75.1533 366.053 li
77.1196 366.053 li
77.5806 366.053 77.9546 365.68 77.9546 365.218 cv
77.9546 364.854 li
77.9546 364.393 77.5806 364.019 77.1196 364.019 cv
cp
f
91.8472 362.297 mo
89.1577 359.519 li
88.9775 359.516 li
87.8784 360.58 li
87.8755 360.76 li
87.9004 360.785 li
87.0532 360.807 85.4219 359.925 84.4023 358.888 cv
83.3994 357.836 82.5708 356.177 82.6191 355.331 cv
82.644 355.356 li
82.8242 355.359 li
83.9233 354.295 li
83.9263 354.115 li
81.2368 351.337 li
81.0566 351.334 li
79.9565 352.398 li
79.9536 352.577 li
79.9541 352.578 li
79.3911 353.313 79.2617 354.106 79.6084 355.173 cv
79.7817 355.706 80.5073 357.67 82.9956 360.25 cv
85.4932 362.82 87.4331 363.609 87.96 363.8 cv
89.0151 364.181 89.813 364.078 90.5649 363.538 cv
90.5659 363.539 li
90.7446 363.542 li
91.8447 362.478 li
91.8472 362.297 li
cp
1 1 1 rgb
f
86.7983 351.283 mo
83.8687 353.004 li
84.9756 350.725 li
84.1289 350.198 83.7109 349.353 83.7109 348.332 cv
83.7109 346.687 85.4473 345.353 87.5898 345.353 cv
89.7319 345.353 91.4683 346.687 91.4683 348.332 cv
91.4683 349.977 89.7314 351.267 87.5898 351.311 cv
87.3105 351.315 87.0469 351.307 86.7983 351.283 cv
cp
ef
406.852 378.494 mo
406.071 378.494 405.305 378.241 404.67 377.759 cv
403.776 377.077 403.251 376.019 403.251 374.894 cv
403.251 371.85 li
400.42 371.571 397.775 370.652 397.328 367.608 cv
397.19 366.676 397.083 365.798 396.997 364.975 cv
396.979 364.735 li
395.883 364.359 395.004 363.579 394.537 362.53 cv
393.409 359.998 395.058 357.73 396.65 355.536 cv
396.852 355.26 397.069 354.961 397.242 354.71 cv
398.485 349.821 401.645 346.503 406.031 345.295 cv
407.582 344.224 409.393 343.503 411.419 343.189 cv
412.085 342.692 412.9 342.39 413.794 342.39 cv
413.909 342.39 414.061 342.396 414.175 342.408 cv
415.13 342.499 li
415.979 342.581 416.736 342.93 417.338 343.448 cv
422.976 344.884 426.793 349.784 426.793 356.161 cv
426.793 359.209 425.319 362.38 423.96 364.534 cv
425.771 370.013 li
426.08 370.949 425.992 371.971 425.526 372.84 cv
425.061 373.71 424.26 374.351 423.31 374.613 cv
411.6 377.841 li
411.283 377.928 410.962 377.971 410.642 377.971 cv
410.329 377.971 410.019 377.919 409.719 377.838 cv
407.809 378.365 li
407.493 378.452 407.171 378.494 406.852 378.494 cv
.454902 .482353 .196078 rgb
f
421.96 362.534 mo
423.319 360.38 424.793 357.209 424.793 354.161 cv
424.793 347.784 420.976 342.884 415.338 341.448 cv
414.736 340.93 413.979 340.581 413.13 340.499 cv
412.175 340.408 li
412.061 340.396 411.909 340.39 411.794 340.39 cv
410.9 340.39 410.085 340.692 409.419 341.189 cv
407.393 341.503 405.582 342.224 404.031 343.295 cv
399.645 344.503 396.485 347.821 395.242 352.71 cv
395.069 352.961 394.852 353.26 394.65 353.536 cv
393.058 355.729 391.409 357.998 392.537 360.53 cv
393.004 361.579 393.883 362.359 394.979 362.735 cv
394.997 362.975 li
395.083 363.798 395.19 364.676 395.328 365.608 cv
395.775 368.652 398.42 369.571 401.251 369.85 cv
401.251 372.895 li
401.251 374.019 401.776 375.077 402.67 375.759 cv
403.305 376.241 404.071 376.494 404.852 376.494 cv
405.171 376.494 405.493 376.452 405.809 376.365 cv
407.719 375.839 li
408.02 375.919 408.329 375.971 408.642 375.971 cv
408.962 375.971 409.283 375.928 409.6 375.841 cv
421.31 372.613 li
422.26 372.351 423.062 371.71 423.526 370.84 cv
423.992 369.971 424.08 368.949 423.771 368.013 cv
421.96 362.534 li
cp
1 1 1 rgb
f
407.684 357.633 mo
407.684 359.825 405.906 361.603 403.714 361.603 cv
401.521 361.603 399.744 359.825 399.744 357.633 cv
399.744 355.44 401.521 353.663 403.714 353.663 cv
405.906 353.663 407.684 355.44 407.684 357.633 cv
cp
.0823529 .686275 .745098 rgb
f
404.639 355.02 mo
403.764 354.936 li
403.571 354.917 403.431 354.747 403.449 354.555 cv
404.095 347.833 li
404.113 347.641 404.284 347.5 404.476 347.519 cv
405.352 347.603 li
405.543 347.621 405.685 347.792 405.665 347.984 cv
405.02 354.706 li
405.001 354.897 404.83 355.038 404.639 355.02 cv
cp
f
406.72 357.633 mo
406.72 359.292 405.374 360.638 403.714 360.638 cv
402.054 360.638 400.708 359.292 400.708 357.633 cv
400.708 355.973 402.054 354.627 403.714 354.627 cv
405.374 354.627 406.72 355.973 406.72 357.633 cv
cp
f
416.836 355.505 mo
416.836 349.985 412.999 346.38 407.911 346.38 cv
401.113 346.38 399.183 351.42 398.605 354.134 cv
397.647 355.78 394.485 359.179 396.366 359.376 cv
397.293 359.474 397.708 359.5 398.344 359.542 cv
398.373 360.177 398.396 360.591 398.463 361.363 cv
400.224 361.5 li
398.577 362.599 li
398.658 363.374 398.76 364.202 398.89 365.085 cv
399.063 366.262 401.617 366.369 404.851 366.372 cv
404.851 372.895 li
416.034 369.812 li
413.764 362.94 li
415.177 361.185 416.836 358.02 416.836 355.505 cv
cp
.164706 .439216 .454902 rgb
f
411.245 356.353 mo
411.245 358.642 409.389 360.497 407.1 360.497 cv
404.812 360.497 402.955 358.642 402.955 356.353 cv
402.955 354.063 404.812 352.208 407.1 352.208 cv
409.389 352.208 411.245 354.063 411.245 356.353 cv
cp
.988235 .74902 .109804 rgb
f
406.347 359.264 mo
401.848 363.476 li
401.056 362.629 li
405.554 358.417 li
406.347 359.264 li
cp
.286275 .32549 .360784 rgb
f
401.748 363.704 mo
400.88 363.886 li
400.546 363.956 400.213 363.715 400.136 363.348 cv
400.133 363.334 li
400.057 362.967 400.265 362.612 400.599 362.542 cv
401.466 362.36 li
401.801 362.291 402.134 362.532 402.21 362.899 cv
402.213 362.913 li
402.29 363.28 402.082 363.635 401.748 363.704 cv
cp
f
408.065 353.625 mo
407.151 353.537 li
406.951 353.518 406.804 353.34 406.823 353.139 cv
407.498 346.121 li
407.517 345.921 407.695 345.773 407.896 345.793 cv
408.81 345.881 li
409.01 345.9 409.157 346.078 409.138 346.279 cv
408.463 353.297 li
408.444 353.497 408.266 353.644 408.065 353.625 cv
cp
.988235 .74902 .109804 rgb
f
410.238 356.353 mo
410.238 358.085 408.833 359.49 407.1 359.49 cv
405.367 359.49 403.962 358.085 403.962 356.353 cv
403.962 354.619 405.367 353.215 407.1 353.215 cv
408.833 353.215 410.238 354.619 410.238 356.353 cv
cp
f
421.192 354.161 mo
421.192 348.381 417.175 344.605 411.847 344.605 cv
404.728 344.605 402.706 349.884 402.103 352.725 cv
401.099 354.449 397.788 358.008 399.757 358.215 cv
400.728 358.317 401.162 358.344 401.828 358.389 cv
401.859 359.053 401.882 359.486 401.952 360.295 cv
403.797 360.438 li
402.072 361.589 li
402.157 362.401 402.264 363.269 402.399 364.192 cv
402.581 365.426 405.256 365.537 408.642 365.54 cv
408.642 372.37 li
420.353 369.143 li
417.976 361.947 li
419.454 360.108 421.192 356.794 421.192 354.161 cv
cp
.180392 .807843 .909804 rgb
f
415.337 355.048 mo
415.337 357.445 413.395 359.389 410.997 359.389 cv
408.601 359.389 406.657 357.445 406.657 355.048 cv
406.657 352.651 408.601 350.708 410.997 350.708 cv
413.395 350.708 415.337 352.651 415.337 355.048 cv
cp
.286275 .32549 .360784 rgb
f
410.208 358.097 mo
405.497 362.507 li
404.668 361.621 li
409.378 357.21 li
410.208 358.097 li
cp
f
405.393 362.747 mo
404.484 362.938 li
404.134 363.011 403.785 362.758 403.704 362.373 cv
403.701 362.359 li
403.621 361.975 403.839 361.604 404.189 361.53 cv
405.098 361.34 li
405.448 361.267 405.797 361.519 405.877 361.903 cv
405.88 361.918 li
405.961 362.303 405.742 362.674 405.393 362.747 cv
cp
f
412.008 352.192 mo
411.051 352.1 li
410.841 352.08 410.688 351.894 410.707 351.684 cv
411.414 344.335 li
411.435 344.125 411.62 343.971 411.831 343.991 cv
412.787 344.083 li
412.997 344.104 413.151 344.29 413.131 344.5 cv
412.425 351.849 li
412.404 352.059 412.218 352.212 412.008 352.192 cv
cp
f
414.283 355.048 mo
414.283 356.863 412.812 358.334 410.997 358.334 cv
409.183 358.334 407.711 356.863 407.711 355.048 cv
407.711 353.233 409.183 351.763 410.997 351.763 cv
412.812 351.763 414.283 353.233 414.283 355.048 cv
cp
1 1 1 rgb
f
235.499 379.143 mo
234.028 379.143 232.561 378.771 231.012 378.007 cv
230.818 377.914 li
229.359 377.224 224.918 375.123 220.358 369.239 cv
215.811 363.326 214.907 358.502 214.61 356.917 cv
214.57 356.708 li
213.977 353.82 214.45 351.302 215.979 349.203 cv
216.258 348.515 216.715 347.909 217.318 347.443 cv
219.68 345.62 li
220.415 345.05 221.34 344.734 222.277 344.734 cv
223.601 344.734 224.825 345.334 225.635 346.38 cv
227.089 348.263 li
229.737 343.439 li
230.425 342.188 231.729 341.396 233.157 341.366 cv
233.243 341.365 li
233.98 341.365 234.689 341.568 235.302 341.936 cv
241.268 338.32 li
241.898 337.938 242.616 337.741 243.341 337.741 cv
243.659 337.741 243.98 337.779 244.294 337.856 cv
245.324 338.109 246.212 338.761 246.762 339.668 cv
247.996 341.705 li
248.63 342.751 248.711 343.967 248.352 345.042 cv
249.707 345.078 250.959 345.794 251.667 346.962 cv
252.407 348.184 252.44 349.708 251.752 350.961 cv
248.551 356.789 li
247.862 358.042 246.559 358.832 245.13 358.862 cv
245.045 358.863 li
244.308 358.863 243.599 358.66 242.986 358.293 cv
237.021 361.908 li
236.718 362.092 236.399 362.227 236.074 362.322 cv
237.304 362.392 238.433 362.96 239.193 363.941 cv
243.801 369.91 li
245.228 371.772 244.881 374.438 243.04 375.865 cv
240.672 377.692 li
240.082 378.148 239.374 378.44 238.637 378.539 cv
237.615 378.94 236.564 379.143 235.499 379.143 cv
229.969 357.847 mo
229.81 358.016 229.645 358.18 229.457 358.322 cv
228.652 358.944 li
228.98 359.814 229.494 360.858 230.146 361.718 cv
230.79 362.538 231.658 363.286 232.412 363.818 cv
233.238 363.181 li
233.664 362.852 234.155 362.618 234.673 362.471 cv
233.421 362.383 232.228 361.716 231.527 360.561 cv
230.293 358.524 li
230.162 358.309 230.056 358.08 229.969 357.847 cv
.454902 .482353 .196078 rgb
f
231.238 361.181 mo
230.412 361.818 li
229.658 361.286 228.79 360.538 228.146 359.718 cv
227.494 358.858 226.98 357.814 226.652 356.944 cv
227.457 356.322 li
227.645 356.18 227.81 356.016 227.969 355.847 cv
228.056 356.08 228.162 356.309 228.293 356.524 cv
229.527 358.561 li
230.229 359.716 231.421 360.383 232.673 360.471 cv
232.155 360.618 231.664 360.852 231.238 361.181 cv
cp
249.667 344.962 mo
248.959 343.794 247.707 343.078 246.352 343.042 cv
246.711 341.967 246.63 340.751 245.996 339.705 cv
244.762 337.668 li
244.212 336.761 243.324 336.109 242.294 335.856 cv
241.979 335.779 241.659 335.741 241.341 335.741 cv
240.616 335.741 239.898 335.938 239.268 336.32 cv
233.302 339.936 li
232.689 339.568 231.98 339.365 231.243 339.365 cv
231.157 339.366 li
229.729 339.396 228.425 340.188 227.737 341.439 cv
225.088 346.263 li
223.635 344.38 li
222.825 343.334 221.601 342.734 220.277 342.734 cv
219.34 342.734 218.416 343.05 217.68 343.62 cv
215.318 345.443 li
214.715 345.909 214.258 346.515 213.979 347.203 cv
212.45 349.302 211.977 351.82 212.57 354.708 cv
212.61 354.917 li
212.907 356.502 213.811 361.326 218.358 367.239 cv
222.918 373.123 227.359 375.224 228.818 375.914 cv
229.012 376.007 li
230.561 376.771 232.028 377.143 233.499 377.143 cv
234.564 377.143 235.615 376.94 236.637 376.539 cv
237.374 376.44 238.082 376.148 238.672 375.692 cv
241.04 373.865 li
242.881 372.438 243.228 369.772 241.801 367.91 cv
237.193 361.941 li
236.433 360.96 235.304 360.392 234.074 360.322 cv
234.399 360.227 234.718 360.092 235.021 359.908 cv
240.986 356.293 li
241.599 356.66 242.308 356.863 243.045 356.863 cv
243.13 356.862 li
244.559 356.832 245.862 356.042 246.551 354.789 cv
249.752 348.961 li
250.44 347.708 250.407 346.184 249.667 344.962 cv
cp
1 1 1 rgb
f
238.635 370.354 mo
234.031 364.392 li
233.947 364.283 233.791 364.263 233.683 364.347 cv
231.323 366.168 li
231.215 366.252 231.194 366.408 231.278 366.517 cv
231.321 366.571 li
229.676 366.428 226.71 364.366 224.961 362.138 cv
223.249 359.883 222.005 356.491 222.282 354.863 cv
222.324 354.918 li
222.408 355.026 222.564 355.047 222.673 354.963 cv
225.032 353.142 li
225.141 353.059 225.161 352.902 225.077 352.793 cv
220.473 346.83 li
220.389 346.722 220.233 346.702 220.125 346.786 cv
217.764 348.608 li
217.656 348.691 217.636 348.846 217.719 348.953 cv
217.721 348.955 li
216.471 350.254 216.048 351.764 216.488 353.904 cv
216.708 354.974 217.264 359.254 221.52 364.789 cv
225.797 370.308 229.804 371.937 230.782 372.42 cv
232.741 373.387 234.309 373.36 235.882 372.479 cv
235.884 372.481 li
235.967 372.589 236.121 372.608 236.229 372.525 cv
238.59 370.703 li
238.698 370.619 238.718 370.463 238.635 370.354 cv
cp
.164706 .439216 .454902 rgb
f
242.574 341.778 mo
241.341 339.741 li
232.35 345.19 li
231.243 343.365 li
228.042 349.194 li
234.69 349.053 li
233.584 347.228 li
242.574 341.778 li
cp
1 .8 .2 rgb
f
231.714 354.451 mo
232.948 356.487 li
241.939 351.038 li
243.045 352.863 li
246.246 347.035 li
239.599 347.177 li
240.705 349.002 li
231.714 354.451 li
cp
f
57.1172 306.772 mo
58.4102 306.772 59.4956 307.411 60.1978 308.13 cv
58.9058 309.583 li
58.3779 309.104 57.8838 308.8 57.1494 308.8 cv
55.6963 308.8 54.563 310.061 54.563 312.152 cv
54.563 314.291 55.5693 315.536 57.0859 315.536 cv
57.9478 315.536 58.5532 315.169 59.064 314.611 cv
60.3574 316.031 li
59.4956 317.037 58.3467 317.564 57.0532 317.564 cv
54.355 317.564 52.1533 315.729 52.1533 312.232 cv
52.1533 308.784 54.4355 306.772 57.1172 306.772 cv
cp
1 1 1 rgb
f
61.5767 306.964 mo
63.9229 306.964 li
63.9229 312.791 li
63.9229 314.834 64.561 315.536 65.7271 315.536 cv
66.8916 315.536 67.5781 314.834 67.5781 312.791 cv
67.5781 306.964 li
69.8447 306.964 li
69.8447 312.552 li
69.8447 316.047 68.4243 317.564 65.7271 317.564 cv
63.0288 317.564 61.5767 316.047 61.5767 312.552 cv
61.5767 306.964 li
cp
f
72.7393 314.451 mo
73.4741 315.09 74.4316 315.536 75.2935 315.536 cv
76.2686 315.536 76.7466 315.153 76.7466 314.531 cv
76.7466 313.877 76.1567 313.669 75.2466 313.286 cv
73.9053 312.711 li
72.8203 312.28 71.7983 311.386 71.7983 309.87 cv
71.7983 308.146 73.3467 306.772 75.5015 306.772 cv
76.6987 306.772 77.9595 307.251 78.854 308.146 cv
77.6724 309.63 li
76.9858 309.104 76.332 308.8 75.5015 308.8 cv
74.7036 308.8 74.1772 309.151 74.1772 309.742 cv
74.1772 310.381 74.8633 310.604 75.7734 310.971 cv
77.0977 311.514 li
78.3584 312.024 79.1577 312.87 79.1577 314.339 cv
79.1577 316.063 77.7202 317.564 75.2466 317.564 cv
73.8896 317.564 72.4521 317.053 71.3838 316.063 cv
72.7393 314.451 li
cp
f
82.626 308.943 mo
79.7534 308.943 li
79.7534 306.964 li
87.8301 306.964 li
87.8301 308.943 li
84.9731 308.943 li
84.9731 317.372 li
82.626 317.372 li
82.626 308.943 li
cp
f
95.5444 312.12 mo
95.5444 310.045 94.6504 308.8 93.2295 308.8 cv
91.8247 308.8 90.9146 310.045 90.9146 312.12 cv
90.9146 314.212 91.8247 315.536 93.2295 315.536 cv
94.6504 315.536 95.5444 314.212 95.5444 312.12 cv
cp
88.5049 312.12 mo
88.5049 308.72 90.4365 306.772 93.2295 306.772 cv
96.0386 306.772 97.9546 308.736 97.9546 312.12 cv
97.9546 315.521 96.0386 317.564 93.2295 317.564 cv
90.4365 317.564 88.5049 315.521 88.5049 312.12 cv
cp
f
99.9082 306.964 mo
102.398 306.964 li
104.139 311.642 li
104.762 313.461 li
104.825 313.461 li
105.448 311.642 li
107.14 306.964 li
109.63 306.964 li
109.63 317.372 li
107.427 317.372 li
107.427 313.558 li
107.427 312.536 107.618 311.019 107.73 310.014 cv
107.667 310.014 li
106.82 312.424 li
105.208 316.462 li
104.266 316.462 li
102.67 312.424 li
101.839 310.014 li
101.776 310.014 li
101.888 311.019 102.08 312.536 102.08 313.558 cv
102.08 317.372 li
99.9082 317.372 li
99.9082 306.964 li
cp
f
112.063 306.964 mo
118.591 306.964 li
118.591 308.943 li
114.425 308.943 li
114.425 311.035 li
117.969 311.035 li
117.969 312.998 li
114.425 312.998 li
114.425 315.393 li
118.751 315.393 li
118.751 317.372 li
112.063 317.372 li
112.063 306.964 li
cp
f
123.146 311.753 mo
124.343 311.753 li
125.573 311.753 126.243 311.227 126.243 310.204 cv
126.243 309.183 125.573 308.832 124.343 308.832 cv
123.146 308.832 li
123.146 311.753 li
cp
126.419 317.372 mo
124.424 313.621 li
123.146 313.621 li
123.146 317.372 li
120.783 317.372 li
120.783 306.964 li
124.534 306.964 li
126.737 306.964 128.557 307.73 128.557 310.204 cv
128.557 311.737 127.807 312.711 126.706 313.206 cv
129.052 317.372 li
126.419 317.372 li
cp
f
134.614 314.451 mo
135.349 315.09 136.307 315.536 137.168 315.536 cv
138.143 315.536 138.622 315.153 138.622 314.531 cv
138.622 313.877 138.031 313.669 137.122 313.286 cv
135.78 312.711 li
134.695 312.28 133.673 311.386 133.673 309.87 cv
133.673 308.146 135.221 306.772 137.376 306.772 cv
138.573 306.772 139.834 307.251 140.729 308.146 cv
139.547 309.63 li
138.861 309.104 138.207 308.8 137.376 308.8 cv
136.578 308.8 136.052 309.151 136.052 309.742 cv
136.052 310.381 136.738 310.604 137.648 310.971 cv
138.972 311.514 li
140.233 312.024 141.033 312.87 141.033 314.339 cv
141.033 316.063 139.595 317.564 137.122 317.564 cv
135.764 317.564 134.327 317.053 133.258 316.063 cv
134.614 314.451 li
cp
f
142.729 306.964 mo
145.075 306.964 li
145.075 312.791 li
145.075 314.834 145.713 315.536 146.879 315.536 cv
148.043 315.536 148.73 314.834 148.73 312.791 cv
148.73 306.964 li
150.997 306.964 li
150.997 312.552 li
150.997 316.047 149.576 317.564 146.879 317.564 cv
144.181 317.564 142.729 316.047 142.729 312.552 cv
142.729 306.964 li
cp
f
157.021 311.977 mo
158.314 311.977 158.938 311.402 158.938 310.316 cv
158.938 309.231 158.267 308.832 157.021 308.832 cv
155.728 308.832 li
155.728 311.977 li
157.021 311.977 li
cp
153.365 306.964 mo
157.165 306.964 li
159.431 306.964 161.235 307.794 161.235 310.316 cv
161.235 312.759 159.368 313.845 157.165 313.845 cv
155.728 313.845 li
155.728 317.372 li
153.365 317.372 li
153.365 306.964 li
cp
f
166.684 311.977 mo
167.978 311.977 168.6 311.402 168.6 310.316 cv
168.6 309.231 167.929 308.832 166.684 308.832 cv
165.391 308.832 li
165.391 311.977 li
166.684 311.977 li
cp
163.028 306.964 mo
166.827 306.964 li
169.094 306.964 170.898 307.794 170.898 310.316 cv
170.898 312.759 169.03 313.845 166.827 313.845 cv
165.391 313.845 li
165.391 317.372 li
163.028 317.372 li
163.028 306.964 li
cp
f
179.236 312.12 mo
179.236 310.045 178.342 308.8 176.921 308.8 cv
175.516 308.8 174.606 310.045 174.606 312.12 cv
174.606 314.212 175.516 315.536 176.921 315.536 cv
178.342 315.536 179.236 314.212 179.236 312.12 cv
cp
172.197 312.12 mo
172.197 308.72 174.128 306.772 176.921 306.772 cv
179.73 306.772 181.646 308.736 181.646 312.12 cv
181.646 315.521 179.73 317.564 176.921 317.564 cv
174.128 317.564 172.197 315.521 172.197 312.12 cv
cp
f
185.963 311.753 mo
187.16 311.753 li
188.39 311.753 189.06 311.227 189.06 310.204 cv
189.06 309.183 188.39 308.832 187.16 308.832 cv
185.963 308.832 li
185.963 311.753 li
cp
189.236 317.372 mo
187.241 313.621 li
185.963 313.621 li
185.963 317.372 li
183.6 317.372 li
183.6 306.964 li
187.351 306.964 li
189.554 306.964 191.374 307.73 191.374 310.204 cv
191.374 311.737 190.624 312.711 189.523 313.206 cv
191.869 317.372 li
189.236 317.372 li
cp
f
195.147 308.943 mo
192.275 308.943 li
192.275 306.964 li
200.352 306.964 li
200.352 308.943 li
197.495 308.943 li
197.495 317.372 li
195.147 317.372 li
195.147 308.943 li
cp
f
205.977 314.451 mo
206.712 315.09 207.669 315.536 208.531 315.536 cv
209.506 315.536 209.984 315.153 209.984 314.531 cv
209.984 313.877 209.395 313.669 208.484 313.286 cv
207.143 312.711 li
206.058 312.28 205.036 311.386 205.036 309.87 cv
205.036 308.146 206.584 306.772 208.739 306.772 cv
209.937 306.772 211.197 307.251 212.091 308.146 cv
210.91 309.63 li
210.224 309.104 209.57 308.8 208.739 308.8 cv
207.941 308.8 207.415 309.151 207.415 309.742 cv
207.415 310.381 208.101 310.604 209.011 310.971 cv
210.335 311.514 li
211.596 312.024 212.396 312.87 212.396 314.339 cv
212.396 316.063 210.958 317.564 208.484 317.564 cv
207.127 317.564 205.69 317.053 204.622 316.063 cv
205.977 314.451 li
cp
f
214.139 306.964 mo
220.667 306.964 li
220.667 308.943 li
216.502 308.943 li
216.502 311.035 li
220.045 311.035 li
220.045 312.998 li
216.502 312.998 li
216.502 315.393 li
220.828 315.393 li
220.828 317.372 li
214.139 317.372 li
214.139 306.964 li
cp
f
225.222 311.753 mo
226.419 311.753 li
227.648 311.753 228.319 311.227 228.319 310.204 cv
228.319 309.183 227.648 308.832 226.419 308.832 cv
225.222 308.832 li
225.222 311.753 li
cp
228.495 317.372 mo
226.5 313.621 li
225.222 313.621 li
225.222 317.372 li
222.859 317.372 li
222.859 306.964 li
226.61 306.964 li
228.813 306.964 230.633 307.73 230.633 310.204 cv
230.633 311.737 229.883 312.711 228.782 313.206 cv
231.129 317.372 li
228.495 317.372 li
cp
f
231.055 306.964 mo
233.545 306.964 li
234.806 311.817 li
235.108 312.95 235.316 314.004 235.635 315.153 cv
235.7 315.153 li
236.019 314.004 236.227 312.95 236.529 311.817 cv
237.759 306.964 li
240.169 306.964 li
237.024 317.372 li
234.198 317.372 li
231.055 306.964 li
cp
f
241.259 306.964 mo
243.622 306.964 li
243.622 317.372 li
241.259 317.372 li
241.259 306.964 li
cp
f
250.521 306.772 mo
251.813 306.772 252.898 307.411 253.601 308.13 cv
252.309 309.583 li
251.781 309.104 251.287 308.8 250.553 308.8 cv
249.1 308.8 247.966 310.061 247.966 312.152 cv
247.966 314.291 248.973 315.536 250.489 315.536 cv
251.351 315.536 251.957 315.169 252.468 314.611 cv
253.761 316.031 li
252.898 317.037 251.75 317.564 250.457 317.564 cv
247.758 317.564 245.557 315.729 245.557 312.232 cv
245.557 308.784 247.839 306.772 250.521 306.772 cv
cp
f
255.314 306.964 mo
261.843 306.964 li
261.843 308.943 li
257.677 308.943 li
257.677 311.035 li
261.221 311.035 li
261.221 312.998 li
257.677 312.998 li
257.677 315.393 li
262.003 315.393 li
262.003 317.372 li
255.314 317.372 li
255.314 306.964 li
cp
f
267.356 306.964 mo
269.72 306.964 li
269.72 317.372 li
267.356 317.372 li
267.356 306.964 li
cp
f
276.618 306.772 mo
277.911 306.772 278.996 307.411 279.698 308.13 cv
278.406 309.583 li
277.879 309.104 277.385 308.8 276.65 308.8 cv
275.197 308.8 274.063 310.061 274.063 312.152 cv
274.063 314.291 275.069 315.536 276.587 315.536 cv
277.448 315.536 278.054 315.169 278.564 314.611 cv
279.858 316.031 li
278.996 317.037 277.848 317.564 276.554 317.564 cv
273.855 317.564 271.653 315.729 271.653 312.232 cv
271.653 308.784 273.937 306.772 276.618 306.772 cv
cp
f
287.366 312.12 mo
287.366 310.045 286.472 308.8 285.051 308.8 cv
283.646 308.8 282.736 310.045 282.736 312.12 cv
282.736 314.212 283.646 315.536 285.051 315.536 cv
286.472 315.536 287.366 314.212 287.366 312.12 cv
cp
280.326 312.12 mo
280.326 308.72 282.258 306.772 285.051 306.772 cv
287.859 306.772 289.775 308.736 289.775 312.12 cv
289.775 315.521 287.859 317.564 285.051 317.564 cv
282.258 317.564 280.326 315.521 280.326 312.12 cv
cp
f
291.729 306.964 mo
294.141 306.964 li
296.854 312.137 li
297.892 314.435 li
297.955 314.435 li
297.844 313.334 297.652 311.865 297.652 310.636 cv
297.652 306.964 li
299.887 306.964 li
299.887 317.372 li
297.477 317.372 li
294.763 312.185 li
293.741 309.917 li
293.678 309.917 li
293.789 311.067 293.98 312.456 293.98 313.685 cv
293.98 317.372 li
291.729 317.372 li
291.729 306.964 li
cp
f
303.021 314.451 mo
303.755 315.09 304.713 315.536 305.575 315.536 cv
306.55 315.536 307.028 315.153 307.028 314.531 cv
307.028 313.877 306.438 313.669 305.528 313.286 cv
304.187 312.711 li
303.102 312.28 302.08 311.386 302.08 309.87 cv
302.08 308.146 303.628 306.772 305.783 306.772 cv
306.979 306.772 308.24 307.251 309.135 308.146 cv
307.953 309.63 li
307.268 309.104 306.613 308.8 305.783 308.8 cv
304.984 308.8 304.458 309.151 304.458 309.742 cv
304.458 310.381 305.145 310.604 306.055 310.971 cv
307.379 311.514 li
308.64 312.024 309.439 312.87 309.439 314.339 cv
309.439 316.063 308.002 317.564 305.528 317.564 cv
304.171 317.564 302.733 317.053 301.665 316.063 cv
303.021 314.451 li
cp
f
318.975 306.772 mo
320.268 306.772 321.354 307.411 322.055 308.13 cv
320.763 309.583 li
320.235 309.104 319.741 308.8 319.007 308.8 cv
317.554 308.8 316.42 310.061 316.42 312.152 cv
316.42 314.291 317.427 315.536 318.943 315.536 cv
319.805 315.536 320.411 315.169 320.922 314.611 cv
322.215 316.031 li
321.354 317.037 320.204 317.564 318.911 317.564 cv
316.212 317.564 314.011 315.729 314.011 312.232 cv
314.011 308.784 316.293 306.772 318.975 306.772 cv
cp
f
329.724 312.12 mo
329.724 310.045 328.83 308.8 327.409 308.8 cv
326.004 308.8 325.094 310.045 325.094 312.12 cv
325.094 314.212 326.004 315.536 327.409 315.536 cv
328.83 315.536 329.724 314.212 329.724 312.12 cv
cp
322.685 312.12 mo
322.685 308.72 324.615 306.772 327.409 306.772 cv
330.218 306.772 332.134 308.736 332.134 312.12 cv
332.134 315.521 330.218 317.564 327.409 317.564 cv
324.615 317.564 322.685 315.521 322.685 312.12 cv
cp
f
334.087 306.964 mo
336.45 306.964 li
336.45 315.393 li
340.553 315.393 li
340.553 317.372 li
334.087 317.372 li
334.087 306.964 li
cp
f
342.328 306.964 mo
344.691 306.964 li
344.691 315.393 li
348.793 315.393 li
348.793 317.372 li
342.328 317.372 li
342.328 306.964 li
cp
f
350.568 306.964 mo
357.098 306.964 li
357.098 308.943 li
352.932 308.943 li
352.932 311.035 li
356.476 311.035 li
356.476 312.998 li
352.932 312.998 li
352.932 315.393 li
357.258 315.393 li
357.258 317.372 li
350.568 317.372 li
350.568 306.964 li
cp
f
363.76 306.772 mo
365.053 306.772 366.138 307.411 366.84 308.13 cv
365.548 309.583 li
365.021 309.104 364.526 308.8 363.792 308.8 cv
362.339 308.8 361.205 310.061 361.205 312.152 cv
361.205 314.291 362.211 315.536 363.729 315.536 cv
364.59 315.536 365.195 315.169 365.706 314.611 cv
367 316.031 li
366.138 317.037 364.989 317.564 363.695 317.564 cv
360.997 317.564 358.795 315.729 358.795 312.232 cv
358.795 308.784 361.078 306.772 363.76 306.772 cv
cp
f
370.404 308.943 mo
367.531 308.943 li
367.531 306.964 li
375.608 306.964 li
375.608 308.943 li
372.751 308.943 li
372.751 317.372 li
370.404 317.372 li
370.404 308.943 li
cp
f
377.226 306.964 mo
379.588 306.964 li
379.588 317.372 li
377.226 317.372 li
377.226 306.964 li
cp
f
388.563 312.12 mo
388.563 310.045 387.668 308.8 386.247 308.8 cv
384.842 308.8 383.933 310.045 383.933 312.12 cv
383.933 314.212 384.842 315.536 386.247 315.536 cv
387.668 315.536 388.563 314.212 388.563 312.12 cv
cp
381.522 312.12 mo
381.522 308.72 383.454 306.772 386.247 306.772 cv
389.056 306.772 390.972 308.736 390.972 312.12 cv
390.972 315.521 389.056 317.564 386.247 317.564 cv
383.454 317.564 381.522 315.521 381.522 312.12 cv
cp
f
392.926 306.964 mo
395.337 306.964 li
398.051 312.137 li
399.088 314.435 li
399.151 314.435 li
399.04 313.334 398.849 311.865 398.849 310.636 cv
398.849 306.964 li
401.083 306.964 li
401.083 317.372 li
398.673 317.372 li
395.959 312.185 li
394.938 309.917 li
394.874 309.917 li
394.985 311.067 395.177 312.456 395.177 313.685 cv
395.177 317.372 li
392.926 317.372 li
392.926 306.964 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.2
%%For: (User) ()
%%Title: (Ready.eps)
%%CreationDate: 11/10/2017 10:02 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B7%M8dP1TJ51c)"!:C;t?>uapf\"1JpF8FY9G+.tI<^5<40rZP%(;ZfM8A03`.?<LG,OcPlq/f]-Hncf@^KnWoCl@C#t4uZ
%$/rYC0E56]4>\\_hM2psZTMpcm=)cbQM"Q;Bf=4R0,@1ZTs[68=q.WJTj,4`1k,lZRTd6&pVaDtF2hnY)7/)GqB7<1&0V!HDSGJR
%>sJBS'=dt1D#pT.p\QWNTM<G>3(VC`il(>YQ2:s&B(Yq*X`'Toa&PNeB-iIX618L<"X"QgZ1-'H>R[J$W]"PaXYE0a(4>JPL60?"
%kcBDu*k=pqJQVIRA,g%e@hfg<r"EN/ruTnk:\^=cnKG^e-_F2n(n?:&TqpX&BA^M=)ZV$3A<J@WU>G/l[D#C8`Go?d$q78tcsIc'
%ciHFkaBV[O73k0XWZdMB0<>MQD*1V5qQGYQ>:alpCDFNuCGOc6(Q:REA%#Omi/9m"mp<G^5)>.B0\'(<M-85q^nQ%"VPt08;B1k7
%2F^R0f(;/YU"LEY%UpT8ENYiB=uks\*A*;Z#<D,6m@nkp-5p;]+XDbl+[3h!%'[^NJtjZYQ/Nsi5DL_O5QVF0)-)k*)a*F)25;1M
%YVM#4j@%`d&%Y6L1JaDH.FoTX79#u[<LnX,aTCf,^>=$FcZ7@R'?\[ikXbfq::D`FZ\:I(iR\4"GT3a!C"DXOhA:2A8.7O;1Bd2p
%C;LEL)[ZQ8^JjHensjV.i8R&S*-ALRWqjj<<oOk#Ukc,FEo658<\'lMdOT]J%BU0h$l-BX)/-g0(FQ4#S^gLA!hWa]A6jn9a]IZ?
%61+sgKj`jOYb:7SYBn[a:kUF5+;FEAXfZ_5jFU#YBD`*<1m!nk&eXg99d#m4/KGB1TgE^Qk^S+J>m`>dc=js;6"!m*s-q\YTYd/B
%!==Ek2lcn\In$]id/2r$0MNM_Q`9,TIN8L)hQHKU.9Kq?$)?!%=:iacJ$_g[e*+2EH8HlX1H!<L^$nOqY6Qh9Ut0?#[BA)[)s'nj
%46Y3^7FQ(ae43bfB22eYQgi9cQ@a#3D4e3fq7Ig"7Mm0XU8<"Y"HV^%2/4DH3)-.^b!\"[`pd>Ua0EGo3/XKlFN"7C*>>)0`$tV]
%5qp@tV,&'G`EY:SO<]Dc"/E&H^1=Z5QqW5AFfhDPGBGSI*_Gl><]#-AMF9X6b?2cq=L^DBe?Y.gaenqq'SC<_-b3/H4ilfN;8u9r
%li-FrV6/+en#^1@/k/)]?)'7?lO_,q!&<?tC;W$m]$[U$oesYE6CV+[8DK-uVuI"-%2W)>ZE@*)okJ0H!$ejdr]>SZRKNGQ.Ue(m
%<+D$E>0Fd:3Vfm<^5:$Xp,V!re?rr_F7tPb!3Qmt]9m"B5A+Gq)JL7AT55;B#f+;!ho>fA"C\%-)msuV!%/99A@(ls;<c[7E+@pF
%"InqW`C0-86*pm!ZZ9FM<=]]DC#na2Dh$+c5q1SAl^otGh=W4$0(JB:+]1`,S<]8gdkb;.D#g(2#q/19hl3a(RHs.O5r2&NE=fmC
%S[M\b)j%@Rc;K_]@7M`%A,3>2#+KTPYTIlSGtt.O5BAMniZIJpJh>8]O,K"3j9W$)bLWmMq2>chUQ`th!+%e;mp`5'%_?6M^oHgT
%W$ma^^>3-e%Fub(=TE[ALLrhePKtV\RF8.0X][)3;5Kd:/*1B>goQb;X6faC9"=pf@d6RrC0-$:1f$i@pN)5&!0+Nl/N9`lB!pEq
%Q8<0]goQh=iO'Y)3=5Xc]ih:L(%\mVZ#(67IR(:SN/:-0GD)Sgmf[+_^JXHaRY,T7E#Op7CV;"lT"fKWSCD#Tf<;"B?O_&B2c.pr
%UOR>#E1dYd4[X!4`nTE^kKO&";[F)j/)M2uKCBF_NNITg,&:5[4h^lH),4Th$Po/.-0%37.[is_Ddp/,VtnKrJW8RPj6IIf@/co=
%UlT-JI@$5Xg$Q,^35nRdhZPq"d2R2.>$3MC[9tKTU&UX-n3+m;!;1k:%[pQ[BsrA:XW>@DhV[m@r%Z#*9`Ns(g\R6RoPU)FJcc?h
%ptt6iqD3XurqsdI?4=ckUj"3=@*/c3TD6\O,B"LfIP+_9@cO)M7_s8uS=MT4A^^1h6@.X8#(BmMoAfO*!ip!<C7_WrE_KX>pjtOR
%hYRC#SIIa_'8Z9d49Sc`)rmAI4s#CGj.U2Za]$>H-k'lsUL.s(r?0k$;\b>m_6)mWoq-5D_WO/MAB1qt_77>[SAfIdMr:cqXJ[B!
%3RPGr*@3_2fhV%%l"B;A+.^C;PgA]QNN\ma8t'?JdFInS"73Bgr]qlNEV_bNJ^2K`c8#9um'*g;9PtaA"6)]K*i>ecXr-pp^E6Sk
%s-1uDCc&qS/%Sp'(^.r#*5q<kHHg?*NpdYjYS9f>)%u!bN(FOi5O%.'*uW(1_.sh!rXm3N&PntqKL<F=1bgjB37+FWe'XAKi`!(X
%!:b6lSNFX?d+QnH303NW\j(_M:$L.*62YD26M%tbD#_F+U=6F;9_f&'!\HU"Igg&H&L6"*Jj,Cfbmu$%?tJ?(JKRW[9dp"QUXch-
%E=lTN/6UTYD7s*!S)f>eJo$pi]B-["M[.m$q`95qDu&PG-=ug19s(MW&&4WJS`sC"I_tCP>8iS2E(F@tWWMq(UI+E5ZG)Bl1JBt:
%a[@/fD[Yk3b]%mZW$#6\P[r:pDh<Du?P=L<!q\f+5/%2/@X>[3aGMe<)-i9DHiJe$Q;!aV23#&I"ZYiV<F$JlBJ=sA4OiiJFTCUj
%RmGI0oD<cGS*^2];ls:GZj%Ug"k2hba:mopeZRR4E[$a@I2<u/o/H&tEI"!;aS3)[^aO,0IMYX_S^^+0N36&5n7NJgR%0*2?!IO=
%l83;%i2;6bch[1mIi"=!J1$M\7^F!!Y]]OVbGbJZ<RPZ61(G8lgD6L`XAjeaA'Dgdf#g<p)m)Bkbf2k)K-0Sl[doJ=M5'ouP:/^R
%0g-9*cY6`[nO\u9:H41Dj>Bf@UF6f&FT0Cs)ApDVVC";&kd)[g&t17PHD^Tk8tb9Yo$=$581ph$/5#^cS4*b$`70J"^H5WDcD(4=
%r6<N]9[AkX4,Yk.A\lCl:k%P0PTXQt4_rR6/B[%l\"@UT,mY15iuPJ4.&4<JYs4j:NFuu-7?&aQi7%Yq]Kg*9B:>4%=$'*:,6#tm
%I-1oeeGBX6g#j&pUWW2cgp<Kip$5,^>NVis2*+94p1M-OAes"4'%`p^>ar^?.>Va?luX#pAoTF"SF-GhQEL1)77TYfU=r"*[99pr
%MeZUTC9qGf(=f9)Wm,Rl=]>bCe`\$IkJ-i:a>=+1!$_26D#hl:kj*+3ceKq!#\Is2F!I=%r+CJX.W>6f2tKc2O6</)bc/[:_uN:C
%/`C%>3jhN;:20XlFn#&UT1`aq?Jb6??[OVU@E=\G0]]PO1Au,!l09jAX>4C+$i)\]fH@hSm<'T0_afO=ig:9-_I"Vms),Ycq!Su'
%#lUF:%ZGR"Y8Zfu58EPnlQ'9sVZJ<._Yr$mj=>.rRC(JB'^R3K-U$i+`l?MuhZ$`n;`JPW9Qgj>noi3p59!rf>91$T$dREJ^^n:X
%9ir7ul-m5k(NB&8Oot/Ea6KN]$3X[V-9_V:kiObB*B0[[5br<Kg&gatDNE#^K.n1Jpa<aJ:?rhsH;!]3=Ycm)."?+(SG;G,L_#KO
%9:la"P9%hu"QTd]Eu)l3gkb`7/=`$EBD/.Y`bb[!qY,Jh_J;_UqnFA/nfrXsA%)D!g]*i3s3C=fBD]FgH's9_?a<_m%PYq>"^JNL
%HbQgLhq=Ui=4in/Ic>1iGIH]3Dnb8*=rdbAOb\c("+`J#RRe"JASf%G[gFEM+m9<jIHZk8YU;WA"l@0)WZ<2T"ES.$>1.4S6/<%1
%8al*B0(/_cRn`L`cWP'&[<`o+,%Z-HDZC9&D[<j*:"jVAl]B@PA?ud!hsOGEK#t)gB$T+@s3-B"p]%8Y2m1t@[B?[A[igIU[u>LL
%W0pl))J2q:Dft`qQJ'gB@lJmMrNfZ,lu."t,s\A/qpT3fqW!%Kc54J@bjVhp.0)GU'>=Y:e53[4gnmX\V!c=_6N!ru;c6X>Pd</t
%WAOKY7k[6pg\k8flIf=LA[8p"!J6MFR:#/O]YA$P%FC\`qY(KLZsR:h]B/qTK5iL(=lX)EGaUEqArW-[j(6edR5J;?EUp5k(V@q$
%2.#W%%-bON)DAG:bI>I`+)kb!ej,Z]OM3]:JmHYrFU.0/4_"CH4(:GB/JDJhe$M5Y3Sc?X#_)\jntSI3#L$g6ReShI_gYoJ`\p>b
%0bjZ?G>.qA?haotJqcjHa[D4-n6^Oa`&-O*'>HfXhS_6R$fpY+9N//^#1$m.IW:mkJa$f"NmkPr*]O@!9.+-@p8*aUAoD%Fd^LkE
%l<;1)mI1&=SS=$VZcC`H3/%\.C9ZCOm,."h!IcH&'&]*K$.=%N=:cOnXTLa.IfDSQb\FP`pX+r2H6o6U:JFCW=`5fT,HCSnec:3=
%8>enW?Rl=-9f)h-[_VM`AQGML.^[<ud!ijTE?hQppc09ZEia1QZ%=\B,h`.9>aOQ?!)1o8@-?r_`,B-U#f=l*7O?E,:)e-&a-_OU
%s(D!ZUfedLU(^qr#P9a&n1a0<bk`0_5/s[b1$`?I>c#[@(pcEG,kWng>+ef'5CK07r"D+O6/Dst*jj58II5WONuc]jho/R&X2,L=
%Vkt'eaVa?X:Dn5qJ'ZNWBRmSHPdI$Rl0<0h]j2+Gg^N.k(N2SZBkhC7[TVf5rURJlPcm<%GX\AFaKL!DhkmAk3:/Y=@K/j3BS_KL
%pmm8U)'hnEhs#JPno[NT@Xke$[Xoce"RWf\RD&B08m_E0,a4V/pM&9h^@f085Nc<DZe#E[_i:;JTN`<k_6p2O.JRu@Ie)OU',%6"
%1*s'VY<Cr(CQs9c*WMNsW>B0=a$#\N9s)8T-Z^X4aB&og-N1^ro<SpS"_-Z0ESr@_H&nq?`V2Si25dVichuQn4DJZ_MuRfNr]B`#
%=Y9A#8".tKs*@5'<HGK]m_;]F"\8W*e_F]>0WX=_O.H;?2&G1&"B/CHrQ'Uk!>ICAk@Wi2XIPcFF0fn)<mJt4\WHr\[W:fi1b5u:
%(<"$:^6X\]5G4GQ`l+\)F5kNGk5qp[hl,]>53tAqZ/S9f<T<3>r^D?HFS9$tDgtaa#K22HM`tc,aI&(.Am24Z^ZPb<hfBu#f^F#[
%I+5/STkq&aNBC6VC?<H9a9%bMX_dY0L]qPVpA07qK63u-]^K;fT[Ng32#'g)b+QVKdYn+YHX\>9ak7mlVG-uN&FlM3e0!;'%_=>g
%8W#4X^R#c7a(-P\#R':#C-4_rRA8W3>LglBTr\F@DLCY4VaU<O:2*O'$`Y3hp&oGJHWnj6p\NUr?eP$NgV\5_(O*XE"$L5N`#_#`
%6p=eTBEj61#e23Ug1in*p^uu)iWB<Zm8'K7#dfTM@X]+X;Lit7ktUpgYX;+CIWP@M1.XsW"kt*Qpa7FU@T:YHjJgAc^@^a3ZTMoe
%#Q7:5K4C6T8/^:Annn:.LqV)Me%^+N[f.QW]j#)?dGuWCZ^b]p'E.ZGU4OD\VE-1&Ba9lPAs2oKg>$%5e#_4c;(^cVL]RSm^W*cb
%&CF/odNnE<DK"FQKCF:O1lZrj1WF&)dhmtMY0jG^oK[?mT;n"NdnYo-W4X)0E.%Z&:3I$O&r[dbCiTA3o9G/>+G2YoCk8*.OL#,]
%YNT`\f>\r91[/[bO:_+m>8sKFK09%9_+@@IrgA9q4o4qDB/,Ye1&H+#l$/'2:OX\WVf.6V`h`E#s%;!0p.P/;\Wfe`MhtUUO:1P5
%PGnh3Cl#@r)>2+*I*O>>(rWTt`:)^\!:K9'E1Uh`A)LDiqm8`tndsKr8%pn7@H*&+2YN368<`o&s6LaDhrmIj!6P#S^KVoQ'4*;2
%p62,&rL#7E.=TCW?a7$gfK7#h2)820=`;dfEG+XP:a8Y,0UV8q"LR1lG`H`X4QgJ\@H,aM2TX4&cP#M]G,1V-hTZnnT@<l:`dg3d
%)X_C;+C^^qmN`SUY\Q]F^'`SCoO35j1s$0[jbp)H,<s;kU2l%rrH'hWR$lWORi2+pK3@2<%u65Z#9S4DG-uLs)W[5!-ICnir%Prd
%F?M1XITY1sj8'g(Wt&aDO+0MEjN(Q<g&,L\Af<1iYJuc?Z.!DK@egPZi/9gOZl%,pb]C@$EISCR^dJ;gT:5.0:a'`bM:h<N?8L=-
%Q!aN7g*,&^lWV"_JA5aXkDN_7nVUJt6](6(<tCj8D69[Z6YG3^bji#t+mWl@CGq0@[@l9Q7FQ'j_V[Yi52u.qC+*gm#ak*Wk9")K
%bl!QTEALk-Nt-.rLh.Fo0E/jlkCrp7l)WCCGdh%q(MWWZ*KSt;Df,%SI<+EjbX$l[p'?t*$<BJu[U?I':#/6I6>-)63TYqogh6u(
%J3Qn6:h:-(MFt1sWWN"3!";&i$nI.>IH+$ADfH7Yh>Di]No8A:^jZA_KMFl.O%cMC$XC>0Dh(\70H"mR*%dI7>nr&ZZ1YYTnleu\
%pN;CVI-E.;?b*oO$GCnT1fH\<aMuJs-p@Ta?iHBFO-8#820l$ZI6"gU1pY0%PoKG!.i19@kQ(TVlnC%LOd0$hYJ>4<+OD2I=VPBd
%87Yh&)YJXiEO!E%$IHc,$2j,;Ae[O2H))^j$nm_R&uUOF4e/QAC\WNVPiHbhpc!bRD5-iZV_(st?Sg^^LtlXSmnLYcq28P]EKOKW
%r6[!^9dKE3dID5_3c5(IdODLbBL-X'deY)P`TKr#J=_I%IB,R4W754njm`^1+M1;6^I@:')J.]]\G5u17^Mm&ZIJ;*s/L3g>G%cK
%J;b:.D%F._l1r(h]r9X]is1]Edk!HM:LB\^B&]J$9E]toUQ*$Uq"^Uf^]g2Vkl"Gs9`RXsoY8j'rpN2L0POd>%OMMbqdG%<,D`53
%h%7:A'Onf]%h"1T)$Z.LQ3Y+;fp[H\pQ(bVXJ]JrMJFX8@;nm<2uKQBq,stPHTj[;Q$_'=-G[?n+HlJf7eu5#nH]h$$mUE`06F>l
%OkPGeHpWF.6kGb^=o.c$2OV?&'>dWYNe75d/suk8Mn9Y<S'49'7Gp@@0[MKBP)4Fu_>F2t6-Mofk!sfabWb)(3PF-2lPd1W>Jao+
%mr+Y^<.`%ZWs_[O@XU"P$!?16@NI,7Y>l^eqAUcVrgtPo?a2[=JS^@`-6U;L5FuH>OP=i-jClmHjg92JT[i[2hWtY3h@5d3-^qVQ
%60#YQB&cTo'Z!HV$sIT8h,(hdp[ioj.MZ7#nZ3Wid<kQ5L">SU?/n`/2%3dS4gR.fO(f*[E&Qp(#5nP2=FNpjk=?e-!1MKj6]`%G
%db)PT3It+6nYdV5gFnsu[h9l<"qP^IY$9CKU<&8Q;->%/MWe@@''pP<[lZ_"?H;CC_mH<"KEKm6>a:<][:-`/#c=@s.`43SZsLYV
%L3PTj+7r9/DL,-.C0ge/5J9R706T5&d5ms#T$\H52+f_G7APtL/36rN?Y9?`)&5F:;u]sTNODu-Qs^!'Y3F[*V])A\ngQ39nu)'K
%9S<#_Qe6`\=$9O4J+&0@'r.stN2G!HOq^sV(#C8'\5-"<s/P`!4s<`t=>W+H&,Iqc@%'>f(7iVR9s^WQ0D*P_g%,nDcW:Sk#+Z5t
%\JHHlq9[fuHFM?\guonX19d;gSc=)1+]"f%ri=lqTf4;tFX$qNXD,'7:p8b6)r<XM0$X)CHj.3/W:`G?0YH8eVL%=okXEq=c'`.F
%M'9op9k+mB1;olWi6&<%-;#A2BuI?G6*ofhk">*:m,7.72C45TXkbp&+;M!p:`b$=OS:JuHS.QOYT@+//$;JZ=6Fjr:e(cDrMgri
%k<*7):B02F"anHR&gRYNRE'PU`0>Yf>[o4i[18Qp;a3!d"Z\_i[!o\I(+IeaIe2Rc=<^q\>W99?'C9Qu/K;0sf2*RLnaKUY7Z9>Q
%rJop1VISl(pI_)sk`X")q%^gNNXu,bOiQNI<,oH_F<FIhX6+V^'K%S;Z$$Z/l#)KrV+pmDN@m5Y([o0Ig,mkK3sN*Xc#,tRN1^p>
%4>m$8lX*upSJ[n"T&Y"4bGH89MU[7%EZnOg%_>i_5aklg@P?u`.l,G`].8Zf&*1i<,YYqab<Ha]9'6Rh+3_;JaCpeVaUHL3(G5DK
%QJ_:rFrYooN]unLhTGeR?82X9C7*&lTr\Rhr?t\BS-GDD7jM2_8T(#h\VH,%0hqO5dg45QB,JJ;4"2K'b*09!?hg^-(2;5bG-(mX
%o?)*K`)nt(YT3l]]bnkO74O7'=?^\]9s=3CHo4REP0n2^(`gUATeq4renRTG(gbI%2/6-::?!rC^SQ&l]m'8<M!=]V%sg;3/d^[R
%%rNl+U/#MT\,L>E^m3cq5pDOf-RDfYU^.d5GD4o0DH;ao4qnBZOMHHiK3fTg+gntJC\2;r9",Veg2/eCr;b+-m!AiK(GA'qU2Os0
%T"i0rJdI*7q$aAdBU=AI,CSnHSS6bZo=Q:X(hT[$pd!&RdBh:Wnf(,3k;..l:Bnbu7.\%^=B];-@uR_HL02kGOhQc/8$cRSSa;19
%p/+e)mlYNQD;jsqF[!V)opa?dFWQ-f4*Tc5l9b,<Vh,--CsrF;5#W')ek;K67R]6p:J==?ol5;5\tH$d^dA:a&&u!=edd:I3<78Y
%+PWHJ9H24@SO\Z-ZDfiUUFJaDOeE4\kt[foYYesOU9CCR3jJgQd=T"Vg4[*s(hV[uNt5l;+a9n'XFQIB!NC`EItU^*8:nH`P`*"L
%WqqfICD^E;+$'AlYiNf6eP5p8%%lL,.UHo;@<*UE_i!;,C2M51'Y\d4,Y6)R:WO-#Vq77G&[e4<*.JMF?/1V!^)TAXAsZhd`hD%)
%%3%(9%t,'\rZoLM]9T>J`GG3G!Q)oqDH7rogcj..Tj*H+58h'?5nYZJ5J<)m82QJ4IZj"V6TVjX/2J'$4@'o+nM;M<j\E/[a!XE+
%_dE%qTi>q(5'@@q'%G:X3mj!/P!]*>K=R*amdj,)T_7fMhM3FJd&aHG\^1Sk@&&.Fml=U:'?;Gs&Etp1*f<C]VcrM;R#H9Xl_fE?
%_bnjn+#tr>lp*Nfg=;7I&q\`3:7qg;h>??H[eG%-:R<=K2SINAW!^2*"@2r1D?%Q3afjFd7k;hZ[q`YGL(*,8#,U0HftTt6$F_8O
%M]S*e=J7`tqe2Ls^UlH4V6/?+CgVUL"eiV*:AoU"e06@9a71(G`?M>UO[K3X<`gnEW.JPjmF&6h(CH-D*B0*k?*!0ph1ms>7IIn5
%V<(Q)!+>ZX=lV8THXS12[b"HcgYLL[LcbATWjV-Z)V@cL&Il4sD&95;V],pFkG(3B258nM(`r6r'B+Qj`b1iq;<%.%QtFh#1\`LY
%l@PFJHb)ciqtM#9f.]7I,d\L4BT/P"-fhLFdJ=q<-]$r)!dS,>F)6ff1oB/2Nm(B:_DuH^J#-^dZl@7r+#k+Ibm7sPCqC:rA*NUs
%PcY\-?hG)2C^a-cHq6]5I>D4Q1iN;p2tM@)WgEaV`qWB:S!lL\HuW?h[Q)S?!pri+/Z\[\U@t6<'8E9FGTiL".Uib7;B_+@/;D($
%oK^YC-(`#`]=WH*oB]<0b%Q^hSOB/t18!U9:;c&Y2%s:/%PRNcBD[,-aIGBjWLVcSlC"K$>j'EtrsXZa?W,kPg@AK.]Q,h6A/-hc
%55Wh+*t/hFp:KKj(-X9knS9j35Lu:m@IY?:bUEdRIJpsMd8Cts`;QaW[oN4-]M-&:?cq%Hr45>2-?s*;&&4]=aMkc3%)8+Mf=5kH
%GMpB]*"q.h/,@dHHs5@BY=0;j?o]._J1k\o20X&EfJr!Oe&EinSk^3;i[0+#;\`6YMb"@B6s+IePLR3_q"5977a`s%D_(TKK0QB'
%i9I-kq.aoE_V?EAjWS/te]44FV)tYT:R?s_>\6&TLe%9rhAW$=N9'$<\)(R@SQOo;hCFZOdR*:a<F%dn9H=Z=-R(Dl:EIRj%BRV5
%_f[Ssj\ND9_L7Ag\RI5kr,\jDd+t%a,GQS#,I_l%3ZL_-em#cPN_\MUr!uX]Wpm</X)P1\B*#!4$XJk>r#Ek*rL!ZUG(:Y8X38OZ
%!,i\anluT'FS6,EZ5;ANAR[KQo>7*95Fb3rK>d057Jrmc\!0F%c3n/P/(*)*ds>c<Z'/KLDq5C2&(4+F&Z]a7^YKe7b+_#(B4u3S
%R1_esWUUaBRC,=m4-MgkUuV#Gdb$R=Xf"s8m/GaG=^Fne18bc"0IZtsk@Wc<34uu[n&i)'g./Dm@:R'C1hmbQmRD(Wlpap"Dbj-c
%<ATL1f]d0]o=2@aaK9g_EbIWa>M7ll=h;Of%-#=:o2X0#lZsbLT&6HOQ0^8f9/QC4I%i&BQ=P9I=68JuEgC!LW/p-jF6?%IG0Z$_
%#3#E),0a*uibUQZ^7SX_`K`u9/ldlnn>X@JamQBBD2nNdN;:fhr$iWlcYo+RiOR+iCH.iq(;P1,a`)LnW/ia*ZPBp[p,Ejp4hZ+K
%YJo!K@dKD(!QFchPt1a1T33l`k"k5&dTk\uXk"3!'L<rS088ST*b41)NRVZeJQjd](M3*qV4BCS]jNk?*/%DeRePdkFMSBh*H+Ba
%lfW>GnAa#-<B0Q2ILSe?Ok&r5c.E=YXo*I3mE'[ATC4Fdq8&mA(72Ij_U?I%;cmY(]4#:NKFb+$i@l7`$pTHTb2f85nBTIi*8]L7
%3XbC^mF9#MD0A(4LomMjantnsE-eLq&C0@op;;ZDSVM1XX>:q^NXXq+S@82452BFM%Hj(RD"tXW2o::8M%IC3DD&h.K@d['NOb/]
%h`^GXEL;NN90)olhL#UD'ZH&Nl0=uSY2"+7_UZeH/mL?CI^lZ$*/7\&gUFD4(-Mr<Q*9)^r=/16/tCGrF7Ys@akTd'IVE\rIWINY
%T%mi<,/(s^3T``aRcE(b((;uH^;c2qPge`Z\ZK!2@;^9lgRd0ghS.5\lPG8cbgWgNQ[R(9kAh)gB6.^N'4L='H/>.)lsCLjDAaSh
%&9#k=4Vtu]F/9W\?/<YDF2fL;B[(`Bk;ml7Mo51R0;\KT6?cje8_C)iY8X8'q+*e4S7hY%AR8X$fB8EbeskQGfrE?d?bG7?VbW;u
%jpqhnAj1FpfU:&MS."r-f:C"\mJQ8?r1hu6S(I47G@%Hf>4\rQnLG#(hnDY4kBfklg;;Xu??K\%,?\5QIlaM]0O)T$$Y&n:[@f]G
%^FednGJXa0'YD"saN#M5-gTCD_Snu_BAkli4'6a[]ZMm@Z2+9NlH+$oU%-PM/9L^ndDbV+?jDEh>e2r?/ZoVM*u<O.Xh?.Uj6MWX
%Vb=X[$)Um.4K+n((Jg'8<Yl-aFFWh(Y(*eQe82cL<aH5Lnb)](^Y#NO>>*q4-7g`-.d'IPV,h5#OQX'<@X7ZrC#=`M^bACddadm9
%a\APD<*\/0=h6[Z-nT.l+Y;/cnU@I.\rJBP,-0>=9>0Z4E^\ft=Ve.]UWZm)>7\o6@oHLTSeW`uq1me>j_JA&ZhuYYT.F'?g\'Z/
%0)N<:DsZq$1gJnn$*QatlHP3^9!OYP=/EZpc>;=<S3W$<.CKUW.h<.oH)5Q2afRB5N3q#/*7(`>-hQupAo^&L.d(iaX*[XUkj#ug
%WjeFX2Cbad8'1)I(GgHOC?u^UR+8[C,-EMphU^;Q9DA$ndUVQZD=:;7X<$j>qV(b.WNG!FqU6ADX:K(Uj7.T#Da*'^YHHFtf/^ft
%?Jdf6/$5^UR-OP47]O"JI<*eBfB.C;l`V[.FM0n_+i>uQ/'mgD%5*i-h:RaTpD`@'`n37$pZ=DP+7oD"q1VU_Zq?>DaBZ@0LdW#&
%f->;e&s't,hl\3Ec)MYl&g-nibJX!EU_1;=7g?@_-G#eY5D`!*V.OhahSEWpa&aeCdAu'r6<$%\4H)1Zg<ImQ,CXtqEcFt1<%@M!
%Ao_kc[!<GQo:'rj7o,U^NoK2*ri*i;XMhRcrc5`hm"no#3U5ejRB'NVROOg!,1D9tfu<;M%YeEFe(%09Vm'?;ZPmo%?CEXiQIr"T
%[L_t2gu=e8kI@)EF`,f)2n@u0dk,dM(-US*H9p]MEq@KPC9#YC-"6J#:PpflHsTPfnW2tP56%(P.Djm5)$@b^S,MEZYd5o7#tMJj
%F2H2U6=8)X(OAE/?g*@4NO?L!?H[EL5r,u!?>c@:MWIBg&`5LtA8,m4YpV!ebFt.lC_ii+7H%B!2-66pRsM[lY<</SXKGSZ\AB7K
%*T+q>]3I_+FNl\R=2Dl<jQp('5!80[a2s"-h!K!M.`V#XX#ba=c`*F`S6$@s<uprr?/J[ioEF`3AU>Z1B&&uu@[Xb\KWi(AfWAKK
%`/N\N$AR5;3,Y0h6Ll8*PtEY&[Yh')gfEP5BR-Y^1"Y1(b.P6tT6rN)oC[-I>>lSD\)43000><0gZ6ZJ>%Mj><3)@0T!&oiG</5<
%^UnK)gtgdXPob-FO4U\LcZ^aM!kTJJZa:O*,TD*BVqoD,ZVE-fVe%baHej^ZmVe[;D!o>TIX/]4Z5DH%Zl5K[q!#$qkI#X]T!$l"
%in(U(CA`3WX!a4B)m9S@I*bJ*GF3:-.<.&6k]G#60MF6J]#H,X>])K'kkC.$e^D96C>ic$8]bVC^!tG41n&a'Y/aJ3Q]ja^F(s5s
%-^;$ho]8G"Si5/'\!c@Df3W')Z`[n8ou:R?FOon$KO_&E#@^)H3lnIqi\1UuMrg.T\+S;>+ep)+%o`:Aj7&q;hE>\W2/Cm)ipgnE
%^:O00]t?!GZ`iX[pLn]bSK@1`oBSo#@f>hqI\lKSYFOGCNd'o_Y)Y/W9nhM>oQ)NTpGTMPbi(q5\\`B7/Q]]uIm$qG_cJ4t7O!+U
%]JR-^f>L_bFBu'":ZG@Lrq'Ba5<Wk#5GZT!-^h*Ce.]`jh9QNgcJI!/jZHVrk4@9>LI(pMs3s7D5?8$P9#dA_5>tW!@@6ZO]!Qdg
%ZC,>Xp@q_bi_%nZ]4daA*YgU+V9?`lk!c9=FLKmPL?BW/Mb7u-]9nY]S/#i<C?]c@Ho6DA\3H!ZhA,b10>#3*`g->+_d8n`G>GBA
%9Bk'oeO2]R@BSXulK.]0Z8d'aXmW')Ur17)S$VdQXd`MSUjTfRZ68&%*\U0qO8#/b(Y4Q1?*'XP].7d;be$o%20[AIHY`ArI-p14
%nl4=k=PYE]+-MQ%h8;UZZhkSgN%Vq#O'ANedc9G7+noXcS+;c98b5_jiOeB=+g5087kZOEce0%6IP0O-f3_R4m,02CAfEC!p\hD+
%O=`V/Hi$mrg>.4lTFJ4&o?u2Y5$tn$>ieW7[F.KH3UL1i0]bW^]e>kq=filbe6XZgAYr[G?/;^L_@\$Xq45-NhFqfm<;FG@EqSeq
%Al*>Dp\>`Rn_)W!@Hk>RkaCBjJ)9%^k;QUHok'uR22$b8/`ZaaG&O``F-r?/9)3N$[ICEWHL94f3t6>3=_V-;ic:ggg<lADl#W\H
%4(.a4geDRn[D-!\[@XnP;1!RW?#HR,fnX`rPM%ZLjCmF53omKhH>.T8__GfqSUBDlV.6Z`O'n>6j^hM@]?Y/4h(Tr$]DL!rX7#SJ
%I*c)'XK);=fBWKsW,,Dn4EmHQ_odD9fc6)kZIo[aDh\P1o/is,K?]7#.eE!H&Z*L_F.toZWHG;kU5&[8,g?msTL[L$2[Q%SS="0"
%>jn+54_=WD[N7%@FZaCQ!=fE<a0P5oB"Msh)PrNSRteOto?mMj^=KH#?#%"0IHT(IXEu#eA%Da$3[\N'BRi*A.!E!nk;,de!HKYG
%iU'cqUu^KeZle71N#D"PJ2q.*f@P?5b0YWZG-QsJYc!T6eO0;H*jYP-6Tr,D-IiM&<nH*"Sq_ZiOOao8eZG#3*;_)>U%RoLog0H3
%a$"Ve%:/Z5@JJT`mdh%i_]4=j?uR9q*RZMi-I]2Tehj-B1>:<-+j/_%685W:TFLgSqBch)lQLnN;:@j+c+<?S4S9.E!gBpMrV,fX
%1,.['4%2',4_!!`p39t8".6K!od45A6A'F`hu"*-j3<Ta!9J7Qk^9h.jAY"@[4Cj2^6A7c6bN<D*eK#mU"<%Y,:Dt;&tbaYn=^X_
%gsL1qQ<)J@+)f%WW5YpeU1ZT'GD?q;.+Nf8rW@Oq;6q(=NfCJo.-AE,<u@1;+#7H?It8s-*%MSs:PQ`Yn+30o*ud\b9h9oK88h%K
%kfHm'/lL"^";(W'I''Rgl[r6;XVji'b+Gr%oX;4WZ&P10B*[0U=PLp--<,KBpNYLr\WNPR,[3r%2rDb4Ebj-`YiHKk"r8l]UYj:5
%K3B0Wp20\<7=T]2;Mtkd&D4?tC]*ZB5)qfJa')2'(_tr5N%pgr_u=gR+9)pB*jh]oIF!nYG[r7014Kar]b#UOG!U+AYR1$5f,"p"
%%_3-U[gkZ%b5'+!Cm,h"&#7GuNfH:h';^4T#(4NLZ5$K2NN1t*(k0_0K!/.&8_MGg3:W1OPFRXEeiOfa!i;`'ZkOXpNgI@i8aGQH
%5P/j^0+#a)(dDVSa<TP])FUk!1?\]m`l?<4bE,a6#FYY$3;UIm1%tXh'20K$V*mX;C['GmOne:er0X>+Dm3`3<WmodoV7O=eP^rC
%bE*1H)]5SY5dR1idOdG2Ct&f=B1r!bgXeO1>M@?A&\iE'8aLX3>4l""*BqW!2cc6.L)0/.8=,*GBg/tTH*DW>m)<uUb:!2C6!;L/
%\J&P:'ngjel(q]b[1-_VJ*SPp[_KN'l0\5*\P3oQIk)?'3`noN7.'J+\%aNYKqtu[>>@V^bI)P(jXR_nTUa.U`oOaaId6S\+l#LE
%i[lt<Me<FrqYI?O5KKXRL$QZmF86`/8QD1RdR\*\Z<ENscL2k7`FSUUr2;GYlu@NeOa5`CoqJS]eAgJjZZ8mA_D"AaR29hf<;#cb
%`dP=c=>`tE-gU=Dl]]E5;Q@t'hY+GQQEMl,0^2p7WV0l>Vkl?-]*fu1b3MC,&=IH@PIT!i!uOLU?!/hYbMr=iZ7\7XD9!IgV=hdk
%`X?\<?"T8r?u>Z'BYM2\/o(poA?;]0\[jXTbA:p6f3!9S),Ebf7!!?d3RV2_(rUKLV)MpmFar_UNgm`1f%&f0]Nni]Xm_crD9Au9
%*Q,@;(h6j7jj[/r$7$uPlgcpZ<+8=;;Ze>P-T`i@%6`+'o.>lUgYCe;1:o]!S_d13h"OHQn"ohc3GC[ZDdQN4@pEaIOjMp$0*4eY
%db6g`j^,NacJ'bIh*baQMV&,Z<QQu^j8;J`;qkX$K\,\(3/iM,Sd6'_!lH^g\ZA'1XRBc0m8)Kgl!k)c\WM?GW,]:O(+f68=l8%0
%DfD\hg5\nkH=qT*np:.#[->jQkaa"fB,JEV*4]!moVTF,ls([!/eFBe:8FJ<\8e-BORAprEkIcc>u+HZO5JBS[_.]`8se_qLT0Im
%Gd1TCa7B]#PB`5Md0/J"j6\ta<4PZZ]^-)4.9X[VZdu%/7nm\e]8)EpDTu.gOKK.W!aTYcI<U/+g<pU3L1/NVm.s^K\2h^uGJ!N@
%+a.n>8$o(J7TTX#Y&16f9_E+%RXWh%d6").P`)?A9u"Cu=NRA-Ck=Y[A+8Z30e>Z';T[_O.e`&b`M<Fj]ekMO8Vu<Or_5>10Kat2
%]L@hTYc%aBWh*?rlDu>ud`#M'`,)WRoPSl*dITG(mS#0g\DkRM`1N)m@WU:dQOLIlEAWr/Pr1W1=B\]3Dlr'pfi-lUPH5fS%!u6Z
%A<N5//W$8JoPfn*8itWGEN,Sb\P!nXkBDY-J\1cqNII0SBIrF&f(h5WjCbKtC\.LPL[iOVBqp1)R4G9%qNc(],a5?Hc`AIQSfs6C
%)7e(7X7P"3O0:,u[aYAN^0!fK4'CH$\iXq%XZ\pCj5K94DXF+s>\V.b01W!9@qR)t&Z@<(9(Cnt=kg\@B!k<93PU,R[b$r>K.E'Z
%HG_l,1.tO3"r'9ue)eU(Ou!/ZPbr&Hl)":=*5p!jjnM9NZUWuGCPNH.QNd2Z^(u\Mh\OqUL#POC#N9sC-nh,;F)OLu[tLh7V5j(I
%-f:)+Oi]_hL?jL)#f(9t>Y?UW?$/g@&K8BKLUqmCQIQ'n]hp?LJ0<1A_8U=.eou<`Sm8[aK,EbdA1ifh`ROGJ@3i1M(0AUX_G+mL
%D;c:,p(nCe,:8<E]([1E<q_J0@K3@7.H_4;0%eV$AXm*70;Q//Kr62CONd+PVd6NKG)+I<Ys!8?-+W3UYW;-da[.:-r0kD,R3[!>
%Y>QOaS`A6@Ek=D"&n)*)<.$cjOi9lVJpY5tU_./W,;eC),it&O5cdnFO>RFVkbk]S:4Lm/@uI#<FRis;A.lrm&;j\U5u'#'EEXc`
%,/Ubo2/a<u@ou>_ku"4=YE$tkAAKoqEmke1-&h29d^5*UG*X9*[B4LO#R)DMGF369)c)*u+6keh157Ud_[J!3\d@K[&LWMK;>DND
%6hp5d&lS/E#Mp_F>M,k#h,/q$Tj"NhP><f<eu7G,gX8Q[7f_:/jIFD[B.q/gCND:4?98q+`.K%dm!)b[o%>G%%_4,!j,.hhLf7A+
%0gCX\s)aF\^#\J*W/baX#Gg_+VqPG&GR6,4,<itU[bN=oh(W<+Wm+7maHFmZ.W/u6*uYTN3gp&kdNuUh.N/r^>T`p50bU&06JHZR
%+LA_B'R'/.I'Q`0ng[:6d40h@=5I6heTa0);6:j+_KjoS>!M#cX5eA8T4JtOA\WKZ$t9fM,V!:AS1ebmT)6L7r@K?<?;Fqa*'.k>
%A:_lXW(^X0N2#jhTWrC=Or@Gff;[bh<M?'G:.WQi'<^2Q/[sfC]3H].2\qEEQ/H:hSWjX=N+*h_E]UL''iN)!DZW'qi`V=LZjW5j
%69j3sYNIfFr)]AUI<DgTe/T:*??p.BOM*<]`Qs^(4NVF+XK1HH%@!iZSb[Q-1(\`3I!H<j+-%sO8):S>;$>n<iF=cpI!q#8ZotnA
%`Pt449^g[q@89G1;Z75M98i#SV8^Jt"\C_EdK6Dio&ZWqS>r1T$CaNa*`D:q>LH-`H#E'Lj(`:EW<C,ceWORDaIH7dho*hrWRpJ!
%V"#pODH0o!2+W/I=:i[DM_&479UoD,9:P8V\'TNp8>/?(e:(HW+g&;7KABKYZFX\.E6dpd5QZ/<S?/pO-9$q?SX?N4^SlOV8cu.Z
%RdmChN+oX?nqTU:0If;J?&"k\qmMJ^1Ds88/F?X'meK0JY_e'h=!%-P")=iN6U+<I99o1obO_m*3k1HU:pm2]L-#rAL?Y:b=!*03
%(u*KecG2*rWTrUA!CZ<KMHd3Y/QX4Z/1q7/'uZ]PQQ"o^9?oX_Y0CV-mD01>W4!D\"L^6)2X_BkS3'?5kP'OsgX`@[#T2>L`m7Eg
%=..QQ`OXp[]Xbu%NBo#>jGlkRYEBrE:2kCde4m7J&<<m]*]uYKp@T7+2+EW?NK\KUr:<q7H"5KlGtKp'SZm=SD&=t38up(lRW=8e
%^[q:G=;6c4rU1f]:7t?r-gjCKfCuGT2eRf<]YAT:3sR'D4mXPF(,$Y,?9pM3?#KZtX:dZ--1%]A3#rI38hOLFgT1&Q7+:E]KNK)R
%8HTmM?M_4MQM.d?Q_RMYN>%e&>Lc%=2.!rFDIJ3#PK>rRo.Z`QL`<CM>92?lCM(fU34iU)e=u!C1pqjObkmij++#c\8b&WV8^Ij;
%\hQ&UFQ48XFCmDfgrcG24)TK@p2TI_aT1,sMJeGpj$`=G:.0uNfp.R%WTZbs668pAf;t]'QY@i7DBbHUV"81:WQgp7I7L*VqIX#_
%H9m\em+EDTG3j0o]d)OZcQub-]==s<dZIHOEAlbD5hm0ho_P"UV3Wg]qTtn2L&!Z=5Bd!;CfM!=[Je`PL*gKNDl^fX9A#$><IB/R
%<]VMEWV,%9AQGIon!?=qG?ZN0F-\%2L,>M9jq5V0Nf,9+hY?YA1KT6pDf6ftbd8HjeRAk)`9@a&A.TROj7heY^:?:h7G6M@g0t/Y
%X#_X&2G^O9`S<ZRUDeDBrU#mKDF>M`o,!mW1#kj)K%@-W:cDA)A$&NgRp\1c2+Upm/i1gXp!)Gm\_X_1BY"u!Vc@j-!pXP4=%]#e
%PWc\5Y[O2:bgVFWDir8$WNH_:@nX?`kL"78>b(G#,ggE_<A9l]S[9=t]A;B0W9elnCcnF25a@UUF)<HD6&ASkV761IGEET7hCWB'
%]$uNP;];-=.e="bD7gb`Z*X$K;&UHkhUrOph:O16gk53o:?!)/rO;M*1>b_C4"%`?=CtEop8"11jD"1"cV5?)B>'G:NUhKI>JA0+
%KPRaj:A[iY@9?3jo?>A)?;<Y2aRnj&fiDVtbjANd3aRVD;mlEk6&p)^8P##'233ue%O/<\DPHOSDm(cE5,46YVb<M'*Ih71btTW>
%/JKtdo1K8FE;^sYo\(s^[cMju*q[pX`#:h,&3F%Xn)MCH;V5V;HWc\Qc>ICM[ZRm_ZLd`tN0PC.B9MdTa;t#]fH&232N"6`B!g^$
%2WEt1>ZNLmWpl0b!LjC-/./Nf)V.feOnM8l:"u=9.phU#p:#6-\4r3$[[Es(2"X1G\UThTDW`V_G92G!5ePhHT9%,eoRRG"aIY_D
%Ou@"ZPkIgV+-4LLGMpU@4B)l9W^e;R.cJk#l>=6W5JC\Ze>PILVj15XV/H'O4CE%W&G49e2(okP+k_7BMj2DrHQQ;`>sC2R;cWLh
%R4><VMe_[V]:Fd;gN00G3b1'\!k9Bj4&'TVUlLMF2m"'[4"iuWBstU9M8_.1*3EPN^d:lQP]ehPh1W/f&Q;i7\bIck2=mjkS];*H
%XO5O;Fq,Hs6_:Zu1!&6ap6kn9.)'!0K\&+aW,jW^-C"ZDia9JCpCrK;^UCF_'qfSEIWDm3p(rLmn8(+$AQH+=\6=AAS^4,&-\]cR
%7t<R?Xk3:B`1>gHV4AXC-SOp4)hE">0V=<A^PD^@Om))o@1[5=!1V1CJ<f9S455--0!$<Ndjr,[,K:F@=C+[>j,PMg4?.@CI[EGS
%_6$ar,AFC*7hmSVO5jjNClL'L5&se8rGGL-T`_fQqg5W$JGS8'>2eDu@.E/P!Ma?;.-,h0o*?\I^Hh?'ZIMNeBPIJl'g8U9;oZF"
%D4$a!eI;hj,@M06NVt3WZeX!Zns-nL-QQL@][FKN4YF(K1$@*_mk'N*aubl'B'&eQV):t@pAA>?0/V^C;Q"7EPajR39=3iG="8dT
%5O?%nmcgi4A=..]>EcPAcgpVCi0&H%^kgfG[Uo)=*D<bIMG5PkEjDX(cO.s,gXt^^SlBb%UNPuM)N&9IQI@/O0_,NVEU!<SXhA9.
%'!:gQC<^oRNQOid:2`DR#'CD`L`5B*ms)eTVYU^Y4C!5cF?Fp80%)#4^35i]1/!7[Se))4.#"<:Vb2/bdTTKjS4:uP`9V2f5F&@@
%pJXR4.iI,<c!!2)nYXk]),n,]PRT]A+5uqYLqGW)._2rCh!TOnX`#G5^@htNB">n/_>.ckB<q7:gI#l;E!'fI\JRDV.Le-d:L"8Z
%NHb-Zmq@@-d1b#EJ0&W#@ZbB[_ch&dP,^-Wk,&&sIjajCN,JKI0qL:<TTS*"*.(jBi/Z7^Y\s6d2@iB2TZ)WHAQ*0DO#Q+A6*H@4
%&0TBDC,c%'eXO,!n^6B$9&G)do9<ie">9g-gXQd%P(ua\<]XFlH99ua6M5JGR!J*a7PakaHI9L&-P:j5K8iegjC,IQO44m]E9#m7
%:+8B&9?$[KW[9>96]oS%@SZiA(N(a6fkO(lFl;Khgr`=An$h10nbdh`G1%=srbeGU]s6ikWgqQWWAS1l/8t,o4agDVVVROb5q.?Q
%(G`L$C!Hh2pBMsq=[L<hai0UabtMj`-ek-ROG5;V;OM_+"BO%3C8.u@*O4(Z+d+\gG(i5eiZ/6.,,7m)HnHSFB(2<b\e7ZdW6f6'
%'^'=)gZ#i(?^SA?C%lJP5o8*#k/?h60"peB#fF>\bA6>TH,47n@%bkihq!fcV&T@7ghulUi:a_Q63=%M7Ur7_.`h$/mQ`amAEK`V
%q;EA?7!fKLO5CR\:2W^i4(%6I<GbBqq8t%om,^]KO^3P'qYXeIFVLu61_1@BLR#%!Wc>=2A/96,Cl#TZN0]c4\uW5;<V(4$1n$ll
%^?s"6:p@!*4;^IJ:\!JW<Q-`p4ArDR/e@*9Pd<`kW:Clt>FFZ6X4T*b/tlb.**UM`KO0hLH=e&hckYH6>ll&2+E"pd2Y"l0=mFDE
%SbHuLH_DR*Ug9O9,4H?%kE$XTA<m`A1P[QkDLr5\H6J_<>+ZVqTpu"7FLebU+ib4u\NLneRTi,G5@YnHmH]m!b55C=O[6XIPb4X)
%X["&D):@GU>gIZ$Z`*@DnZDbla30.kc5,*_A*oDr^-JC&^ZeRId#kM^,9#=PZS+sGP;cNe8"HC5-2$QZ>:S>AD*b:0G@@e4q#9jf
%Rl&"Vpk2gsIBEF5@MU/)ZK-r&j;JCP6Yd0hJ]lIB[TaPNhZ!l7O]`$^O[hZ_o[@=<4'%)CT8rAFE?<kt<ViQ[5#TlRa;+/p)s_;^
%^:;Fpn:k<F9Tp<5650qb%_^o7UUAqPB5NWQb`2H*iLsUk?,YWE72ip;^Ca,!dTSk+bhBg=N.5CrKKkjIM>1kr,!p@I?iIN$YX@bl
%.+]eY']\$KW*e,ebbd_3OG3WAfTtllB0a4R?TjD_IE!?C-9n&Ko@kqu"0[0kWPgl*qCuPD'i0:(WeH8i;pP65igb/=rSUq5PR%W=
%[e&P*;2(-D$%HNRj!92pT*4;-F,Bf?0I)AT?G^(LAJG&^@?k?m=,`o;aJb!pA'qCV6e=<NYKmH2!@5aD'G[5&UPbeOTa1m\B__Xc
%&nQ>+e>%iNLBu4!ejV^Om!UC:3$f`J8/t,c=]UEc/>H+--kM>l\%)K>Ot?_V-'hQ5Me"[=)r0T#aG"s3Ft*64.h_rBZ)1sFMIse9
%l"8BeY=Ec,$)'@ufg9!1kcrd6eugk&0',t!#V#Q/eFpF]MInE*eF?t6>PgTL@m<5jEK3YtE`A>>DC"L)ob,7T&J%CGld^cR2g"sD
%k]X)-%nA8Po^M$ZIl$;48<9WKk\K!<9lDlNKk\6nFD,1tV0n*P[XkWY4s+J5AhiR.?:-3bCL+'m)fs[S,'Z\=nffT>,*EcHgYmuN
%\3Q?gd,oum0<j#_#fJ@],0rg2*?GKg<+_mLVfEK9'DO!%$7\Ki"$+9YXY,]J//fQaNa1PB5og6dkY9>kF#e21]k?u,I"UB\C]"/B
%_TCSG\;lo[S.oOZ8bpk/5"(oda[e'n76[`/Y`)"M2C_;fTg]&d<%0=a)!BPMJfc*Vo2,NA.U84'#a,8j]+_]Qa=8_EA78c.rNmQ#
%1F0+C%SYqkd0'Ll+Z6:@^>Wl.hW<#)#'s3l#efEj]A,c<XmlM'#9tW4[fP7d@Z))=3Q@i=>[sRF#[jhK,@[f"6Eir"TKoe"PrM2B
%#qX^HA:&!AOMsJ:'&jWdWj7qig)pgci"32gd!1-B\Ka[m*,61DN(K<8(W=GR,V6)!%OhU&,F2p*+WV+TUGk+:8o`cc)s6b(1+UFc
%`#ue1UI2A=Hp^18jj0LX,J9FgN:`,2.Di=OJiG?e.[D7[cS:#:IpcfcK354)YS%lI!@o>k.T;$?#8rN$$5-l4OSl.A=d1m;Jagcj
%.Kk#,UHiMU,Uk3^N//V%]#[G[k!Xe),oZbXD%c:@W.`8.=?+2brBVP7TuICX/+3SF@T:?&X_cleTWA3[O=ETq,03W4,p%mZGpoZ-
%QUFu=4:'dM4t#s%huQtcJOEA4BR(_H:^Tg,LPr#7668+XV*W2'b4*J&KU/P<30$f\(^*;A'j7n4Vm8Pt8hR&C<DUPXWsg1Q3D;_=
%-41J<h?l*T2\Ets'p4VG^Z,/V[AZ6=JdQ`/joPo+/)smmP=WWF#q\MDTrLsU'hD$X3%tj\UCGNL+-7.W]E#n[%=lDn'aP':NNdf9
%4B-dZ#f$m"MUXI:XV>>9TVb@;GMlh-3/Xp6-?`&!*h"ru,.rG+]*)St*#7iSdW==`D-M]^=1,&V!WU=uU&q^8P28!)#cIA5-q."?
%m$OV#:B?bJ'Stj&,P[NnA/2qc4:s0+eCUd=H(o)"XClf&>+XpY=[dHbc_ffTgd0?Y4K(%t$KSF24-I.E.m\!/a>,;gkiX'K*r?Tn
%H&r]#0Gt36JHQ!%DSR2gFrZb@.aOkYJjJl7O@Er(ki06G6$!<c\Ub*CTWj%;O>RJ7+Z0r;iqseC@_k[`1F8HsPV4^%6*>T'<<8u6
%ajs;V"DB2o;hDjo'Es/!L9!p/4k+h]/40NO@Bl4#NXLQSD.F&&Wq]p)bYH0<&t0ZTOcGU+#eVH3"q=V<a-L7i[flB3g%1:e;\X6s
%l$=8e81nDQ#tdnq@L5)N.Pd/p.2K"?6!bgnA@R/$WVW5e/Bh!7!J-SFA.T9'"I2s:!kPYX>De-\!`=l+7>-UO-m"O$1-3JXppD)u
%B0?6O<KK);.SjJ=d1(C5/5j9k82Ml],R_ZR=@"2_%R;=@ZK<L6jOQ&OE;@]WeBl?QkiUV!q6,&U,Y(Zn+<M"?9`g>OfO0`05]TiN
%Yl\@&'@Fs5N#N=<+h#4%.]C,gi=0Z>38%aD&>=-LUCbb'<H&#L4qqXs[n>;E:e<qA,*<;@-.u0/ULJ8c;n)sfOe.nUU(!(-OQoZN
%7cuMWU?^Ym0Ito,A?_a5d@[L_&c;dEb1>RiW&2t6&I#3HM3g#G<+3SJXij,+%'21rM@2*h0eBItTXlO%0_PPVQXp3d74T$K@PC(c
%7jB.J_;NLEDBL&^(=kNs'8\G/8$XNE'o8P,%*5M8g,L'S+KP'DFd+mA3tRp`Z<!`V`<kN@?nJTn5lb=JqD+4F?=3jdD5oLiCrII:
%pB;HG4t%V[H_eYhg&o:sc]_q4*YjtUPo&iP6$e/6N<C@:hI-InXU7XH7#<l>E/PG;1(-RhZ`5;c0LoLZC^l[=)^JW,![p+h%?ufC
%*i%Y&jsgJM*A2WE`noHkq/9B68Hb9Z64V-gE!bMNkc9jr>K4fVU1M2(";Qb>-7i@^,L4VSA3%WE^p6A6,,:6#":<\gA0k1UEAMG"
%0`hq3L[X(I9ZjF]Cmi?LgdRJo&k'*!PXAIq(mu*V9YP3I>ZF=a&F<(&Ll=T\,#;GKN'Lf'M=\$ggE*P=OsP+t0(D!DTV*VWb*">P
%"sMt8,:&Hu!p:C1Z8.S23n%fr`i]k_GG\.5)e,ARWAKYEEHIV7"Lrt-.-co8J.=)m@-,NH&ep1uS"9i"OC/rh-rhS\PZtQjYpZ0M
%S6<'/EJI3HhcLD9U;0"o/$UiT1@4<^]L9pY5-VtlM#soLqd)*j-a](JYk$!;,VQ6krSL<#(M?`;[$FXX'SqAuhVbu<8;&.C-!Mc?
%?5[L+&uNL9"j%B<,%=B!79AD=566s8:^`gpK#Ag?=O%Cl2HYl*,@^70;$<>XB]Yc@Y]cPpLj(i-)o9R[kLjN)*%!k2[\M28-Aos0
%*Ae8$^I17V\4CmCi[)g3lm.F?*5l"(,Xo/D'cb"e4/>6FL`m!gMB^_2)6>#_iBhPeQilE+4=R=%A7fBSjfnZucj\lb-cn>M'?A`s
%KM8Jq!KgVP^g)Dd&Zrd]8lL?B!i62b1b8h3aV)-?4f^]>GlWXOo+\B"/%gHqaqQ[FK`K+*!+`;h;&2PF>PE`jo2^.[=I__""cJa*
%&K[G-2A8ojJIh=Gj\6?Bj:ec5U]k.YM!UdN;)jk2A?]B>BkeJ6"A:#sY\:tT2&U%U#_Mh#\3(ma(IaeAnjj.-doh@F&:1Dt6Gu9o
%Ac''0-@sZ8Mm=HZS=OGGD;ftUOH9\jf`Dr<,b8r&3".g)'fK#/njFB!D?S(JFfPm]=c@%H-#fg9EYGEL>u94;NAWd6lEPj^aJ/Hk
%a")`Y/?k<_-"'<"YmXZLBA[_Ud(IF*:?302:D1c50#3"78AZPb(n;<I5hltQ5om++TVN=&+>o6/B[1(AQ)k_DL12,<0fL?i=X6)S
%'M&DB@5uG$*%3EIOogJ\c4:)06erCG#/Se_#^K@R^,rYGF1+>W[VBgEgh$);?_N@]&j]/YR.EQm@sQuo_<'N"r-q)06P&=\<#,'6
%a^*)I\"[PI@0j92T)]TF-p]Bi=ns".)`\XS6ic`o,Y>u^eIEjU(,HNc'nt_L!#716,NUQBWq!Sc@4&j$`"uA[PdH</(m"f^8e2\]
%Q5I>_2^G#W_V047\?A8P5RBD#6I5rPlr&Ifid-Q?-T)0!(KCc=PHc9a3H*b4e1ToQL?-/<h*@B^1sZ5C&gn9Q@&7T,8Q9MG6.r&k
%K$Bl:,;25LYpA"KYIgSLUOWELEl(Y3_H`/bA1pE736t3s(OSdFJ[_/uNDZ2O3Bk?=1n'$9a&=^M#'hq\JiYX/UZR7OG>pUmH*a7W
%*>Z:)jmq\p;=>eb2FcYS).NuhMbsI"Kb+up0FctD3[,_<O[O(887@s([EtipKi<cN:n_f_!_'C%<'*QH&2-G^5WV5/5W_5V"5'<e
%SV@rRh"c6sb2pdVb@01a:p,=r&aGq>hFFNZ3Efk#Q"2Q#]QIHU,+bYUr?rGpb%cdMMN<!+<fmG<3J$gA7D"!kNXPZ;'oP@u$5<eI
%,]HXSQr=\Loph;#Lan8['IrBFQ5#H*S$W"H&h0%3dBR%2=NqFjMPNA>>Nhg56C42X\tV/9FN/0k1L:G0/jn,24__`MThB82?#j-4
%K%iVY]hUO:RC(>G5AmmU3NIl%!jJE+>NjRrU?K&4SIm.(D4q>\$_>*L3_rJ:[*SuSL$nI'?BnPUb<CgXfDD&q'`q#p1a^'pa80Rm
%(Rjq__8UCP3Br5F:liHuf)AH_EM;4Y15QXre&Skmjb)Pr_@nGP)eF&!$._$`&0W!W5hi$/:a!sdTmi(,59`l5-2GW-+D4rlf7QDk
%k96f8;</ie=*Q8E]l>&(3@ZFcpHeHq69O62]2fIW=9c%SiHV[+i-@Kps%."8!NKqdh>mjC-/PP]r<W:2#o8W29.EsS07o06N#JFd
%"`'/ELcuBhT!b4$gq=#m)mFU?HY+7`-"PaWMSX,Y2@_5lY.,?BYUsXobgD=X`H&oE*d2?[Sd+/6JY9#DipK-AM6eOh]65$V!@6Fd
%.BG$(m,kOR,r-?,L<Gk+HQnXk=1k7R?A*p/*Bcs%*hWLSZm@`dEqscA`1/egrsg6N\5jg,<oS[Dr]I,0#`kK+Y4lu8kifhi"=aFo
%cVqjm&rCkD4D6bPi;Ob^;9bGYdslY06(lk!*k-uf3=0_8lQd07JsE/]OINXk@+S'p[BPIXEg2Q>\Xs7]$kXYY-U[s[nfT\gZ\k,$
%O)6MFLTA'Y8p\-AJ=;1BGZ'GDASb>(eo>.,,-q^D&L85#68=rP";S"d=kba*a:+b,n00=-7'^<Q/rmR'\-*s=B,@?F*iU>(9@=PE
%eH*B,iXhbN!Kn6#;E/-fpk]Tb=rfiNS--`rC!M=1+qXs,Jhf6;A$E$B;L&?&3)UD6KX"\t3'iCCP'C6_,YRn6ai0B$*`aK?oHtd0
%R7<:Ti1c.=P-u'cHeOE96([`/m;RmAjt*1"P"HQIH#0f181%V_!g<$e)3Wqu/.jGP+t,`3_38:1CE"F06,?!8$OS1.;M60l&?j&b
%OJl8(E)=p`ag`j4;hXWh3)HXg_9\!2g*K9\Q#T,ETL=fDo.iiCDF'B,P2[>>V-n:.@QQ4=,RC&Vn_=1tACB!.'uMN)&qr(b@n.eH
%0KEc;&NE\(MKj`'(^%3>$#d%GE.Z:G;[!_JJRlSXdnS+#Z'J,%C5[k:n0B'V^PWK;X_h)A-94i,mKLkg?@l"iL"[OKJ1:tA;i95@
%j^iJE.ZsWD5s4RW6]T&D/")!4P-gaKBU1@3["Zof<@d,3O9'DkOMn.W_m7'\TV8lWr$Y0+:rYVBmf,"8_>i+NN`NfM2*.0N&&)^G
%.h;uU'<jDBMUqc1"I1TiJYEp)d]:6KrK:\[H]dqmA."ds6X`Dr"PJW4'$G\'"VVKL*H<!TZoBRrYu]A*Tk%t.>;kZ52eK@,lP(hl
%0X`K^W`c'7#o@^ai=_$1K*#Js<@suDTMSMEJqkI>ml:b$8E=(uI7U"rALk>b$n(f]ES!so!s4,$+8A.?;=/]N-r5OJgqsdp5m;%G
%%ZFHrq&q"(n:SM#/\gq.Y_K/g[D>*XO]1VHF`J8."5d!*&=K5J[6EnDoZRL]:uObdbfa1Yf.P)^lpoV6Bq-B17EQLSAO.VX?/b<A
%'-:,)6jJ;cB*h1m#m_%T=M0ODbd!lMQ7\V:ec_H56_QCOls^H#?We>f(qM"u*?Y^klOg7mamB?HAKi_mDt2DHJ'=d#CQ$>dk58&%
%F;\rih4-U+N."u?R)3Mbj]N:!US/A*OlY9pGUP*IWm(\M@7V$L+^p;=`D>P=T`q)]aH!C#]AuMB2ZGE7,%GM#/W\Q?:p&ddM?i!Q
%ei6JfeJ3AK2JWN?1'5Fl-*I_EhpMBe9bT:&M'IABf[LRZ]+RBWMJ]^O$Smo#S[.ah';>7F$99(nXG_[.RY=WFj=?1E_HJL#boi3;
%DlaZr)$RpkN9A2LgMn*M05DR"!6a/7B[-hdO[3/`V&CD9US/1\*t*+fNrEuH_kRtm<PsuZ[jtl/<.s2s/4bptF?^NjW:n["KAn,%
%elp@]m9ou\^*=7%CLu$+L]g<9a%<!9;8R`Sqd*=^j<5(qjd1D!#K;\X&?/bXLR^X+8I-O+PCW1SZWCQO#\k&!*#1"m@I4b7PXukq
%1KHp_jFhZ0KJ*iJVbZMI9^a]7UED7j^cM)KAWhYu^t^V?`5XW*Ig"'2g"NFB;H7bI+<Wb4i&PBddEr+X7)BFb3)sti&-iQ[@GJdm
%K.5O8=L'YLJS^%p,&j3bb:$Od,7T$RO:stQP\j7MZ8S"[AKN*5TL`f)4P@Qn2TTg9hPuAI:5Wh&V%GDh&aa_dK??Fm[g+((!m<d8
%9":)$%BC3GZ6K,;O672kOX<SLlu?lXEhIYJK=BGW4M;kWj.Vk89&_N=&$7MeR3jq87hdC[%ZV43IDlDQM.7\ZqX?Jgq'@+;%qL`9
%hs*Jk)1#1#%CJ37%]KRdJ&1[`q_ie4iC$,.TVQkPnMWqXUEq`fKTshI<p#/e[\Q$YA=_GNa1rNZq"5tDKBrf2^dp:kc4<pV;eC3-
%^fY51`^"7k]OSWh2eZ-=q@F]fMnS5-@\IN14!_r%*u]`_)J,LpOs-Ck$:_l/+lM%^ER6sGEG+UQaE&e`^-XRpB86%HCf#-t.t/^N
%#fAE8Efgcu[KOYjA<j(;$J.^Q<&iSE-kKqrI]28/WXdC\"DS@c&u`oKQ6;APL`<W&$;0V(pN!AA4W6pq_L'jJ9;(KIQ9[_bS`=4\
%f"$b`W+'Tg\X%b5MQB@<Je-qrJfe_HK+DWu"-14g[-Hnt:tG--SWVKRiRD&,@&XeBhJ)79:jcYC`Be%4$gU8i=`W5rFJtMA=R64/
%7HEuH'C-n+Ja@An96-^#\3(fKTu]5e&iD;LG#8op&Nr$WEprcTdj?2HVJRiQ`GM:!0N8bQCl<o)',an)P/l1%_4I)F[3u%).RQ<\
%+<e%BO-g0X8%#o"TO`d;586$XYsIK2JS/jh_)E/L<4:G`kNq2RN4Hm`ae_,:Q5&]anhuf0MUk/%$?,IuG>Li++kITT>6WcRN6Rp9
%.J>q2'_dR-NJCCGA3@mU&(@AJ<&hZR88blr69,m8UD!`?!Fi>D;K*kD#(_jQ]4F;p-$$^.+fsVc9>D3m,K*!>+BB>\BKJ"c+"sIY
%[@t->W%,nA>93qd$@/mI6#e(Wj(o@M.Y\QX8<iJlW=MT6Hp9VHTb0(&Bd@q*h5LE7727BQYc#RC'K#!.dRF9Tf$g.!TJQhNccPGB
%EDTj/hTSGVD$n"7DrcrC#<So;^LnLN_^F\f>94lD<NK)\,mgM:6$#5g5e8Gn0N>jDH[LYVK1Cg@1F&\U#9%0prhW/:E+*1ZY:1t9
%'Ibe6:l(;'D@n(S,g^$t+F>ksTF8_^V+"+orHiS-!?_!OXTO<b([\O7!a,m[OG]Npf#$T9<I?^JmeosYm&IstMM!<,3>JC5ei?5)
%$Y+nb+A#2V2@,.Z&-YKkT^LmF5d_^EGm\*.K2?W_cCAs).-BuC1trte;<L$C>9.t:/[TE86X@?>Q!;o;,=T<S,m.R#RN.f@TK&$$
%l6C]%#>-b:#%;"A[KYt_n`[*'`gq_@%\:Za75\i+*&jL0>7`k_eh\]a.-[4q"!sF!\BE'"a!hj[<Lhl$6'f#(<0))B'R+W>)'='M
%/4)=:ed<d]T-t7k_cfjW;G`/?S.FnBa;`&4jEj$8SV%[&\Hh:$7:WbelpL=Cf@*/U)tt=fRgnNa$[bR_%MkQN/3G?6?*r]b5rluJ
%'fT7!Nk<JPY[FG<+h>F@V1Jk/@*"HRmrmOs%IP>[Lo6u$$cNP^a1%UQ_)p%rEC5BB6jn_V+C;EoTo)H2$Q#g`::/s7BHc*W6?JuV
%kX>k`fJ\P1Lu:`1qbHVu-T!gD4chH1gZ=s8+B-\)KAu$lJ-QY@0cYVU;gXZkQLqokaP[Xbo'd+NaLl?^ShW\IZ48SO"6*(VkZWga
%s(J?$!2mYr!`BjR%b;rB3\F$c7mSTP'SXq2s+'m_R7s3%oaRkXQA[R^TEh;a;\V\gr<%AIA%poD_-GYR5bC:bUBCB0L.!s)l4NLn
%PTJ*`*BbGIV+=N!7RR+VHAq_*F@G@3d">5l.12iDrW+J!<SY;cLBM>or;m_9;g^s,)\)HG$ji.:NY3?i*X/B2;\V\gr<#rVdfXoj
%UBgFa'PWHABW,jb+D8K'o>WRiee<X7"L*G@TjtQ\B]KaJlIP71'8O;G"(EY0=^X6>d:(j!a+cKl*8+&.3%*)cgdFYS&fhLY=Nc-G
%$J8+JK?#5gH7fWP%9[D*m%cYSPNK)eRU^um^'Qhs3tnsL*$3QK9<GkdVE#?ja0u/i)3O'lQ0('d99Pe,0M\(sJrgf"hDt>'%c9uF
%e.Id$Lb$L>>+hJXo=oP@CYOaH5BCbK@p+s@M1%\gK<GZ=JBl&qY[.pm+@q"h,RCQ3kQMR4b\Ze;>=ITm<P?`&,;ZVf\elqVM0JF=
%n]V)E1a;NaE^F`,$ud!ie*)r^i:gl?nq)T'?X45kI[f#b/p(Aq6p4A4beN9ql4;:d64`T$7DL'=L;8O$.1RNk.l3:Q5d56'$Vr`1
%1+9/o%CKDT7n."n'lB4WFQc*LD+_?'5@j;sU=V!%YWe]gOeDQW#=Vn<':EhWA.sU"C5"/oc:D[dqCZm^DNB"+>U%*C?U,KciA[!M
%V3G_51mHMliQPe2>dK[`b+NDbj!k_(*4"4r*bN*8GYS?IQfpd6FDT0mJd_YcP.V5)2B&*`!rL:0(]++r$]ELO]&3!7l>QI\S\Ul=
%h#I)G`)Z!>A<qNAMcW6(7o=^9lG(\gC#HT1qb6fu$q+Y+aGe2-EJh;[a;[IqZ1:d&fGInnUk9%Dp]o6.c6le&(UAG#7UcY[f->H\
%*q3Gq&N/!ufdAQ'oT=^3P?8nk^#j]p.%<9#0BJ"Q2qRO/@'b*q@trZYhf$ROja+>:guh\pBhZ%TM]m_X`gd[jRg66U18FgN9$!Zk
%La>1X&n.t30(e#\(M:bZ]bHTF+^g`h8eOCfO"FO"MhV;$[_DH>U1J7sTtb:XIEN%q]tuZcgW!Prd+U4f@\]oDomV7>jW#a7H-&h<
%*fD0`=SKHE<T%fLCL?sLCYruUb1Rg:)T7C@K6Gs<qqI*A57[S@54r[s%Xi`8p(CrTj'LEnP;b+OokRV4<Y5$?<2TFWOYG@ehgs-Y
%r@r&*GlR?J5=C!-N;</Gb-DNAAN!3Z6Nr,*YeLD0q=cQ"qEso$R1#d<qWhBA66BS/i!63oiVgsorXf$,B!Z_u6CcMG2G56.;eDG5
%gcn'k%I[Z<pP7t)1E-JEkLXcU5RbNqRJHr!Dg;<Q]g"pbPhA=iJo()XH*7[*\aAn/btn*1C\59ukDfB5>TY<Pe!K_Ta>GGN:FVb6
%bDV(-/o!bQ(nl58]aL;C@IQgnkt52M&Einr+E?T@4-jUrKEP:S'hCscmYp'o=?k!I,>K%4K777qJ$SEY7(eQgHl&0cN6\bk,/F3(
%q_rO+iW_8<,R;`?mo)e+HB5!WTCA>M`amY7\Q49XU(Trc!`D%`f<MPZ70o$*nU^JN%d;rnMqYs+I#cFPB%=)#I?:Zj`b:G+!LQu#
%B0XRsORlZUKA=AS6&g%Q<JMLN'1.Ej_e-+FJX^W**do]\#cL.<*?@,P-c6(QTGeDE,o8Y#89ML(Pt3]-"q;]Tk6+X!4?HpmGQjFu
%1(T2VL5G2d5h<N*)d/Yd5YZuQ3&hk?<@j4X=lDP\i\]7^8)->;*d'_Ue7&+XlWr?QZYKCu\i_;h!E=NAA.-OuQJDlZGoZICP[*5^
%M9$.Z&&-0]dU5([$k;b>F(tA6cjkV,8T&)'_;f*Ca<SKt5/p(b\(r8p`H;a))[Y2`D3(eCI3*N/n$1h213[>k"M)h<q0*^Y5"C>E
%da7/uA2)&&ced]DX6tP3rZ+[dO-.8-LkG=:=o<Co5efg@\kVPq;23gg2?ZE'hX_d-=?:6sm#_ugO9^@Oa3^Df6`m_a??W[uIraEC
%#7[)pZ8[sCHl3jnjC3QU)JFRApHXfc*U_sSOZh6%%NC#s).S%)NB@_K&UPW..Em^^O[t'&*ZM1,ZcD7](0F\tiJ]$*II%,OWOrWk
%.%KESZinQ<][%LtJ?;"dJB6rpa:cqNo6?9HTrr3&f/QYsCfl-1Q%_HjTd=sIdgPh>8M7Ge,RJ&&*XDgZ`lhdX+g!J+%NG82bkjRn
%eBW=<?"/.`ZcN(?Q]hVp3T@Ek0MjZ\L=_&#]W8]lNeipjp2\YZ$@J_kaB8._4H]Oa3YqBB=:"C;)abe.237up(BcTr_okWHs3nD&
%+fbIr_-29r`[PQq6roK,ThcM7FcZSLX9TT+#F\=;#mPbp8Qu0E%bUo(O8;:8org54?k#Ra?rII=2-+,Kquu%QMdc3CL5dA9#uUI/
%!pUK(%ScV17PR%c/1h`$^`Nr(C*6cHI1Xu7KnGOQK.@/IA<R,"CR@T$T/=AM[,G7A]OcMO(E*$;BK!f$+ls69]8]7@J0]N(7OJoc
%KO7oJDNM[jIBg'7TH#@2hf0>3nl69K$PQR'c^2U,(:RIXIIALuTE$OnW\2+JbX*1<mn,L_bfKL4&;6csQrKM"P_<=kP:L@qWskj@
%A)#IC%NE3:n.6>W.?]RUR/t6ZXu9:#c*/A<9*bMk=>MWh"LFeX+ObsX@l6$sOsuM0lehGbR`sVm?pj`8+q6I>#]:'j\Z!,hPDdOf
%G^Thm"^'"uNnTm76jOo&1JqS&6E%'nre[1:7fWg`=Khi:hZbbPLft;W!h"1;:tR7R+uG*&n,T+Hhd87$"so;E@^3`TIZ8]q&<JAl
%eI58H/m&NL`'M6T#+/;0#946t5mD-pj;GaD?Z83VKEENe\L!&T1+T7f>TH<6g8+cd6,:9;ObaGB#h&<;8ZI,p;08ZV!QgWSNE)bk
%7Bd2-g>&@n+A\Pb=:krqlYQrgCEO@ik*H,Y8^cu%AjhK??Wbn._L!K?4\6bu19)$^p.56;8"lo7jJgS;j>%[m</(PaD%P;6cZ7Pi
%dA=WRGVhF'Xr7icK)*c`<0\(=C?1K=-QKjZ1WmUj;i<X:l##=.aq/<PX9,HAqeKT4$E@tt;?CF5kR1NDOR+#8qN9Db$p'mh^ZHrG
%O](^NXBpO*9j)8JTMiECadd9i7MaPkKeA3Mo65bVk!PI,b).$oFR%juXNHH>[j%X+e5N_>Ba^c7XgKhd"7)[4"=/2'-FXL$RpA9i
%EdMD09%mL9IPu:.0lVS_iWBs2&#UPX:K4A_$9q`XZ.I"l=^=DCd$P&l%BN#D#SKJoT6L**RE>@7da1'H.*>BXSthN\,0<=)?mZ@-
%-s3W6&1M1%,#sgS"m(W/;`s-!!H4O/3"<.CM"/>c'c'&8!"A_uEOTq.Lh$Tcp7T6a_?H*WZZ,EM-:X*)NAV&FA2t9)3ZemX;EFtf
%T,BK*2j(@RXb_hggfUZO4-WFYq>(`1.t`u3[ar14T[:pRI.g2AccX/<a7:G`'rTnK[n'ML)=^AeQn78;ab=J6.l#G7V4/qtZmTNQ
%5k]d4'kCl"kQt]DRLd2EUE<=?B%;qQ5!s;oKo=mN6]FkW`op?TUEQ*uhuQ=^=5VZK*ghTl:r!=@Ae37b1,^\a`^R?.#.,L<D+f*a
%7"X?Ge@;s/N!Kcp[+cg/,)(fZB8`Au@T'3hBH0tAlsk9EmQH3U_XR_k&H*U+QFH>QR8CW<i_oXWQu%6]DJK96_/4&JN+At'(Z_U:
%@rOq2\H[8B)'@+#GV6r,U3h9j5s<8$MUjX#=2k`WQ+"a&[X*.WmO3WMQD5j7M!:,TkdKXL(u<b>YHbSUHU4h&5)6U)j(j$4JbIJ2
%-2U#&(VduQ9)E+C>IQh,f`ls3,X]CXGfQ\#%r[pYp0b=Si^1kHE=Hj@4!*G:G*+SJD*3)/19s$^GO.'9pl=%I7rq?c)qc""H[K]]
%HB(c:V/%JsFF$2-:-D'jlr_m'Nk*?RE_Kp]fp8s[FPFh/(u;X>S\],ph#igKmlA+!"2)[`9ndpNgRPd9D0<M2kN9n,n?s)'N+JJ>
%+-90jO5]cs7Oc:?)tEAFqboB77;=p/]tI4p-RN"(!>oEulGYdk&L;d82hnkM`Y'G).T)07*a"/C0Z$JN=,hpu*MMj;458crBo,SW
%-DG5s/?KI'g\RETpn9!lU3KkiXrS5LN0bGhIuK+ff&l`7*[i3?H#S4c?LLTZM%TWq:___Wj)kd3f]8>pRi2C5R(29ZFb3S3l7p!t
%bc@C_f/D!*p&Md/80`/6d#TA`M.I]=\1M5GPZ/)KWL:T`fMZAfX>CJbM\N0:9*HN</tb68HN59[kX;--2"\*U&Wd9>k98-g@fL]j
%D`^W``SL,VSLnBhL^N`DnLmB+0.fRdQ'XhWs-5CJ587,P,pH\(oIX'[Rd$A%i4D8G!=Z^l_>OKQZJ>iMl>1f"K%;M;Z"Lg4eZVaA
%X&JBMAA:1e\iSNIc5>0`aaSBD?_-1X#G((GH!("0(h.BLPf*1#pBT>'[nCmObS/3<Q82f@EmIC"?d)"9jbn*i;qo$R]m/r8`U#HO
%Ntg)83r<k>[U&9@GT`f5p:bQ-4IT3pipI7ZWh)I,l$A@CbO1;!L;mD[+l<AnmYeUeo>TKP$dMVPTcpL-N5nG?E]RZ)(LfMn)B6hO
%a;8oWD1Ui-nWD>tX2upiDtCqQ,=CgO3:T/;j:$Br,<8][89E^<NN>hJ`EXX_@EAXrN<I4SjbpY\o>OsE6aiheQtpLlrCGT2OW\45
%!msJpb>%``P5A_VYpK.`m#a]kh>0N;IlV9o')6Lu:piu+U(8L[(F;#g?/iMOL13sL`EYbt.6dQ:Hm#NB2d[-f`S=s]/j%s#M_8K-
%OTZK<0;Q;<"5$V2):=M_UUr2!#D,^DXZcdW`EXW\`H@2VA?!(Rio=.0Ni=ZJ@Tq&?[-55kHYC6D0mb1^I5-a)5bO+'_hPm4datY,
%723mYp\r!r(8$)Cf]mNg0ZN1?m=Z@gPl%8qm(SjH,ko:5!t29nh?+.g%/W<>-#5W*r#e%4]Jj3A2)]'8`G6U#h7k)_I50@#fUZDb
%'X/:d4'(q`Z0c\5mYU`@lc7k4_>b(9os.492ce^A4YEO?X4Xb"0"r.[!k-9eZh:Ytoa'nsh5b>jHZ(OT[]j(mMKBhVa%incKTG2a
%Rg[X.\qYBgiAEGVX*Y]\1gc%ZqKlWA\13OK@,E.M`joe&M8qW&$l&U(?6_NjgdcC`^kEW1\Ai^5auqX15'nEA5&FgMQh&Q'S_dWs
%4&jVJE@C"((kK@iG"D-\Z9tmF+GZt8U`N&();8[9pXhA_fd#/ik<b+^?";V/ll+U:F$>]'$SQ%G0-$b*B!0b4%M/8a*'Sco`m4%H
%N>$tb`jXu]4d%Ba>f[EP3!P3kP[%][ZAXe)a>Y'k@aI!@,;<D5F/d=&ETF81fqC06A6Y/-8%.Nm4cV*-3c[X/CLfrV]LI'T;'3oB
%="e*>(`bu^(4`TnD)$;HA4t>if`Ln2Zr]uerHE&57b3flm@Oi\r0s.kKOE2S%F,>>"19Ic)asC\`@$DSs/I=I8^WD"Fc.S?e"[YI
%73'/cWbB@pU(u(=;:19g6n?:9d>IoSK&[TJkjLaW22D^q38kT>8bOs$:Xf:;h%d>ZeF_(i.*CPqDBY%SS7i=s1VNMeU,g=*Bk4P3
%s8/80"a1DrC`_Tg4N+LMLh"%`*34iS[O];$HAJ=\bLXRP?LL,"22i!u=I1AgdW7=MPQ&[^3eCS2MG,qcAYO3\<4]/.nA;E<f)oT>
%lLH/6EN'68GZW'T)5D('2R>Gm$/R=HM^(#H>pug21.A$pJ]^Y`jd;e51fG)@J!>dV4[a"A.W1,YAr6XEAFguZMJ*b;9B>K3Ne9G$
%YVq%th]POVlHgBh.Td$A/KT:C/bmi9p@d&)r'$8>UV$P+#;f%V+H%XQ?^S-NVNe&XAh`^N"%;nud"?td;#a-E&E8R(^[iq`EN&!R
%q4])Ul9j.Ugs*ZVA,TC4\\<<>5-Y!c4nqfor4."Y/skF+g-[UGX9p#6<kh'H&]1=J#L!oeDiUprd4-W?ISKu,iuP@d%bm1)/]CL'
%LorsWN%lHeTl&%?mQGQo\#%':44\iqN*hBh\G!k&&+t0?/:R%1qhR!cg0\uaa.@+o#I\!I#QJLu+((n(s)`lCg:&t.:Z:;.2=-&r
%f>>o"'o!Je$k;`QM!`(*'S_@\EAT>-dDF7r:1/BanK>2p9OW-H>7=^-(c2pa%RLk^Q7W:mJ`O?SCE[BU$:.<U3gBBR+h3*#Cl5n;
%7F?/n3at\shNJL$oHA?2P*fnE1F<=\bf9Y%n76YF.!7-El4eNfbQ9A.VX9`g7VbD#MOEG,fTrRBcqIsT$PrNIJnD"dbs8)X5r7&C
%Aeo&G1X1M`n1t6m1^faDo*Ur.*]+P5TUG.41VnZTZ3SVW&":T]1_[$bR;P;HSO#'D.Z8mj=KaN]b_q'b3eM$De4Dq^SO#'RUO+/o
%U1\C"UG?!h0l!S2e-tB^i:%QlRVCOj7Erb$C'I0p9gN`?)c+d2ls^eT25b@+=m7&SY%8d1JmhdhjI:sE6-EGTgI;`#MH->::_X#c
%+WBR%#c.RWBq6T*FVJ">&2^Y(JnAa)0+A3X)A])ViMGLdQSR&YYoF@l7Jmb89;@3-2@hI#=*SHQnBu?2Q_G9G2BR?F'jd=l]X2p.
%l0H$3qq:!-^XTVsd?>1b)8Z,s@mf17i637Y=Y54]=Z_dM/:o[&"D>Fm3.j_?ArkjY*l3];?1dqpVo^,BZg)%hRA\KT")pbL(6@Ct
%*l1uBJhqZT-X<dH)rAKZ6Ll[Z1L(N^eKQub7rTgKKN:(o%cL)&_V%)*1O07=ZOfn(J7Hr;]0\K8LN'[PKX5q0BCc\[mNJ+N6TD]5
%E98[(Z[2s*U5uEI!^MHY-4AdK*l:MBXe8W$i=&cnBCQPYE.r6H&)dp<_HB!S1O'1<Yn53>`,occ&=^^ZL+A"b,DIu^9GUsGK/47[
%H'!Ja3"OY:%-IYla)H3_iQN@\M:c^c2J2X9q=ln,OeT0>UJOWm9s)MQ,MDqKs&Em9FU$C4C'_WVe[X8##gFaDY9J^7Y#Q&3oq0:o
%"ne!Gj64%kc"CIu)18J5%U17=&YF`\^;'T86N%VuQZi9KPR^\B1Mi`%6"X+N`W%MTnUHKDZM;1Lb!g20rXT^+W`s?j_1,sN,KZt6
%#muqcL)42ra;p04g/Y>4,G/q"B.4t.Xp^+(4Cl5>BZJ??8uVed'R@&6Ee'#kcPAqZ`D]Xp0/VnUP",/X)<uL'0&J3bLZXIfniR?n
%]B=buk(D;mcNT$<[cK;EjeLK<0i_?Smh`t^rt`_t;C:dHbb'=`idF&ClLW&#mQoB(kbm7D28NY(32)R[d.[bPgOk9-qX\'&f@)s(
%P5dj?e3>*N\A69rmG-Y_;1I+8AU#Zm+jn*0YclI2d0V@B1bsOM"YG:VDlC7[jLT8[(j$2:]cabr7$KZ09b'SL;UR2Y^T?h:oHr9m
%94Wb^.rX>dTaD-5(o:Cp';.o+?k<hQLC7J0Au`3S:VA>j[R[CLo&NN;[3FUuY9q^!>3E7:&Llb`!P,m[$^--OXT+=VJmqS(cE*t)
%q'$mBS(d8&8+KiE?]-C'6aqo:Ymq&SLrmmXLj5>qUPj1E_Oms?7n9M%619,b!I&4j0-e\m/S-lP?C2n2cIOUiM'o7(19Q\nO:;D4
%][-kV?%i:*X-5u2W.-X\RMc]WZ.Vdl4Yh=AA5sYlke0h/'[\q@kh-NDq@Qa)0q_f8!qW/0CH80(hB69<PU^)U.$U.-;>A'XC4LrN
%j"\<-)f9R+1%YB4]1O+XD.pTrp"R+nT_24H&o+nra711W*K/KNM9VC_*<bl[TE\Bd"bnksYb#LO_BMqsqhn;E`KgYGCqj/?J3j:`
%fXP(0nlcUPLCpg!%fmfl"X7/^a:*`q/.nB%Tcnq%9EX\X\s9;Z?nYW6U.Fa)9$Y>gaqTFW1kO4rXl?]sdh,;9Y2oaBgZoG#&>%Ah
%#bNa#b+qDH/mQn0\AnkmKgM?pbU>B<M8J2ZW7eao$teP4n*'j_`k?O@.C'oXH^I6k1oitf.Te9>;72GT6rL=B,R#A#GD#ckfp0BT
%ZkiTK-H00!U<VGtU=1F?;b*&QX1fCspdg<Fe>:ob9@\LDF=?k*+l,BDf;"7gs4!79B<Q-f`E:eS\=SW:-UCE%dumCXU%-eSeMe*(
%?oMVj:&V_]VIn^g/5Y*K-cn1f#\JainkS+7ajX<<`akou8:c%"TYZii/nI3YWf9s>l=O7iK!%TD62.da1K5U^Mui&:7J9eO5V64M
%^8_OPAcZ?gAD);?V`NSGWb<(^6@W-<=QG(;l9VbtnjP,BCH'g-^W<EB,dpO?`f8u;kk_\;9n@RB@Y\8Xr5M-)2bNa.kN#Cs$(+4<
%ga/B%(f9rKLC7tA"b=Z/c%I4khK_,qMZT6(q#1WEWdMoYao)W-&qC&qGB(/W"8@_gO=/n/AZpSPeUK"P`>3RT&Qq3tASk8b_O*o:
%As,*rM9^/,k"T!k$&]#fk36#WG(\"lk3O\!_E,!D&[l"@+?a+kF2FfF6pLNWc[$bi]ZHUj^cMRmWq.9f/aNgp)@`.d#tBLR!j\r'
%!h/?G8e.JJM]*==bU#(^2:@Sb_.SPH,Y0M.R:K1N-C.3]jfdA](NdO^m=sN05SPITZ)52_eMO7^U7Tt*gYu5#>7TsGLZ*(sXTap>
%_Uqalg/;5?0)T8or^,KT@W;^ZDc*f4P^LrT/p>f=^t^>)eq;+=AQCp%F/]Dur=0"e+bJCN)QW)\WeGjC]ALZ505fC\[;.u^4$@[f
%eA0_fZp`;<Yn+k%^Yj;GZA3GHG<7p(lJ@*mCP>[FQ!'=gSJIALctBfW;\(BHm:HnR"R)l=%4YM``rWT@[PhgWC8;0XO)"TGe1rQ3
%e:L=c9`B#LCUcX+:.oAs&@tObQ-dL;"s's"l0Rf\>PbtC':;p*Qg6k)2s-5WMA;r;I)"&[$TLq?;90P]5PP0=gOAG;s7Z&bhGa$F
%RRfUli(!HgZa5VRhtsDI0AlG$VuPf6a5.Bc5O-mqfOgRMOA5ogUT+e!6Jk5s?2Y+#rA#BF\rO4]['ce6p98+g$T(TIqS4;D&in6.
%*-usjg/6>=b&!-Z.Af_?nW-q:%H^AoV<`>>X.VBi>s6sbnO<4^%=cthp4r,:-\jeYp!U",3)`*gg378EM\>XiI=Io/4!g)@c5XJe
%Y;cBlRHP8XPAn.a[\Ro,ntUb$3o,6!Al0N-$&uot-jX0.)S>\9m<T^rn`9$0<uq,k_,IJFcOWk`O;cPmh1>"_hP^m&^M_BWFgAb$
%1%<68&q#7h3l0^MWpo*J`j?.3iZ7n*!m+pL#`p4i^QDFTdWhMSL:knXX7Puj"K+NL^4p+DgN2#%R^Omh`Qe?@eUa.VDd8A5k05`B
%NH3tGY:(cCI:KItV`"CO2tp6JkC7=3V*qb=8P\n/q5sg4Eh]>t6;sY&kU<*;D,MM\6K(Dq+#P-.OL]`_=:CC&ObX>EFbY+kqMIU2
%W/XW:dYh.#&2X)4.VsH%]nEm'5UE?R(\SC$PQAT\,,hsKXJ+i;4lj;sBSs;M$q3-4)<q%HePRd.Jo[Ikjj8d)]AD(rIK'k-/[\1-
%Y=!,WCg6U=*la39(uL&@dB0Mi792[0\1sooRP*21i]='eO<$3$1PQZPSrUoS)FCe6:qZN>G/hO'WbZAZr[chSHB5"C+XQ&M(.5S]
%-r0$h/c@4C!nn&[(&SE.0u_=4Pr48D1g3dU4=1F)dG!91*^3Zh%Qm])H"#7g5'p8M9\ZdOpp621J9Sr=#kFa,d+e0E)u;2`*^b3:
%%_$+m<>DLF:FISN[9q9?p)=ORk^srNO6g*Ckn<tp\j2gB5&<Z')sq6Qe6ko5Lnn0bCGj=o*`R6%mA=h=\%cB&]1;t>9[#\[4\r5N
%Z_]&[7[&tDTGuM+!A_aa<Da/$o0YLh7t/)\%Fmt\^.Y4$i]>k6aY?])5j%G"pLL/!HCcQ1C(Z3;ZSlF)#dITRk6[jV?)[]9PtZ2D
%OZbM/jUO0PI)DiEd$kf_p2HcP7-kUAm`1H%:,hJ6#ZQ-D_q9Teqf5X8/E)HQm(5!"R!D6D*Q9og/slbNkj'K>oXiSZ?Y+a2<KmA$
%mMSDdJdemk4\7$$U]SYs"9[aZd?lP8=/OAD(.feUlNT0ar&-9Oa@YHtlf[IWfBDOGH;e7"2]-XmG\YBk#$Tj)O9]\\WmCoj7^1VT
%en"<*A6d!Q85s>(&"b_@12W(q/?j;DgV*$.N530#PU;QjAoE<!AS`^U?gVO/6;nPQ`ube6<4,<9na4FIpLM*eX08L'"\^sl(Ob[3
%fH0M=^%+FhYNT;=3%S(XiB3,sYaFk'"Vg]Tr=n0monE.hJuE82^>DG\1EpePS@u<eMei(-+bfAXV6'DgrcI:PZ4N#:NG*+Z+Lc_7
%q5X(T;cl:9>=N^'RoUTCTd%8]+j<.8>[1qDm=ndPf73uSeq0#MRfR,SC2:el`\]+OM.LXP!Fd0,T1''t(F[RW+WY.0n8udi:s<H^
%H_^T.]%o"In8gT1`L:=-$3%U+7Qf1mej(G(%spYF%d?a\O[=Bjd$$oL8YBHRJ/T@R!LaSq!VK9j5'm\j-mB-XfbVS9;HU-=>`-Wn
%EhH[`c8_7GWcb'CA(4#m0UYPA_5(LDSR@)W_6hLF/(j,q>>\S/B*SPTY28Y\8'/Z@NBR(J-&s/2B@uN>/M9ksF?qgIQnQ[s+UgTI
%*Ze?uP#-a+%-=E\Z=CqO2ra/e>/BLEDPK17ee.P2p3KU8iB%QGkr#'uGf5"/If&D<rEPiXB:I)<W@l,=(E.A<(J8?VdtJpus%nXM
%Ui(T]b.^j3^/jg=:^(3J`YUr<eg/"lJ\RG6?UX2*K!kmtHnD7GP3+ucrGPJKpJqL4e0R:/*+.nUTCnPs9$V'\aEVi.V[(_0*7B[2
%<%mfog65+PZ#<o%Q+!)jDQZIW;@$s5nT%fl.GoI4kJR#"O7tlI7)3eX@`lY/J]de%*/+=Ip0]T[EaE;BiMc:KpJ31T*'_glC_0E?
%Vt#[P_@>!b^DSQe!_Rprm.Z)a5(0-Md.+^#gbqI,s*5'&Z6G+oRrEF/>@Y8[RiCoP4]j&W;X[D]GRio1MBk`tbkkP!N%T"+kQ73d
%*o_">45^qkdW3^(k$P(W#=j\j;4hGNEr,"Y;5Br8fhJVuoi*VDCp*VGWAjjgYN*UacJmW<%VUh4/kH@-N;[>Tq''&R-$;Z[]$ATm
%?Ih+gFW\b0%?`u(1OGe2B.U"^T%*""9o0>jkQpP\20n9]'hs,u9$jeJ]E)OWk`UREGN\3+QnZ)!U5N#WYBr9t5?7:Rh71e8<$Cru
%6P\sVkd"Z+!QIpF)lkXj4LD$$'Cg,bLK5:Jp0D'j'a:8",EQPEUc4u2"1GD``E8sE(+hHB4W^iY%Ys>jL8[QkW_;(e<I>P6[Dn4[
%_Gj?hj?,n:AjU;H9S`]P+0lrH<:/1H*CQ"#@O=Cq-rrmH5`.S&.?nK]m:J[c4ej1<lnSiMcMDDd3BDe6431_3TYn9`O8IW`?HX"?
%&><!]rAI*4[2hWdXr+aUKC+O$gVk1r(Hj#s=Qj(_=6NuC)`9ar0C1[6DK128`s]=+?8,X]A:]GCLEADb5C>U85F7nH$@=Z3%KUp"
%qE23i.CRPtT>d!;VZ`.q:1$VVi@92io'cf=fof$5E9i<$LQeiR)Ks=U#aNl)Q)`#HKg<!WFT`?U2JdSUiI-MO);H7^]L4"I+HM7C
%SVU*bP$,)D2'B+(G4\D(:^2$#aWKZ]jDO#c1d.:q?N?nb>5[G-k&V*)aeuE=\:juR>.bI7VXg5lOd\BHc._-V*_"lcFV^0C/LD(?
%QH=^r/T*:fG[i_lNPVA4;0PB)OMO70)$W,9Y3Q[brBsW)*I6=$nhPN9B(tf=f0f)Wc^Y4tFp0bWU%89*XoM!#F^-G/)\EhM#W",P
%'9WB^35nhJVg%.TN]RCDZ$HXB*Bc.qqk^m$=J.Qc05\\&cUYGH@@*!"=%41&6XD#@@+#$C$Df^RA@HXu?Y.AJ*KT"CcpblF'qrW0
%d9T`3=AXcn!,B`0K7Iu[dj_a?F@A98pQ;rKNC[9^;l?ojN3,lI_#tg<fre`,ZD0=Y7r9T6lqA2J)0Z'o\,npjMuIjFUhKCF;F]%L
%4mRZsr<bZH4$p?%KPK:^XPMo=5Fmcuc+j'9%/oAMEkLJBcUG4n0cAtQ8?.jT"*%k[TRlQF+1kR:%0:>XB,Gj``j"MTqWZp9artX:
%jo$?>nj9o+\\-le#=4HH'hpu#f#[Fd/DB:s!a4]t&Xi%c)uJKI5-R?"<\$j`^^M`UhIUUa=nWbe+j]*cq#17$.\;qBYcFAm.p.rF
%Aq0"KpNR+Z`XE$[a!\0gLA<T3869XjkM(U,[I\i&ruA6<3qAZAK9'/c?mC6n#sr.25*n31M[sELkQ^d+%(sSb77eTBS2iaqMh%R%
%k0&.WH>27-`Tj/^a;K^UchSLSrW:Nan,O')=VVJI!1S,!gu#Xs+,s]A^u4t5_qbnP+3JZ1W:O3jmVT24>2AlFlDJui_2u]B*IN>;
%bBu>-oW*Z=$1-e2]tSQ?HT249,G))o)^T,o?03kGK\b4IT<j51[Z5^G#VFK`p0frOR')(&=c<F"l-"MdPf:`]Ss))K$j(Qj,3Zhs
%9e@C(b>@e@VH;+nn,obL-9E<;Ych?Mn@rhApng>P;Vs,5F;KqQpNni9rknfTg6@$)rY1/YT<_W,'F>'-RUt?7$>'8pS,O)&>?/ln
%,_''nC.56aQHFg.(bu2.bK"9&m-Dh#J$.#P(<'(j;?7EpfY]p/<3$'F%"pM3NRp&0#pq;r1h\D3/<M)-U/CdkAe^)p8H`m^U#Z%k
%5=7+]j;Cd='\pdN&nBl)FR;>QK8apE_PDQMhbBha@F!]5U/Z)].ra38>es$,lU82e@=ERPK9Mm%S3%GCk(?BF6C,u]#h3Ms7WK2U
%b:MW#<2clVe"["G2N,IP)J>30:#uJfbTRU$Qaf(NQh?902]52qb5bI;H`_i'@sktI<ZmkQ,5N3HAOT98`I\s#,(^[8$P5QX%jni^
%VcQ0QbsFl6c#9P(!+=6]$-=liW=i?dbcCs2iKd"g6i\]&9G=u#*@a)a*/*bn)))F@cuAL_]o4sT!jc,,!2?_RWukceI!p^ufbk2t
%34.,8UWS`-[0;EdEs'%A4M\sgUQE89UgG6h"Op_t(>XKj[L)RI(9ofhd)b'Tpt8bV#EmbG%OLWW,PW)Rm!oYDm;uu%;dbYQ2uja2
%.U>QH\f(=g5mm^T@>g%K&_?OUf^5[=A0FTj<T'#EdSMMe'H9LI+Lj3m)O+<-O3otiq('_Ck]%<pDF)ebVX"9Qp3=PMp;05$7kh[b
%^m(td#\-@;CB^Yj?&,;H;$ENp`df=Udo<]5Rf[B3(j*,`lNkHHCgNsnagFk^>)cCiAf3N1r+;CW#LkEB`_Ob3V$dtbC!qV@EkWC"
%_Z8:jT-+DSb]uGOTX+#mHHC62>uL]d,M8X9rSUYp(#i'u@+^eM&21H,_6oXhUGJKB+,hh9JiL7E[!A$`Rf/d0SlR`OgH<`Rlo`PM
%lbiQ]qVP<)eC&+QVXQD?4pdo</>Y,+(FgC_Xln^Kh]JL(fAH%P^OXV)5BBTsrM\_+7V.YN3qsOFCd0L78,"<Q*r])-N:MpI`92ps
%I#b`*7&;]N0<jd$T6bB_[R$Jq;s</WLS6U\NtKtu<nNk''aSk,"C83'#Jo!`N[Y_']8>/K>''33!ObWgfoLUhT#Z?G#+Z8Ml%./H
%Vb9$lYg,n$oZ+]LYK-[56.[Str@qsjT7]n*Y.l(Y&j26Tgk3!Ke=n.B.1DM*%-ouL#AYeF2Sa,M4+9&,d]sIbk16,^f%4>bSVu"8
%81_Z='A>T&'&ul-UgAeHEn%4d=d;Y9P%NhEh[I@li;d2=L_V@9:PKNcJElV>^[m5mCuj_3RpIeJ>nc$Eng/N4aoC7S"*-MtPWt20
%K9%5bB>pCeNVF,J&-(G,reDd8*f_r(9U9i7Rro,jpGFRE@5](?",',JZ/.bh1++2G)kDp@A6r<TFA.\7MO9F;dHiF`rYjUMkehB#
%m2iKan+Y<Q+S)J)QCSge2<[0[FMLB>VT4Mg']*bE:Xn9M(?9O[J$KK*c*>F\o@Q53+5?Mip[V@o)so4jDA9dG@hda,^PnoOQqoO'
%JR.^dDA:pE(me*A%sV>Kd64lVgtT;Fke"7;l%"c[hEIRKq\-;mmW\-=G[9,iD>WOUC?)jQ%R.>i!W)@JGd`,k=(pX-O?%a*2cq[O
%D`ZHW$HLcqS(i2^0\U*uh#hP]NH\1c#(;?S$Z-^*2]],bh:q*kG^j0\dJ`LH(pC";kAB+PebQb&o2qpbWa47`gM%F=?iD*Q8SNr3
%cPQH[O2X.#CUYkGrq=))0g5e3*]rQCA*4o+YO6\0D8?.Hs)$f-2pNdiDqpcChDel!QY$-E[]MLAcQE&Hi+(dgi*P1#k4cRerKW?8
%ELG];n<i+^1#8>ph;:GKP;FA9,EKNZn?I0JcklJid.^ptdfCE@A+OLDO3QDmh</6#`p;phCqIO0Y"k!VO-rG$'%/)?)i,^*m-fb7
%?6HK^OhTJG&/MZf<m-m`$cKrhnhu(W\h4LFL+JXO(ksnW,%I"jF=GCZ/dj(I9Rdob:U$7`UE^%ZaN[`s2O%$74r'46M-<RZQ]spH
%i9KWc<(NPq_a0HR.k9/WhqsYKTo=qM5m^073?[%dmHBL,%;[Be_6P"^)AM006-n[Ubq>$ri'7VO;#$\mbnCMml<BC6@Nbc;fO\5o
%!>ZhWVYG[6[<`6N?l8Q:lm*`>Jr@m8)V(,S\5%!EJ`!:dIKRHQ6j/['gn9?$REB,6i'>ND8)R6!>6]GuZ5U!YLkJkBj/0R/%#f):
%76t15kp^ODR:)g4<]HApKRb=[Ma8n&+a\=AAVCFm15d@An?uGs<k>!8I"Fd.*>YlC!F\H"kt]tcAtKe\R<hjUgb7qfMc5A[]-4VE
%lWUO20RqaR(=I0I5BQ\"Fi+6K;$oFZk:757\kS[5HM!qbU3ooiZOB&,fMZB#YfWTuMoaLD:aKn>bEZs%+D=SZ%k9RYRc:p%)LS-b
%[f_1?fNWm"isl-i66[3N&#,6W0+8*6]3]FN2A!X#`;`>cA>N`V0Y#N1\kck&m%FXm;).^lFSC;cpOEGAJ<e:[(>K!mg]J>I"'41Z
%(>T'n/e;''%p3f^=>17fKa0.A0Fq:!4CE!DUn8Y<=E4pSFUqSn%p1b$=>18Q`,]#W$(Bu?Gee8p8XTWB?ui05#;!CjXL\Wf>ok\,
%7$t'7YQ?Wl=E4pS5sV1*jG"!L5g0Ct/f.W0(Ke7R@*)\^a]r5i?!tWW@)6,VW)busBT1sbrB2be6p=Ab3$c_8YHK;CR1$*`$]Mch
%/>4CJF+L`E\\OZE^d,3e!c*)bEg4,M:uMhY'nghD^p:Sf&;Z>/E9i[_]Aiq(_<h9HmK'BV!A!:56P@\/7naDsIN2a7iN]*l5^._Z
%PQS"V!t6eE3PZb0'Y3_W!S/n/=E=^L2[<G@#8eIoFFZ5JO-Xn;_*.-Fo72P<"4l60QJ;Snh#itf".#g2^p6]b4^cAp?jMCNrsNDg
%fmG`js!sK:X&&J>TpReC.//1A#IBbhEo_FpF(&#g!g/q^re#LlJSd&iE\Dnr00^q$1<(C?"qW0K-5,>&jtB)Y=?ts0a$2<pNBt3G
%%k\&jh-Xo7IK\G1L'>_h</WLVpmK5%rV%U#gk<7FnXi]iN13X\(TKeUenUs>b7GN8[tke#/FSWfqI[]S&<XpC%.8bgA\>\H+5$8c
%q#'^r+"4hBbRAaCb(qCmN6.I27qcrd58Rthm*YW!!K&GMaLG&[!3gu_&Khk2_&=p2X+L\VfFHL!%bA'/XInDGRAp0]MSo(gSrcm9
%5nA$bV5r[-kh?/9A0@5ZM`FSSO!l[/Je^j0aF&6=)YqXYE35ZQ&;HpE\f=A/q_jNt`gd-qj?c*@SjV`GV@'$O6<eXNVXhfa>BW-.
%hbXi>*K8A"!f6u:g%XWO=V)2IdY6-'WZDm!403hI@AHl8OnBh@I\PQ4(g*5.#4ttOs/\H!#MC:UDHVTY;9^s;2/D0dO]K2n1=,kL
%D&90J@kRq9WfbA)p.?L\GB(Q,^F<0H8l2/KX?2f"E\u,!*5o;tEmOhq'LM"G-r@@`cg.GN1`9b$<4586g;8gDU?q,pK/q?CJn\5R
%f1G#(k6U`IhRGO<pq4FeK$=Wc)@5"H"j:Tukl/M4T>RsPR`R/e9M'M,mfWlD->3Ln'WM"i5t]AGLoAA.PTJne,_jB1kX/U6JfGnF
%.KlVrQ#El:7('EiOAC=q'14t93FFV^@"YDC3LCoHYC^Yk_I;V[YRtR@*7j,<87=+!LQ:^/0NiQ.jU@>('F49<=OU=F*(q'BW.@4"
%kbYZ,U;l(i0?=\?1Y(6+nI4!_83[;_l`bug!PLisW`WCmkYGq>Zr!PY.7FCh)!_3;!SJMfW1VoX%FiOSi'GjgjaD>lNM$/"mN:$=
%Zif2R.uk!/igB%C:Tu=7mfFYKX=ZH97uY_So@G)n_8so@%=I>$o3`@(IWjO6PmN3=MJb<]L!c-c@\deQ%8iqD#_\QI_%\ocfopnf
%?"Q?\SAVg(_\i(fD(pu7#\cDHTRioHQ0Q=Vls:11'?p@MZ?;@pDI2i<E[\bR,Ft'FO".CDZHj`c-r#r:+Gc4bK)%?-+W8a_1<g!6
%'5QcMmZSq+FL\)tOFBJ;c8aD1M(jX8ja.cVU@ueMa.Sir7>o_](1?HDM%HpmRIc4>@75ZOa#;:0;UKJP2Hqi#J>2=mJ7pQ#7Ku8+
%;#Y/d`!^>F;MQZdM,[/QK/'@em%?<l9>!4$ni,84=>0u`7OfuA6N27'lpQSdP)Xnch?bf4`Kh0'm@>/*'oS.Z9+$XMH9I@hDF"E=
%MKZ0IScB.VC*6)+Y:W7`X&<D'/f2qe"%LA@J2Hp_Dp0N^fX+:2#+#E7L;\=G4h=ra(8h4#$B@DSF"(M`eeU\`r":W5c743c./e9:
%jd!o;V?;[:9co3kR<^9O##p#W/Z/#S4+&9rlDSP16?>6M#RBlsQq_t@,_N<1YamG6&un+YM(4\tr/5/!@$0\9K,Ns%(Qt;C@23pc
%J>bO1OM"+L7B0k'iiog`;LulPD:eQ62+.T<#5d>i[#4r>LSYj9FS#sHJPp\g+YTq?0`@>7RZS;a9K!"s_Q!c-Q+%!m6'XdX/5_cj
%'A*qVbO5M[/oH4Loc=a#VYc<aNtZ@=&];i$5`<.)95%*$if^'0A3a"GG7Jl'hNEH36*=B\q/01"_G*FeDu9[SL#pcd,&oth-]YNa
%)q/HNJBULgO:uoUH8715iN8F"A.-8iaAXg'$BjTQb#HH)RZIm$,0'\!"l4a<_DY=#!AijI5c.tQ"XY+L:MLfhQE8O%%L=j5ma#P2
%qY*2k96nB'J$ouBY("KMFcKo'k><[ue2i/p_5Mr000FE_i%tte<@1-X!^n:EB@4XG(i'qaJ92@94##b@6qjT7L*I<Y>`:GBV_(Bk
%Wu,*3qX]V9Al(Wp*uJhn-/X>Vh2cj+nVn_k<Pl%oP,#TdN$BiY'M(qQE#91Xo/[%#;_rB_<?qhC>>m>@W>XOAN&d^ultJPSHR0uU
%Yu8#j@IKn7g`IVj@ZVnrg5n)Sot6$=@UpsXla-K`C9P*eq,I0=5G7a8Hic*5rmg<=?;2rV!ud?;=iZ.ch8>,e-WCOB?9JYSoc'#3
%e"pdFT>>U1KkfSV\U\\LT+,D>]:l4Jhh4`aiUK3(nDGA>rn/>Sb+BD\nbW`WQTh^OFh^WIpC/+%/]gK\QV5`?>]Wi0E'hA?FNmP-
%MC=4<C+-ubYrKFWRHn[LBI9V43CqU&qPL^u=Z!\^)WLp":+p/Bc;nXf@pEnuf`C&V6><1mHK`])1&!(90g3+t)gj$cG!-8c:MoB1
%K*WXtX:TjJp@1r%p<VT_*u&nuF,2ehfne=B>@C57#Ws&hT7H#2LOfp1&Y6UWXc-m_\e,'EX!'3Y[T?_g6`!UoHUVqX7&93]=.^Ip
%1hV]3K+P0]YKn<Ajr,2Q8SrAjW#FsTh?.k:Y?dTkZorn%'JF,tB+U)28pe&X8tL3CcTpRY<7`h#mFA?+`NAOD(T-Id9^l5[`+)U,
%\GNp3DuV9IpZ:a\.FWndds+^K7>tqsM\hL]5g/7Y5%r_e/^4*)/5105iX7`Qpjc+tc^UHGSe#/7GRnTiC6..AnX89'MEai3%ktjb
%B,_C+,4Y[Wcu^LRISQPMj6Z@]ZEP!8<kAVoqRL;8/cq$tC-'N7=j*j."StGCJNh^TTJ+XtoQe+`fe\MD5bIRQ"Stg8_)$3]ctA%b
%!r[DtrW%M@rtMa;=8^Z@EAiB_+*1'.k*.KF5b$Mu&nFag,I4<):Yb(HJ7_PB`a-s;baai,:1;M+bUI7q;qOQ;k*.-4$G<!C:.[4=
%W!Sj)b0;@CFE:&.Esa%X;lYFb+Q6'Gcr,sP"p:Nd;q`t(1hcje1H23G2lAL$;mMlkn7nCjZC=e00rO)L:?ffhP22YF.Ud*6/\*lq
%7F>L<8T%:3>quj>D/2a.es*PD.F"qCEEcA!X=7s.Vk$77W-m-o@8O)@BC!Rs`[Lg/D(0>V;OZ9:RbLa:Z)':dV=]%L.Eu]Y!,5)?
%DG*h?KZ,XGgJWR3/VS>1MS:ND$@M>J=i?GFBtpmCROuKDfg"8XdUZ!"e1Jo*6<af,[;7:?\h+)Qfi"R!;W,qZ>=t,3"c1;d!J)i!
%b\^"0gQhn2C^F]lU+N42/VX-+?qY3O9*+%\'U0"u_a1W*<4A\(7(8#9[k5QSpOS\`,op2^fs[,eCairM;Ms.*?s'*#+\^Qei$^Kf
%9%^QdK)!k?\R?o$*u9$'@1rI%7*!NA&WSjrDf\B+F%/$.`mQG)!@l>3($aio.!%j8Es<2E1RcqGSE#tmg9t7FA'R&A2fltdlLk`n
%eUK[unRqR5@e&f"]7BhAmfFH13A=YJKiL"AbG'Q%QG!g75D<riqY\Wgi2lno<Zn-r2l)=^G`9`A.0Q_Xo1*@]-JX7rA]pehPo8hl
%N-*q\RZS*QNr!XE/L0'Z-6lfN4jL0c0<b;qF8sR%*kfr#j58L99%M9['<'H+!sheh@++=?4_NI>IR+5g.kJ*9GY*"Qm]`Vo=[D8U
%\loCt&r<9D/W?^R9?3#^]aO>`%BsH>eWb)*1&e5'b7PdW&W[p*.>M`:j:-Mc3K4%e)arI*oVM/ZK3TK\+S;4d'HU@,1mpbWLUqQi
%Rl#45Q1524]3'bVgloqld\@XYBq@V#c"aFd['Y)->b=D-d<Na]Ku.&R)K5`3!5d"o,-VZpd%"5LQ-cb0$J6@;%#>[W:W"f*'*4gO
%*k*'$OnF]1*sh4RVaoG3S@n=9TKfu`*TlQ!b*p\$"cN//Z6o45Pq-W>g2'+C)SRP?&9d0>Eb,]B;H!gc1]#?nIKdm/:4D_sO-K+-
%p7um&M-.I*J4a\6J"UjWs#2J-J]a%.G+Kc.?1A4Z-ih\;joX=(Hs>HS&%\,c]F.G_,0E(]fh]Pa"dJ'=M_a5SHl`hRJ1It5P$MrY
%n^n=pLcfZNFqG;/Ad-K_S+d7pe>>5#nlD<I79.`C,hqlJCBp,5oPQSpBX$_KTS^O/(K<[1]@Q45&Q4/uVrr34`6`b4mlL*7d:@E+
%]mbdIP5'F\JaVuEoF,]RmS)ZiHu16[\n_CZ2o[+#7Vmh0F%>IWlDY`A.7/hBqrhj\/_M'ToOC<,lp85X5A%Sp\pgCajT,a*:O(Xn
%!+!CMKP)P?I6:!dk\jMf,X,$?r#%1VT9!6=%>Gj4UH\,'SuC!(Ht4nIk;D&hjr`0BGbnghFc:UQ@!u!SKFCM9p_#0!nh#`seYYFX
%PD'I?cPrWMEHEBk@oY]^/9='9gAk\*RamgL/9PTn<@fp9B:70#QU;jp\Y,WVLlrt%1:skd8$3@D&EQC#1<X9th-&n>-F^rsAl]rT
%;4`6VO0`:F97ESCjVM\]>N3Etm44?SWejl2>RJE44B.@C?8N]'7mTECb8W*SA^._J&/:p8Umj:M"UjQMkA?%46@-ZIWZrTX2II!B
%qfcgmTT<As]:eJr(M^iLDqf@.1tRel(>q+`hmE]C]rgagi>s->m@`*aFYimioSo@ahPe]\HCN7UqWtmPBXH#(NjCPU\N',a1`(9&
%a?b7;p=mk<50`f]b;HNCM$9o)IT`1sU06mRhK:so9QXoe0'$3+$h_J!Dqg1k5'nkV7d+)OcQC"`2"TaM#J.Zs:`nSDgR6!Xfo"5V
%qu96M:,e+-5t:cE0r^Jp<51XpKF3f^Jd@-BGF=%a7TL#LHA@Gh=3)*M&"?N%]adC!%G>t$lp_r2i2=KpHQ=k$@!K2qlO]]E"$Ag'
%dl=Q.1gd@Yr:XJSp3"'slY7CRc(Rt^)-ro&HNYa;6>&$+QkWCin+Y.9G*+VkhfYT=.5m&GR#pmJlYVWHQQBLVa93S(h>-$$_g1(9
%adtko'>c%u$=*sB:f,5TL=nWNFJ7W,RDtt0DsWc1<2_H<I@@,aL0""EHUUT68S;)t0+:"Q;77+W$P[X8),6,t6Rn2qqN"LN'Nmm/
%b2A<n?dO`cT]da-EQs4R-6$D9>ITigbf6CM$WK>Z)`fenbA<h`$T/LrEC$OEBb'&/]LT?<jD4CVl*[(\B\4rba``ia#0fAn"kk@[
%)+LsgWG%@BIZ3-A\\IhqqP->73[%f7fsa@r%s"G+:[C#fNW/.ZoV/g]&$tbFDD*)Dn]L"4bKi1H9Y4naS`lNl>N$6qr5j$,iKH\p
%f^#1pTRG0?oH"Yc&,jQ4]blP;A/tCY%7oK!HJf%A1:=U)*,0YP_%o5.1!b0<FG/E1P4+T`T^/C\i4WoQ;nb_NYa<liA\RLWS9qNU
%Y0]J:dgK#lSKD9UDYr*DEqoaefMs.[T)B;6mS]nF'7YttqmC)42>VT<Ic)1CpY.nLOaT\$cJk^ZF-n.Na'bmB-8VbTNg(ZjF6pqt
%AFX1VmBB)<A5h^WZtrEZ;Y>l#Ccp28Z?c(m=Ug_#<bH0l.bCHVSW5k$3AOgl4(?oY26'=U@hjoT*D7RiY,_ul-kF2I+N.?'#o^18
%'j\799+KtBMhu2]^5:U$m[KKV>KULi;A3kE0UU2m%>[/>m@Lc5%8E$4G7j#\TMX\h+H$Rc[+B'>#h(,Y9Gm%_5[e-CbefVd%LDm#
%$gMQ&K.fXbl?LdgR^LgmZYj2UX0$MW3.3-LoZ+mr!ig[3=V$j&.1CeC&do2AN'.FoB8@Tbh-.4!f+)T?M!?Ma`]cuC:nAPb<L+(Z
%G8!6a6O0u!5j$,0VS-:!Opfc!Ke5DaPorc/$t'KS&i>4I8ncJdhCL&T0UX9q\e=['8j_g=;8o?h/Xk6$"OBsSJD66(%J`*.!%=tB
%Q3O#/A2=LM9d\Roq?r-(;S1&l;C71CG&e/+.Pms+-:g0nIJC/7G%I?L2%KCKqCPQS/STFVoSnW[`_XdG7U!e[m6ZfXYK*[bcg:[^
%!:n,U77f?N6i[qJ;/AN5T$=p/\=@u7$+))9l"H7gL^W4mALR[5N4&4*LhD5G((3)+e&W[b'jKm^mW*n-(8=t4H7I[UNZubuk_Df-
%XP1fb+Vg\UP<MI471=[SZ_[lRKTua?&Ak;;U+?WKetB[tLf./srn'dOPbjJ0TkH\G*]9<dT3*^0DC.fm3RLCh/A3/g#0a]fMV0Wc
%na/t)q0jb6lG9R&dtUK<O]li5@<eT*d``loZYg1"Z1^33eHr1srh0GAFGtjXPsJ<6BUZ?='o>h=W]l>5$a#eDJ]"P!-feo14j1#$
%\t5I"D7SBQfT!h`>&po?`lU_,>#$!<QmgJSH*V@X6W*"H)d:hq<=`KK08"*)$<,'NS&->RL`4>p:#3eKDSQZA9In,<V?@X"JQ`HO
%Ru&di=G=Q-h*HlN6A$!\?k'9XNHs!aR=7WmI7"eYBLa'IfU!7'FU`P9A7J]oa-,IHO@(ZhQ"tI%0N'Sa$Ub_@I9AT=K+[ambRW*R
%9(Wq>YdH\ZbI!8k]Q4;5Q^?h1fN'r&8^r/q1SkD"NJeMbf;$eQj#F3Tl=DQZISTUZo=?BaWO!K'b#jDS]b!UgPO8smg8&U+64R^M
%#YPV\S=0=6=4e\<?"ULrZ.%RKE13:Mp1P2m`M;Gm#gVu;*>-I)W(\fL3riDjH+kueAOtLA>48i6TGBkkom<X;3g"<g.*1b<$9A5>
%A2_chC/DR1"gK-]mpmKe^H&$+)e&lj$eU,:_l^1Y'I.Bkk/t'1:8=KGls-$bT]),TFtoIeX7OnIS+GRW6>XtMJ0jY@.P;AsI:)@-
%gR%g9DPm+,,-im:FjdBua`jG,%d3Y9LoODdaj.Iki`Ut0J[Flk3Z!`2fq]g]?WMJ/LXD^?-)rglZBEWMJ!RKqOpNsRDN1a[mN??"
%Hs/16*`j-=1<C5A&rQ;,ft)fQ)Pc]AA>[5N@Z]j@?`h4W7*I8%FmNi+LKtBS-]cmUObQUI&`X-ThosjU<Z!T+X+G&j0KW36aN$X$
%dUcu=Hra)o>Wq/@"_._;2Zk=F%R?,pD3'u3(5PpFjAg7DoGutLYl?*G730C?5oknEbZ9^gB9Pj<@88bP[9,U7Q+&CWd"?V<oLZ8U
%9H^%dKrSTCd#8D)bcncmH]SgMrZVPZB@_kPb4\:o85k1".gKU4Q`?f=%oI6p3CPc<ZP_1F=Z_@K*%rMkn,LiIeU'G6h5b3GBclY)
%U-;JehoZ9*UOAq>M(C?-2Z7T<hjKXPDS#\cM8*Q,5,:om;2frMh/dgk>__rpRAh-:ME%=Pp=Z/r&XDe-2/Q6Q5i&3$Wle2]2')SI
%(0hEl&24Bdi;8Wc[=6iQ[kDsX*6o*>2\cbS*6psYa_=BnRM%4*%8@E2R#l"YA?m4pTR#2."5`SmWE+B>7j@>_IJkCo&i(/ZD\"iH
%N1?1YLtgBP5D]QC#UNg)oaa+NU#2.%GA;t&Pitu(@nNF/f7>,si!E<3&3O9,.hW-MCnDCJj@Q,b"0;=n+KDa24%G(t6sUL=B3p;n
%>rf8T(tR6sQq)0+?()8o;R6Z]5u\321W?Rr*2,:pd<a$G6,'$`#^QRb.&#=W0A`@?!j0q]G!RQ>Y-2bZ)1"&uA5"_Q_V1K\!_`2A
%)O8]^ObuDcjFOCUW055PQ(+pD`D6DGPXW&;='FC7rV:PV$Q=h2*:+&.`X<7'"rrSe6S#.nKK(cbDZ9H2ru;>jLf?p&5QsWh/0bmn
%E#OD-h[D)[jB2kEK,W#GW/"$`R`Xg;S9moK(3:&!8o%7C`GV>.!21uHQ"j_^Ch_R-_a:<a]5M_0W<S":nW7_oXFjQ@_@hHTbd97H
%OdbgY8RF?@U%I@%kaL8Lb'a,L;Dg\6i$</Rk^aroM88*(P#mDHX@36o"P!P]+K1,%M.+FR3ngM:UK88+W.6E_Scj1TdD+sj=`uCH
%BZT-p/Mdh#1r,BoO(Yq%,j:hLeW=f)AkAYH"Z\:GNlMP!CfWHQ\tm&7JcB"`@;It0#m8Bf'E<srI"KTlpa%E0gCn$sZcf_sm<BG9
%6SMfY+Q3<OM6jR+XCG'13]o,rJWOjgp90q)b8Z+["uTHEpe+,V<gBj-*t!9qf&lhdYmhN/MJAK3<pVM0"I+9gP;dPWUW6,g02mhr
%G+G1M^r-7%3fP:Kq2>2J'Te^s<g>:L(LLbmK%?":lc9ZkjN@XX$BW6&ZEF@S(4M0Ep)7*S8p'A5)ND$a3RV^^>m1M?X&]KW,]Zh=
%paeOgjnZfk`o)M@[F(AAA_X+&_esNqA3+MVg9IE#T6*)XT:iG=5o5Wl'600N_3[(CiA[G(,C@KOJIiW]:3U6&2d6D3b2M$h,Ylnt
%"^1$Sj8t#0#@kiEmA::h'NH7Xi,qDqE#*9dp;N?P=\o6`]s=RF(Vi%`=am::$Sk'pF[848q.6N3fi!S1aJNe5O*DTGUJOdklmmWX
%I>]q^Ze5(lanDNu=W43UWpMA][eZ$0b/V#BamW"!5%AJ"%b<4I8VsU*+oT>3PA4e$1)61<(0$4HfF%Kk-a]#Db7XGu]Cl)2kui+b
%!n;")JJue]$-DghXhE))FsIsm-uLIRY^.UM0@\=o:+[0obHB`s4/SOMjb[_o7m^Vh+jnYm\]nU(V:,>D;Im5.%[h%7$\Ko+B^g3h
%3`>/1#Vnb>2/>"`P0E]n]gQ<OIWX8VSktj[/\.bRZ_9g/MUVi7&mD0?A61*T??mMR6@9P35=U"t&G<gAX96uY6o/S#A@Ft)/V3^d
%4D(PR80X;!rGZVQTTPdiSTP#"FZ#pM[K^qW4s<<LMN3_XF>R1K1(_\ggc.1E$]_nTg>c!0g=DL:!n[dq/Q%<5->AHW:md@WNA.DL
%K>KhA$irtL1%`(gSh=7h>GiiSpt3634\TBrK&0tL@kF=0aoSq96-5?TP04XiX5Nl7,,VQ%AO"O.B*(<R9q<rA!/m9]'>:YTp;.B8
%agV[X6L7[ph:,.%'gIg=/WSpZ@@s\0c^K^r`h7%Uqn*,.9OS3t^3qDjr`s3)DIXl*':dORkX;cB:Y9IbA:Hq^k8]qq1SViS*O%."
%R)gtW3mt/,6=_0&QUEXm2_D_8SddY2ZLVSM=]KgUVV,9V?NI"t(2\_/C&;>3mJ?]1kbj'qS`^lj8PTFnBHIQ0r29tWB1L>@$^b].
%Ft^EmDpJkJoNc-f+hg(QoODt+Q!#AtjP_":A%VG'F>T\"qth$q<)n;LEA-)G\D/"P]V^**\S3kH7$m,\fdEOPV`ZDH`^3%.@e8)q
%T;p4mnnh%2(/j65oDK?FSH4tpj)u*YpWd_4:dRA&<s<TlC#&II+P4<=6!d@"W>32I]Ygi&)ohKP@iVc*qc$l8n729Ep::)`J$\[,
%Qb&IO>[rr:nlT)"f=eQFJF6TtG%ruim:kJ(A5Y_bla6B!R>>k,iGJ148&=&VVa!1t:>DOm7X7<0mEqn5@0VSnksp#fa>7A%`Z5=c
%o*/l>\cGX'J.S0e+^LD??M@akC5;D$f-%ZSkMso"RXZ5%XpF^c(HRq[N9XHM4'h%Z9sf)ulV^MNql6X1cjYGMUOIl-J%s>*6(C(Y
%nD[2%\;s`dRi(uf/9?/`NJo22ppbZ2fc5$L`iijW8(7/9LZUA[E7ngo#:rjIG_^\qIGN4ts5H_e5J:tt4aGcH[V3Z!Ll8qc<F/:O
%`5Rm^&M#mtkQI^?p8Jc)<d2)bM<89F-Q'b(E!/][YJH<8?!@"iKbu&-U.0Q`8\62DVHE$@)jX+RO4NCKZ=HPV6sFjCf-\4rA%,gf
%DkT:oO/mRZVFReb/s2;I)XB(o]pJ+NDgI`"oOXJoGtY[t!)LG4=Q/flPD.Qr<6D-(.>eA0ZoQZ,K$lJ)1c3?n.+qrZG\>-unO5bk
%A.l29m*?1U,I%)g-8\ep'e3L1bK)]SXNt8k8s3aUlEF)KCWqS33a\cTouFqBf^H4q1'QaLQQBDW339+]5M0DL;h$OH19]O,-eh1q
%-NRh`>/!7k1]/r,VK/U\8Z9es95%Pm]Z7[mLU>AfCorBO.*"=ih)(2Fm+E/=$m[jfN6[Q:%`un=b,3L[T@bgq(Rg$3Zupr9?8;Ng
%*VtV!5E0:R?[>c/?kPK]5oLP#K_ELC,@lik8k`'$ImPhj1I%Z1_,WL+!_F.O!udMK[SlDaX)?`oLandmdoP1N1e&;e8d/9TgkEV7
%2k\u+1IRsfCFLo$?.VE*bFNO:k\-U;##ui0&h:_ja?J44]r&-\E?.N`B\cW!n4R(c5g^@1XUCat)sM\"pS#u&7Uuk*KCk'DE2Zla
%0VC#OB1#IAb/<*QpV'[!*EbmD+F]2[/Q5`t[%W>^<8"-01J2j-K@[t`:`QPTXd[/?&Q;/"oL=r3:f[/*m2fl@8"]?g>mmZu&5485
%ff>RFZrT*<SAA?T6StqkPjD3Q7WP-Fkj<EZ5O?i&G4=sLJpabKfkoWI$1`2Ib%b$iXQ8&WA.CiacFsjt'W,4A>n>--jc,,Q+hq0o
%[eKZ6WV_A#4M.BM6AM86cZ:$p\+_5q[S@++oBY)Zr?Ke&DaPVt_BYl/0'L2hi//a?5HO->A?SobqJ+jup-RIrlY@tn,!dsMm+(;u
%9`8AeHX$X#oulL]YWGtK([(H^_kHGka:0pag-J@?nnmXegLDWVKma&=.atSHYcjMJ2S?j28?l*QT#ts;noDHL1LP,@,M+'_jt2u:
%'njjs?/0YH!Qs?HU+S-JqCNubVB$\VhPbciC`W918AuGNZ$>%;i[@%`lp2TG@aEZrQ9N&VaQ@oj8CWIbP2bK]nVW&jp-[E?Tp76R
%@p?(ui^_%l,RQ"s4Z^gaa?TjL3Pg:Y)LOWa+.Y.QB:ItPY,F+7Uf8A(@X_Qa-S6MO6hV0pR'b$(3pg2%pi9.9g%m;r00OaikAh[D
%\uAo;#TS4LH_tUWh\(o.ck6U]8k0B9UPAPjNl@r5KjW-dJ0gDI"C67UUIWEmesJ'VN+>=7c=;BpOuc0IK*3IO<=p(cB*!]j=LMj4
%:1a]'c$VN'#M2YMR22]?d@bYuDFa%7qGnL-LPg;tjPQ>!&8KW_?la@r!:dOH#F.4Cj0iZNMCUMcm6+LFS5r$l2D\_7VVed9m%YHc
%n0hTZpVEHkFr-/3]HBtWp6\"EhP4E#o]EUOkaFBX#f&!4gDW]Rr^V*(GSZl<NncNo9m2Q'hpGQMaShncDPTQ)`KpFbLY][[f'-E\
%`V@pgBjW`=Kq6uRo(Ymtg?GNaj`92'+snfZ!NQXpHU)/c^,O22LZdE4Hm(B`,5E(Goru7H2RUWRk%'f+kAIH31`RG,>kd5b/CF;\
%9oCu9:l0A6SkJmaK,fuMfm5@hELggAV61co`!G!s$>KK.I_!:<KBgc^6F?fW$3"Z9XqiNq/^q;YOK&b(Va08X;f+`r17@*JM<.j\
%K+PjQLE&?TZ5Oro$EN9OMaqiiLJkKO6gU(0hj1`:06jaP*XW@,@NZ[5W'coq[1Y(*B+aKY@Ac5KkBGV.R*OHlp%Wc\(?%[C3PI?q
%8QKI>N1<SnFIf-UbM]H0@V+<((@\O$6b0Gh`MPX[oP7sL4MmnUZZe)i)chM&hrj3Gj7\%s/K<Y-dFM-ZQ5;Agjr%QDg8FV',aAfH
%(5j.=c&k2K9#j,3XVlUuA@5B*3^=iaOup9L++rW'h:i(N4Zd$cMNZ].CK<CeH5hiil1M@gJ+ATNpsr=2.Yb8WO^TiglSMa,R^$A&
%cJjcQq)\KIPa6\g#lEM/<;t$4>4'+lnEk^6i6$QLZg*@$Du]/"fDiIes8FU)Du]Lbs7LksDu\.u.97dCqk_f8?=!9nGPa<k3`%&J
%q7$=bL\8>sJq*ZSmAF9kEhV'TeD5_&6?pEB-]0KSM3&ZF;Sj&^:plA`cip+?d/8W]rh4on!so6,Gf-:-i`1OrjB8hk`UXr%7fZ/#
%CnY+jA-\A/X_67=c$-qMGG1486OAuJl8S^(T$*(=IHVOTW3Z:GTJYbd=K>m+@X5hh-oMn3Dh_c'S&n8,BS++0ZO9(E"MXsX90b*b
%\Y6OrU]=,R'1jU>)BDs;L/gQ;4oR_?BS&,:rZURf(P<'Hb9D#+W^/3bYAQLX2Kp,o,KSL#&H0[(gcQJ3":-"B!q93Se7Vh!q&+2]
%BmIrSCY17MD6)qVimEBJqGu0tpY-%d'uCsK+5Hpp$:ba4XRicTb)+3+/..Jq3WeUD(MU=`B2NRLf$=E/MnT:D$:@i$$I0c<RD4W,
%[")Ia5C$+]ekmK"b+0?iqND=6=nM#][SIA=>QsjP.'j_kZ[4*XWF%'*#LLUO+T@SR5fH%qjVJWh[8j!D)b%u!:p]HqmE2p>PYgJ)
%[rS.af,#7rD-'.&<0ZNJ*=0"EB+^901(lO7Y=j>kka+Eu9-/?"Z-n*C_nP3a4'clu+^OYVQX'8<j*Wetj;WEojjPO5W*RMZ(NoL!
%YPXK,^Z9NEnpXm8+sSfqc+2n\?h.`o4RGc_rK9[_jRKhB@:/S=QQ3<H#/VMBGMF<fddO^GE(gY+k;R\,;7Xp=3.'Ut&n&P!a&)qP
%nL&FQYrb.HhsmX,mJu^#niOR8f#k_eW0=Sj_LZ\"c6_?r9$![Zn9J;JW$O*BZqF`N,tG@_]B&stRJ/!<I`^?YjRp+FI:)R)QQ/:N
%;0T;i2j-DR*DcQmj5B_R:]$09_:8@[366QhUYYIMml:*<Oc8@&*1'`.4C'ntY'@O\mCD3]KkMdal]"r[ib;b>Uq0M7k2i&'/,gWN
%kTp<Le(/$E:@VVFPM,caklGQANa-#;PCc=4<4g^VCOHXI0%/u)4$SDqL6VbD@1t/85s/RbHP[Muf_W5igp`PsX@'N@*\mGcCOZ0m
%GlV[u5=Z2"Y1#E3fk>t9.$Ua;2\%-"^)I`_8Y&gmW6i(-Z[I45<M79G`t3)QRHSN:<!JJ:U,"8:A`lo8(Pf;G:WFU@`DHc[Ig?9_
%hddGn_NDkW3YmWiUutafC$aSsm@6Nc7TC'8TCYFsTh,8:1A.13QDQb3-2SImM10'jM1B1m"69I&+XiXb_TqbSm?@IW7nRD]k"fTl
%^nMc"<W1CQ"bpd\#)"&8-I%/oQ(_l,kr-CEL;M9Z6Q;"Y(ZrLUMSeq16h!YdD*KF.4c342fC<;Q>loH*&R3ARWqPak1O=Q2rN67Y
%+2(Jmh1"+H_ro-j*)FUr9IucG9@6Y0(Q'*]0q1Y?<quf'(;`qe6#af#;e7lQMMZ*n2lC1Tp!AW`W#^fC##cE_ejU_`23VUSBueqh
%4^.H%rXdWGCCu8.GOE6+LFA1F9K4Il,m.,P1lJ0@kCBM)8q]LYcA,FHVJ9j6R!eUT"D'W'jKjKDd8Xe:EZ=K9,0LO!'!Gg*!'h.q
%J%gqlBB_pmqKI:c7b(/@__p),'L.7H>tZYa"t$FWQSdlACa3S1,f;Qo0P-`sJtf2AV<mHfY%u`_p]cq*,>MrSkX_<>nCH;(TbFTa
%Hc5D#E`jND#G^8n,uZua^;;!pYsA8jg8^e]]9(OJER&/j8N>Ur9g3/7!\<rM";.;_B^0B=0VNXD7teEHdn:VA8-l21jPk!n`Tl]X
%/*bTCOaXm)9f'Tb,<6OQ>oYOdJn\l)GJ>XA4d,3ceskn9!CfQX0I28X_I-?VT18l-mn1bej9FYQBJiEIha<.qV<Za(UQJUJ(42>n
%!@5\'q+^f(rHG):"[`W(2?Ln6"*-K!>P0BY/bmge:Gb5o'1gaU&Q*UPJ>!juV\tQ=f3i_!]29MJoE(I:j@Ak)Tr/!^5oV,^QZh7h
%>6)*N/33kF6CHP1ndF[B$crU*;^<8)eR8NH9/Sb1-ODN%/9K.\G5HKU`CN&Z'A8Rcr/nU?(Vj7*,Y>8N'i@t4fI`?$$@&ORj*Fc"
%RDaeoKfAY<@k@Q<V]lP9i[P,"/g6j*>9[_-*AIJPrQiBRop\h.j=GVQ"URPOf93nC8_[su$Vb')oC8Ir=R;a-/s/%"@L.c%'dj)S
%g?:utBGC>PKSf3e7N%S.p`On,)s.N,(ThAa)>VOU8+?$o>V(Q(43F!g`^`Q<L:"?)>)U\2]&.iDL>;$KT`5`kA5p*!`(ZD=O9(P>
%/KMnXp63>8(I1'.CZ'uX?UCD[5*/ZA3;ESE,fJ\J@8d-@8&>$S*pbQ?UIh",%fbOp[J;b-d63C^SBAS8EF28@_iAITC?"NUXYIi)
%k6H$.,Uq*1F*c%FCiQtf%SnpNViG1hH1'k%]#te?Tmg+5&_#:J/0Z6I\=mT,gjOm>M;-+_Y.B%hKR=<`mc3o>^1[3j6ZenQj!W+e
%c0V\IN"o#kKDG(SNR_S8M>f9+(XXRF'aH_MA7A(pljgL69)iLQ>G`_'iYT+k!ZCF^@!rEb1B#6]OO!KBm06/@2*?!9/nWJO1cD#9
%'/BcgPN5ko,ASqjO,@H_5V2h--m;hQ1)E$mCWh[jL?]+6JG>1<4.GV6_MUp>_9(p%4UKT?ih"k;eI2r(LVf=M%MjdNHq/;HRqZK0
%gU"T`=s8q^q@<fW>,Ws#bXPPl'r%Q$>0Wb%[-i:dTNjb"QJ'P.a'=*gX^:/t85.jB$ge^[H?96fl2E(VTm]I/T,U"baQ(a?S5XHR
%p5>EoISrb'qu/kj<5AH$*'dZom`g%,0*P0M&l%G8kcna7CQ[*J_->k6J8M=P7(!7/6$u]l)U`+1o^W#)nLu/u#2HsVO:Hj2q;`<^
%Y>6;60?Hc#@fk*7_07U1V7fV;`/!X.;)RddF>+J1!JCM'f?5:?%=9i[Zj5MG.(,c!*Q\91qscJ@o-Iod"V[$C#,O)FLJ+U7[IHm%
%EZ!,n2s+q^-2Vq/A"jhjTeub7DH=q5"iWYZC5r5Gc:5'LkEAE,Al=7`cQ0d#h)T\7(Y5/e1HP])M3'VI'*[+NAbu$LJ!NKa/)5AU
%]9QRSN1X<[?%\i^@N/Nf02T0PkcFO;5?oI&c^'YVNO`o*$'p1c,<KY]QWg04&@MT)6L<_HWkQWWm\r]dG68`5'c_@;q\Wl9BelOS
%n\\[fab-kg:7Uc^3p4YkEejil6jh`t)eKUIh<M1Bi^B0oj#D2n6QPnBF+/\k,j+bTJ!.2LW=m$ic/TY8I?iNN/5sFp'@UE7GebJ$
%n_"!:K,9EMiT<Lp3Ys67d`'jXHaX]R_^X()80NjZ_E,&bCN)#ld+XTK6:0$8Q_JECI`MM1hW&u6'2PnN;&(nO;'Q*TKUtfJ%k.(8
%Ch@;u];qE0$:u_3G5L)h7bd:N6?*oTPLNoDmp^D/%;"V<C;_E7P89;fquX,M/WEbZe',:Sb-Xns6rX.\(OK6gf9EUlUeX8#FWcA'
%8mA+Z?;0_"-'$U=,EYl[GU+1:ldKhEfu!@N]B)uk@7f"A@Rt*S\MPJ.m,+H!]&%kXmZg9s>Bkp*8giQ226GBq5TQP*i;3Vpnu5+u
%Dd@$@"Bi(2Ifd0ogh/(X\90%\,$+LFB^)b[N2_hXUbMsK/G/qKCl2_oF:oT"h9hJlnO1t@edm+NUKYS:k;#_4-4/@LS!da`L[kdp
%,G<FZdt-XtqcQEl!bNCKHZg>(5Z>,e779@&Tho3E5R>)F;;e,."^4=C@?M7&0tf,2NZi$'*6'Z*n'7?C^Tq4q(Ph>:;+oTtLY#bE
%$gc[YC'0mJF:-$*C,eosn-Cp.<g[gf6dHN;A)A>s)m(76ajFG=PW*8)JTmg!A0EE)(DU'.0BQ=N.Ar6l_VT4trp[-1_EUB3g%9Og
%/*shif4;Tbn)ltSj8:XSrf9u+lk]D>NOsuqHs"kQZ]\F-_qr,]`S^Y,<Vr]ZhMB&Ir$WFPIC(H,EC3\\*9bbsU/Y2]hhBKmHr*'?
%2Fp.TAV'mchH*$8N^r;u/DuiUPX`!FW-TV?!ZKc>lKQ-Ta1\Fr7A@%_8i):HP"-)L-8>TTi7+m(N[aT1IAiu;cL(:[.F<&F#l6>E
%Pg/TS&1NXL1Z/lglJaGLK#RPc+VbK&"OC\;g)Imf;0mo7ABtc`Ee,sFpd@FE)9Se_RVf4o/AYsB%%(\"=t_CdUYE=agR*oaX1It9
%#'H+E3_Yg\E+]/C&epuC_1i7E2n)K"TjE@&`G3m:s&,O[f'nt5#U_h+e&=rIO_Vc_!_>p?WMqcEAM*HcNBVPK_O<3#)HC/s7P$l7
%!EF0>,/^W:N<up&KRlgO.8p.uo"[j612fO]Crn$P/Cg9a=O\fs"e&n0AObH:.r5WX.Vhl&@K*E*7j4YtD9Y%W7Jl>FDT-MbYK[91
%,:-.15j3UX&*%=]OOif9OYs?L%99[lL5]h2U^7$4@V_,_+$rBsA=];@BXK=4"1@VgQU;^.(!fo=Zo2hMqfNN\hFM(#%TO5faqh4;
%:^W;I=KsdU]<#l"165)5B+919#-FZP0(`GM&6Va$M0A-L:R(+%r=t"ZS%\mUg$4EGiMG.EZ"nCYoNRiMqIp):(4@)Q%$W!Nc>9^+
%j<lcgrLkU]`4L7I,)(),R'<9;61ui2ot0mdHD!gLe$Hd-*N,4nXKi9d=[-%Q-)6coWrXrh_YSeVj>>-5&J27"1&!D]?`#II(=5'Q
%l=OmOc"+/8-d%OHGbOIJ<JsGZ@B_'1J^>O=l)\f&iCs6jK0h9WGb]cLE15+3lKt4'&l\[\`7QHN+^D+//_J*t^'f'a(S'$0c0Bne
%]!,=CfW5RR[#NU=G6L6s"s-$=Fm)f^JqZ+"<_)'#1koJ@Y";/g:j3CM2QQ-[X"0[i>sEF3f:CG,@s.`ZFidclF&j*JeMUu^_.1S,
%qU">I<p)[MD(o#BS^h:aFjLp`Wsd5<U9cn.,=Mu`a[QWVl=e<Le*'S<7s::h@@%*@:.HhJ3*k=0/mOo!DGGt:9a*"!e2^fT:7!l:
%6g+N\<O/W:J.AJMS'ts3FD5g-ig_W>:00)DLQtGK04N]P)eTR8"*Feh2jF"djr-IcY&%.jSCNnLlC,&jiiK:gXKHA?f::BbZp8ag
%Gj7k5FmWX\3)[__\?WWN=^?)LLJZE:%f&"^p0*GVVL:h5%c&OrgO'jtK17Q?lGCO*qIXjVX:@J]S(1MOFkp2+*#G[AS(.[PF`hS&
%(S0*qc0F<-lLJP0nR?6EZaq*XS(6?YFB3U:.)@N:pAu86MbaOjXR664'TsMNfrXU2qdt!@_#Vr??_G^0ie%7mX,@JmkcE&GOf$C6
%QQ#E<+?bWGfrXUmMUg8%lB8Kb\li<<`la&oF;1b`doft"<X5B*824n!%_"M@<Ym]qlPEKXS(70:"*@SqS^l98f;c0g"/Uq+e]lV/
%`Tdr%SCQ`GlC?=NAlN\MN#?+PdF<gY"&Ort)SP=\!`MCB-[p;qBJ_.TC*f\B^0qWE)*nejmGNY6*3-fBTtGS^JV]q07U34&i&P?G
%:eGr9E54m(!Iilfh@VYHVN1ob7j/gN":VGTF"8AD!fI*IUt?:3M,6U%<H25#fn=p3Dn8p$bT[V%AT_B`[h6kQQ",ok*a%6$qDcbm
%K5&DtDeQjrpKZZ?S-G6+A-A2=4\[,\Ed%$LYuZR`:KGUq:,^LpLR#MFhFf^cNAuY]B?-0P$*mR9dA'X$cK*kjcND`_lIEb[CK5f.
%0/iCW3[2IHMoN?lie$CfW/AQ3nD*7n@K$4@]j?h9)Nq'R-)cfV<D#)JN#dCI.c6d&1deUVM7NY#6Q<a.lhK*OH]-.XBN-p>Acsb(
%RTq8CIK/kL7%,4:*tbZ&W&VW$VgGA58UfbBC<nC.p`(cQ7#[IpZ5-?`0-b%2VXcLlcQda#m>h52/mhje7Cb`uL-Oe3ehP0A2[dr:
%n50(1'r40-h5@A*`ND/50iefoC8f+Sb*:0B2\<5bFdP21e.\Qk3O#)jE%Nmig6$2)4)=!7jh3+=Z5.'O@7&OWiCjhqbE_M@N=_<'
%c-GeYk,$;Kp9U<m>=?hRDFm:IVumLa*Ek@qrQ%(?&0/ZZ%-nk<JE/aBMRB0J)``6<1n9lC914o]fRXeSVFCptFZ?29i5lPGZp<[.
%2L@"lqCYW/'G!8HPLOG7(``6=`:^?F9D=KHP[?0\,0C?6_'Vfs->^P.A.k&8dEc=aDR(h4FSQ6jc-38M_2^g"eJ&44RA-TFJ]?u$
%%/3gG8leY9gsb$)f')MEUUl9mUCKP9i'dn(M=<?b!k$G.q&;2(R&_'"n?^4Rm97NuL9_XH2K0+)L;PX#.ag6sAP:MnJTPS!4#A<g
%]K\N%3;pb<0Je"fI7gHV9g@g;-k;6i[/9QX:3(q;NaW==N)CQ(C\Al:<rc$h/S"&j2k[),QO^FA=TcK&g%V)RiKBpBj&SajC)P%V
%3Z=JYbaWeUK9[5c'p;)k4)+#hTC+feo/+:g]U[s,Mnf"mLI.3rOs"OM2>i-f`=;Kg6nEZf3Qm<k/334oa]Y"QeVYRETl-HtSreZU
%]Hc1jeC+)b9=`c-XcVa<p=aU,!`olt-tq(<FEM1%WJDMTW!V7YkVP-HT2jk(mc4Vl(Y!:hqjtWnMmKn2cD8UmR8J?N(>F@mD'UB!
%L]^OQgX#R6rekGrnbDLA82<,*Zfa[@bLp#u*U^ULF_op]m-8"#I,"\&91qE;K_W-cCfFH*@)Ft*2DETt)=,&C:>0l%Nma@,P3e+j
%`4?VNr^-hF&S]^V2E%n"d4QZMU/]"]O9&5:$XRH]k?5-b0fRMVW"%]ti[.!YAq;^(D7\Z8Y)*+<ee9qJXi;%/+@Its\kS!e]0]bT
%]?cg'.m@*&2hk<DQ?t'X&$GM<jcB2g&>hsI1gI.R,*'k_Qfs!PHLrA'W!3($QJm%L.e7eOG>bR2F.5IeN7_]<Qmt^"Y#mg[U6W0h
%l*VD6lmQAa[uHWC*"Q?HkfGZ$QoPLSGDS);Pu=MaQS%\1[kQ7=0s!#AF(`lddZj-#l?3m-RmY(h',=\g`OpF_/5?:2P[p]a\MA)-
%$r*U8JCSk+[n`pEc(di)+>iZ!QOK#!EQ"2$UT(F\edS(\cZ-').tr9,aBgZI^J`3-CBh5rP*,bE1BuZ=e(?+U?d*-/?C-UOL\\5d
%-tZ\3aV(Cj$JDN\aVanc>27<D]_tL_0Pjk5![hJT`GILX@(6\_a@4,T)RdL.+o:@S.qJ75f7)Kj/I[]Sm6S4/VQg4GKCllk@7UZ>
%NlT*`)\UTs&LG=>T!CWq`/X_)kO`_22\7/\VX4Z>RJ]1^b\l=qg(Kf&&fNMG\?1>MKTe$C2K#DI0-LOc5$tUGE\Ros/S="^P!om.
%%]Dal4$+uM2hb\%N5_"1FXmJ?UpZZ;N[<VK,=TKM5?f^%1uu)nE?QS8Be>I97R\hc*?f2Cl)_gt`'pS_Y^L\Q-=2IBJ%']bn;p-l
%N8i/)(LTLtDZq>o/>CH#]7NlQm#./*Qd2Oe=2(8'VQ&[t)9%SJ!Rc$YOa.XUIlX=G=D5,!LXb]DkDY!j[,,-7-lcM.0Bm,6!c"\.
%)$N%c?Eh;m.#^<gNL)HtH$6?BB.ui:<J9l5?"gF%7[t&gLZq)l9a2(uU-%MCjQH^@+4S!YXsHY[*V_h6r'S1(+:32<mhb5fR=%*s
%!=<L757,7G88'-0'H5d:nF%aUZ=OfcpHDS_QRn08LZZ]YYp2@ngs+(1ZE3JoCt\mlO^i-1om%MS<[<hXfmW^6a-:.o_'ZIkktr*/
%KX:'9"o3$&@:<c;1(8Xn,mF74PP)V0^iZ/I8J#h)mKh)"Fdo-I_<=mMjZ/:Y!kAhFH^/JjX5KQC+sg5'=,7kL3S@TFQdMYVol)[<
%13Rk=Znr(_S?PA//mVUH.8^eq@IAh5.GXZ*'[(O$bq'O^\E0e]W,u2'?=Lt/+DK6YMPqJ=Stog9Eq<(?8P[h+ms"Aac(;qm<?u@F
%:ST*Or.?;l%J^BZSNO)Oh`7WDqPpn$hV+NI0=h95>?=gjoXi1H9-8@q&([f/N(*-2ejb]/'37BG7ZYcR0\bng>#aqT>\bh-ft&d'
%Wo$f1jqchkI0F<l^7?uLH^72up=&=>Nh?A5m"qa=f6CUg/JY?_6L4\h,_MPFbJ8&q;_jCF?)Sf!@A#*&RcP]!<O:GqqP`pf!.f5.
%./)WFX%h<XnN8ob*rR&J23cb6c"_9<'.>0>QqD99R,mZ%e#`CJA%4<4meGRI#-&V-C$,5M2KKhikH8D![5M!0ceL.1JaH3K*-aVE
%g8:`cAB&9@*+fHjFn7T3=APG48Mel=NZE8"QZ8p(bhVQ33c.<'g9tcfV58%^lnj/_c:>Q.,oc&715Xg\$d[nq*TP4sl)CUNXCZ[c
%>Oi\qNK8!9\"]dGLUf7,@Dg+R`GG_m;6YM-^J*0n&onn!C<`GK.4\=K0YG'RH7tZgO8JP?06(EQ%*r'785/<\4\[YO1jXQ-!Sg`C
%M=4B$_R&B[4,i)ZbkH'oBU3edT5RBK5n1Vm>s-lI&EqSVr7lf)Y*[AP0G0<!AoIQ#&W1oPj@[`fqK>7'_+7'T`:P`InkGU9mc/X7
%`oi[XI&OWE.)dEh3LCA>L9rJG6!5.DMX^ob>]145*5:MEJkL6e+96c5g4ieC_AZFGQgOc@^5_D8._So)8?V<[CS3a>2eJ[3!F_@$
%cEA/Z*j#.ACnRMs%2'rXoFhf#k9W2nniYf4M`^9kdQ!.,`HLo0:N'3Nc9AGd+.Y;#g8-A=B;=^/e#W"oC>^PqlLL*fZn(-3>EXEI
%Z1KH$_^rR1_Mp>..-rf]=^`YXLW;j,-sUp:]gSAGBm*Bn*cB!Ugr`!EV-^4HSr%=*%[%1[$'Jl8?E,ra!6uYQiTGj37f.Q=9U@p.
%dqIr/B]C'jm/LpZ3rX.)UfifGEHIUHd!=q*_jbbn9hV+a%tI.0]W+&9gSc/6TXp<9gV)j!=o>22l4CNQbEfEW158W;1I>Zr"pR+h
%P[9Aa_1k+$FEC$B]WBphE/asfUW8-S:o%=;S4qTr=Xjr,3/:Pri:cS>/?Ag,d)jJd191i&)[dlc%pugl[qa4=5ZCL10lq^:H'A-k
%I`T1n?]WUMO0Q\c7a4kpF4]*G*RO?0%hq_'/dr=mWQhm_UEOT\qE]-K>#`rfg$Llo1-N"8gJXa)JlCchT#88S,jhYTd@/gj\/X.J
%g5@fFngSa!)+b_+[4Dt#9,/=X;5$?PQ(W\R=(gS=le$qYJ8U.ChQ&DMR9F>g*4AAQG7EMuQI@Km9@'EtFnX9M@(0S\:Y1]EXD1Z6
%kuXCQ"$X"D-IgWuiIn)6ik`^^I`lcQRL1[P$ek*f5g.-I+HRtK)`e?5nrPgLKY!(J0%jt!7@1[%W%;ON^^])?M7JKR%-]eonJ$Hn
%+XULNG)E2s!M;B[Q"=8M'sTlu#keB!@VRgBRKru"^,IlL.s92J0b)(`^d1&H>E<pm^egPhZH`aPV<lnG^=]o9Qk"R":nDNT+QQ4&
%K9?f;4V4KjQuVA`&+RgFk&1mA^Yed.[bddec7]J,((52O//4Wk142^f_JGrs7b[Fl1u.:,g=Zg8:NRiXD85buD(FL-T.B-]7T2^L
%(Dl6&<`EYbh#]U/H@QpiIBRmNQ^<.#E!i\(K\=>nO&G`-%)em[_gS6Hk/5(Ij;qf]nLF:HidL9NSeKS4ZLkd@m/Q2;FuOM,p-^dN
%qf_K>0/*5%i=u(B/D5oAF2O[+HFWEEmbI@)'=rsEU[^PBmGb8:kFU///2d+5&/k:=<M8+&d.uH1eH#'m`G<-!n,$7&oN04n?Gttb
%Y:`_Vm7)t<`Q]#H/p9Se`OP+*FOFYX(^EFMV/*Dkp^Nq5el"0t)l3[+0DYg;8$+oqS80E>Y"mb'(ASBeAoJVeVheoj^06bTb+.SH
%XT.^YQ3&Z%h7<e-1%]l;E_gJ=DUPfojUK&_<GR<k7FfL6#49*jNu<rbY]$H,9V\A?8tXm/mRei65&V\VPTUcP6V+"iLdES\2rKA)
%]dPr>)b$Ku<L04aZ!I_11I-:I2ENqr?io=!&PqC6EV)trW%'$r%k.3:8j@7:`Yu3"imA!A6i=#T,R0u\H?p*t_;\f`bZ8LuZAg#Y
%8)B1o1Z7D57[rJc]9.=olf5X>^>S?j@s%OFBVSu9==UhB/dp7s[*1j/q^?SHSS7GWRg!KtXUBnbAld.#OEXorHa`MqGdE0CAaP.$
%BOd48&_ApI#];?f[NNj#"t)Z_FYRD]o*Wjg?1HNMc#!AeF2%U[\dAjEG<i[a[s-Z5]na%?h6Cab[eBgQH[>ui#8LGWeeQqdqY'?^
%^&,(J]5MWW>?Kbahq[$HGDj`%n'.D)Ci7!!U#oNX*2:]+6eKa[9k&$_pu\`a\YjB6(7TXlRleUOT#]ubZ+6cNm]PqKQ"$5pa6#"p
%jpi)S+lD)Rf^[\N1H'IIc(/<bQXb*Gf\GTF`d,Pc/e;1C2n.ZYSIf6XCNB`V+b!J4"G,gigatF.n]a4,F+Z,VW>C7H[ihiL'V!i1
%KG;eq0#"lS2Ku\jGE'iV?Bo?OHYX1EK=9AiGDj_j@ZJZdl+:0H].H]nn$m8Rr^M,4/LDt\V4I'6p30fI^Phf0?*V/,,<eh*A5=\T
%eXX,kCsKMBH1s@u9mH"9!)8EQ[$IeM^a;/-9p[Ph)$%Pa:p3"bZuh`YN3dX>i?Hq[pr,ME_ACAOdQP4oCs<1fCYRBQTXJgFh=*f;
%Y!&A-^=\7ahd^ZerF+?=IZ\MJI=hKf)8DJqiQlb!P.Ws`l3%(WM!>04BABi_15G>hLk?j\)P:iWc3C'5cb[ge*3$*E!fgD?4,%JJ
%<Ee!*+uZHbKkc*cT>$h4T'4o2$:cN`DS/-fiFDMiK8mEX"PXSO73sLlCF8![8B`<SQ^HTsOG<u0PlbS9L5qa0Vb1Ss6BG&sATP:!
%eS;*qS_*F*B;YfAMt]_4KGZ@M/C,8PTG`*(7L,-tj'[3)4.ZO%qF-<YVtoh'Um:WDn;n=CBRGB&B\Y:,^#8\p9uG.*^8m_d66Or[
%VnhWreP+Ij4>9+oMkNjmbX)>)Wt!5t9c-[QC2WT'L.(Z,OF2=C)k45TO''W0piMNbd/2k5Kmkb`\1Z14@:<>],G&mA*6c#terFe'
%?_0!c>s':-i+3+@Vg`-Tb"`ruK.9;sMSqRO5QN>$Qos"!)/?daNVnX!eEfN:h*Ct?62k+TqJ?l<HsDK)&k80.[l^;\\L/9to\1Ci
%nasOMYB(kS`?gLI0-3pV^mZ-8AjRkK+JDH2]R.]`<*%5(f2)5"5sOJGY+L*k%_b)VMqOX*U=o0>P4L4?L,gm*#u.N2D\2/TC8&f\
%,[%%DK`L\]V3(Mq$p$X-KrB>Cc;2l$"YVW;0$R=#LL36!X,P5VUK8Uq4rpFOTO<Dlk`q]O&+]@8kIs)0]5uKK<0+WY6%=<a!RDX0
%!KZ-mYgF)EhW.g)9Uj\Ab>S%cBe$FLfCO=dpJc.I>f3,i?CY'"n+%eoF0<7WKCmBu^ApGM$*\W7Gk!4=;uCdaQ_s("q775TO".DM
%):r?.S>_M9N3]W^q1Yn32@R+@_arsJI*[moO%[U6E[Ze?,h*o(J,)r&JqSWoh&\uW30;H.NT?GW)"<3D]aXY`_R>eVa;W@mf@BT+
%Osj4'`J%8+U57ok@(i3t!QnK!V-_h:P6]/BH8g?&N!_UO=O7ad<V@*uBI?2,7^PTAPim1R*T"8XT>4\Sn_AZOmJNBq>3CV//7jl(
%f^/`dGj^,,HIKJ$9"O3RATZu.?s5cboL:tpXq;fEbVMa9JQo^>/roalB@<pt,n)"L;Jl)!%cDW*p_p2Z,D#q*Gs^\@SERn?3,]&Q
%JRm&1J$'p=?S0RSV$j=]b;jKb6MGP>1^83^/mdT"IG[8ZKeM_(H7uI3H4%=aH(Xg_-of<2_f+U@>R+pqF54rGq0;*X2[)sa[N=Q8
%ZH%5j2)cn)ccqHhnF#&M41r5mqhJ,.Es&=alHaO(27rItICjWG4J.'ikNn_;VWY[!9[E[mF*`q]?2DHm'-_$Qh!Tj`kMBk\n@i2@
%`ln89Odflcn!>A-_;`ZgbCRm^3@pice@)b4[4_b>LNc)<gY)crHlXS;'NMI5C"or_k-!NgW@+Ll3N#B9mD<%?e@G?@/(F`R0==8N
%9h/&1hs73;G&Z^n,UD9n%EJW.o'H4,/?CGh]\NT/cTP+o\o+k%F7X'P>(g5Ep%&dfr^d_9K<<+fm)[$<WfJn#4A\:Y=!bkPOlmCb
%;pjpg.%TducF]e*\QV@:J#jd;>hZ`Z(S^^?Rg6pg%chm""01>9GDhf4H/&'(kJ1XqI,B_$5pc-d&,0XA?@R4r$/LedUHU^4h-tEm
%a.AKIo'l?4Mem9ocb&#Sq:$).nF!p-9>%q)qhK7NPCq6NRa72(/WK8404aZl%o5E`H^HbWYB/SQhYDWe3B7K1]('au'Rs*;/:d>[
%#H4o`[u*+hH.AN&jaQR=odba+9-`nt/BibMgTQ>aFmZ[K=%J`tbGbm]HV):MI=RKjcVLnc70"Gb8>3X%IL47SPa>LgNe:lG$XIn5
%24nN&5^Raj!JY,[BX+qdSpI.8Vqu`*LmB(*`!"7;b)n<oZ&ieW&c<9]7q8F0?\UIqX,&EG1$A#R-r%es3&R\2\UZ(iHH^NTHRbu-
%a^3?p2W!baG)7uP:glkcP!oA"6Pp2+ZHD<f$UKZ3<$"l_DnFs&W8;dLQsDE``cmVe$X:%tGX1liaojaP9!7YkC]>U]%M9lWk8626
%=FMr]1lFm&(LFgdpl@NKO9$KGc7+4+C;^,_ce]lEm[Ko`HC$0)a(6#G[/_\.nZp;#ACk]R)M"U)_K#p<?5$-H&=a*m2.Se8JlXs%
%P_KMBs85,i5FNd.bZ0X7$Q,`M>Nhl*]`OXr.+Z]s:BbUrNP3.ON22V^Zp.fO)tV.&NpE@h`\Oke>"I#7l)^rf0sIF*GI^I,F_n<E
%(:tGp9N"u6Fd40qK%ul%X+448c-U%i7SF1"hkbp/W6#JREWmRd6q;12YU#bI*6Gm2$Or*s[HcNL@+PLDC=M##@W-gb]2alCG5rp,
%88'^ZB6I9F8oR.>Z?pnKf*Jk^S]rmP";],c)c@ANnXi]WTKI2F"4H<QAbDr/YQ(f;KggHXL4!f]L(3Gi6#"i]]E,?E3m,e1.V&uM
%ONUZ?#KQ1"ghY"ks-[tj?q^YP\VUunZi9)eI"&eV!Fl#0'c#lM&e'<!l%aTY[0It$1=#\HZ\%k`]kuNP.cN3"`P@-?!l"k<]Kt..
%?\E_8P+=2Y#O&8M4REG=F$N[r5tL?92NXgKIh&=JTTK.VJ)`Fr@cj@c7d-*\]eVo[FOr#jFQo&2&jC[>&a>S>H6l.d2!Gb;WHhoR
%6PckGd\KoIBT)+ijbCdK<c0`cXWTbpC'E.TQq*b89s4hKf=-oPnI'=j1!RQL393aXcY,i-V<:".'Ukk#d%<(8LMFq//^P?`\NMn9
%&+^4[,)E71KPH>OH`37sWhkDaabOU[Tj#73Wu?CE:2i'9eWN;-1h02^jN=;>asDa^),`*JH#ddr.[T5=,p18UKlY:jE_2s0l?>E)
%="_se$]$:%Vd?lRJYXi[O<"YfL$Z9I3?Q[%/[S/7ZqH0t&X-WmZckB*ls2/qMd4ig;P%]69&if/f-bG@7(JgS]9HM/\TZ)t>mdrs
%Eu0RW.B[!_X-Xai-+eK&TjH0@?A>MI]FXZj>eONS-KKKDTjFVGbB3DDU.pj&FbY5,Y$P_=QS.qd6bTj2]ccK*lD6e[A8X?X0@f_g
%$N3j5rK:I$<7`cLoLj>7d6bUt6bg"T0?8dL?`NFYmeWb$qIR0cWR<HH#gmFRq?=l\EaGfn0@3BB0]1;3(ZbF(\peo:UC[3tKoR#"
%&RQ!3NYnoD3cp$1g8#s>k_O6BL`STd\rQ!J,KN)[^NCOt7K?T[30I&"dd)84KdlfDV:D/-r1IB16.oS`k?<bK,SYfL:69X"74:;M
%C'W*8TsDfdJ@*Bl@Rk3!FZCJd,uKOMdpg!,BEG6q!Tp6rg5:#o-03<a5cVh2VQ>`ThGbHu[!I5N^+IpX\Sk4:CZOl7Fk`caHTLH)
%@3.@)bepZmY%3W0gRa$.9HF51$-jg6]G8rM,;NK9)JhM2?=o*V;micQEh2c--<@oK<nn/$ctWh_SPpT\e5XU#JRem:BZdb7,%WZ\
%;K6V$pFr8O<OL!hihs]93QBM*+GH\Z$7\A21h@]93sZq,#K*Of.>LHaQb>:<M38OOZ<<X2>XS"5e&k_4J=%,WaFMsp_25#;]P9A!
%bY3"%&.L8ob%l:CMOlVEd*055N^025T2A+sX*WCF3(YnK,I>"W3jigWBh%XuOtG$?dhX?9CL^0+=2dNVSWY6;-5BEel'=ib-BCF5
%k]:EM'iEqc<3noM'?"b?&)0HaP:Xik51ngYF`C+)EZ]j9cOumfGh*"p)TYJ"ZR/f5<O3FL)<>-2)nShjAAK7u)7h'm_rt,$M4JWg
%5NWK0Jr-&unDF9F[t">)5Q9X?:Oi/kJ,/7lrnF@N"RL&U_lU6!g>@AUqu?Mj5Q9VKro^2oq1jIpmJHdQ^]'RLrR4!kikPHa+*$Op
%`r@_^#V$u)Vbn+ADY?bC9/0&[r%M0$>AhJa1k_5tD-j6)Rb>fmVX,8?nYqgfTT.386El[@P<FHJg75g9*ajj)DF_&gSP>=P*BKp?
%mqiWs1d@a\@OhPB^W2&4A$^EsBFmN/f&_[UC\fEPUb^mLEB5TAmVSUQ(EX-s22-YC;:]A++?t@:rbs%:2bP]'H.PRMSsKQOq2;l(
%,en^7ceq+BIdZj9mELm19D+r3MuIb?rW?Z!'[n?@]JZ#c#O:#`adh@'5c`sf&<]2;/<A.E]#tEM9Oa3)TMWCn"JkuXS^8Yk%,.X@
%kGp.)PgB'XPWdd[Z?n*UChd8G3"RG9hJA!oF@.uK@,r^n7g9917Z)qaC)Y6)k2!0P*=(h80l_iM'FQ*p;?E$C=JFC_YJ[@YXumIk
%(B\uNPQUU3o=NgWr;%l!4f.rB5-,ZqO%'knaHfT@/pEu+padRsas_l(PgFCUh(dFHiW1&eR_H)aGl81GNVnI(<JrHi3@s23lkTI2
%K#P-pn"1ON,Z-o5q:pFVA+aEXVEJh\>ln=!IZFm.g/>m)B>I)O%<Ym"5kj?-q1_.bJlDL8@PG3NNOr@Y;#0VS/:-ErNXN,0q.TJ\
%G^sD6'U]WR<l,KOm$clQ!h8@#3-SFgTQbJ;V<.#:(Z)3dJnV$0qI&"/6GqDnd3'A4h,g):,Q_W]hbK9W?X&</q#/73hr)\5JHksg
%If$nH/M?]A$iW1>>/B/"\hfCp(qrqYZ;!EOkd/eAH?Z^MRfVb?p,ju=[lY`s=22Gr9TG1oG46?nLW:=-YMmC20>$+-pNh*frtl#e
%HhWkR(/@iH`^-Ug]\@CKk(cN9TgX@>Y_1;74P]=WmR]B8%K*r2^YSk@@hN6mIb"5u]%,!)qAd<=gs8o<J/U5"($=NjTK]-`9E@LD
%mGYor"MX'd:?\:$'@jV]g\K%KO$0Au*hH_^]Rk%or2/p9-29^9V&_JAY7QktkRUOWr$2_cCl"+'c(S\D6Ph`!OQ8+S`K`U=&ONN@
%`gL*]=r#H+$A+YmL\h[Kc9eCWG1]8g)^OoQ'!nY59`ac_"To%`C')7Jd;Obu1\ZSDftCDQjlj.QSP)kWCtsF5/Ni;I8LcXf;d9t2
%4/5K):D^a&bP[$RNa?5<:?a0joV0,(+6[k0#ITb#3?*s83Fk/A"EDM%C6\X8+c^Y=-!,2AeU\ahh31d^,-FD(Y@%rH@<(Ss:Ji-H
%79s.ENTjIUl%]'PTC(''_]^<p'4'uj#ur&.*hh#RIu?Zmb7>D,o1'-S`-T6VY'OsiOTg3G1/8jI8tl2?OHr$h2W<9j1p^Q=dA$`+
%YTTR=q^&;KZ`Rm<-b:*E/*#!ab@kSt8@M7hAG(aO7l`D#i_WI#3^k&"Z=b:K/\o^5'*X>u>N,17XmW9(!ib).@iP*n7Q_/al8V@4
%<1g7/1h%C]haTK3&[GL*2.h_O1jp07haQ@F;2JT.mp4H%S=r;50'kB;dI:Gk@Md:9(Vt$g>uZ1f+k+urc"e9GeFbV)Cnhd#-tsXn
%AIN8]F(oi_fLG\h7Q%VO^A"+8U[6a6a#;)\2I[Sjgt4_JEU%=UUZ1%,`AT3[NI#E9EbpH&\T3p2:&+tPn_rH9,IUI[pKNNKfJ]0K
%[SaTE&K2W7mi98_"ATYHPC=[`NTQ7<Pd-4RD5/**-lq'@BH+d7"t(.oS$iol\A6?"aLBR,[o&-%e?t:_7Uh7g>heIR/&X@Bo5ff2
%cR#4"Jf2ht$?ii&4@!,B$F3C1"Tlj;h+^:aY#cQW+(J-qJjIip<nrf7W$jSFD7GP0P.VCWI\(:tOpmS\6SV\)A:poMQm1&gV_R;K
%UN)bOJM.^bWdp81;)OS-@(4F`gnA%+&67D;ZHGF5UC2Ss7ZHX5dVI2EZ])AG6Gk5afmm$GTlfHJXt8&d<6icH_Un2A3NQ%h0m7qp
%?,Y0!MUKB,i8&?]Xtm.]!^rIW]-7"Z6gX._EXjITjA0j,,tmQQ_jildnG64o?h^?YnU\#[A]qB^X4B2D"43d.7$pZCZNQ_Vo:50j
%aEd+\K^1$b3")[PcFShfflb1rX(&gL46V-6=2K/Bo]mHr.,qM(3_f<M7`3?ge0*npfl*7DGKnF.fdl5_j[!VMHLU#c,X.8%YIseE
%hT`*;TO6F3]HF!tF@][>MI-I+XEXR'T%1a99]YSGGYo/c+1MNg;D#6Nk=d@n6/OKKK](I/M83LTi>2siOu)Q=`'C:Cnke%d9g2\c
%)`6`a;Q^UuYSB'HpknNpr5p:\jOskkoo]Jel+2(;gN!lXoI85VbUO?E7bu;u4-i5fltH`+B56;Zp`M!he6*hR7J.?+(W0Cqa?*1k
%1>V8,.g4:5A\E1g>/QG$iNp*pK.W3YUo!0_S/Kf\(K?Q8304pVUfO+CO[PZ>!SO%!lr"L\(\TQeO\_"SFZKoQV'Trp#(qj1VE7p#
%*2l2CY[N[oN@#1X);-,IX*%WI.9JkkpLe47SXb>5>1Y^+9+`#B-O<(]H/(1kSK/EMU6`d4Xl%K/*+0KtAS0tWBgdMtYoBiO4JE@8
%D*C<o1g>_HhQ`blePA;+FYhV&6Mn3'ISiGWK9%')r9`2N.hg^Q)WNH5/@/H%(rnG']%V67G)[0_AlPo(m4@:-DelfB-;ra[EufF0
%T.UR71.;L0*Us22]O!3<pH2f;p\(k.V64VKC>*L3,XImWO5g[^;!_@2SR8p'%59@A6",3.TLEL<T1^NC:.6r\>F)G2g:c@7<;bJ]
%7Sk$#m#CY4,:G63\50Opkt1J"6R#TE-0PW7?n^Zq[9U&?CQpD@^V%s"X&a"P$.00A:.R55JVrN1fEkTleI[:,n_4[mBbT<apl(g:
%3=E2E8$[5cBNrV!,L0&(N.*dW^E-1<Fu";gfCs2EU[\82X*ae(4*:Ecs6p!dIuV>XnsC!^:VSGWK#?'ib'h7!I5S+.+`O)s/tbkl
%.UhW=(co8f&"QtV[3X,/ADm$?^il8(fKMc<U&]fbIB.0o,0#FKbYD1;i)thW$@&DB(#i,*/NQV)irdYC5Hh$m.c@8g_.[L9D"jhH
%VNF<`[>NkG_8^[5m6h!"SV-aHf\pUf0/d69kI\[+bV+WqZH9hlQhXMnfn%KXGC&k2gtH_8Yu^F^DCK,C-.@RNBelWDgAJNj)('uN
%p09<J[p01!mY'aZLJhi3H[&t:qg%F3TmHElVZ;>MUY(1B5,c.p'YlBH`FSd>r?MshVjIV%C\'gk*X:0_hP]`Z!#+^PXDoZ(_T3'Y
%1m@Y;-Z%u37?F'A7=meIZhb,HC*"8p"fgum-+*uf7>jX&PQ?!MD`\t"Ke.6b973##T$c]Te/XoS9X)()^JjDoqdWIo:mi6?EFu9#
%c"7)s3WI5GS/03)=))&0dH@X^F%n\9m4H3d5Mpb+\]6m@S";cL+Yui*qVf?'V-kIDiIo(@5k#4ZG+=7kV0?j9e'M$HcG$T\p>F]V
%rT8-@bgb`f^c!^Nqg!pN((*!T+*#YYJGV;BC%&]Um.o&"%!,l\k`38$BB%08Ut>A7K@HX?J\2q-_JS3ta[=A;G3(Jn"\E$P+Tc>X
%B05*[e!s&k<@=SY8K3*sqj=@);DFkBB(a/#b>oPpn@WJZ>ZJ,L?M8]SZA6BE<2lC6VjN!7E>h#&c]TEh*e#SNAMES/lMTN;m&g5n
%']1&UFJ6c]BIg"b`tgskXSRPSDb*[=@J=/R)QH<J*LHLL=9u#1)Uka;d%J=KdBmm#g:Qj/0VjGdGW9b_6C0WMhfG5VSDB6CbN%5N
%BR10rp++`+Vq*1SL"H#AcEd(`(/8e),>$$0Uu:f4HBPJ:?Ul+5VHD2L@EZA5]`8MV&FGqrE^+,j"fTi8\Kj,Wcq/Sgq19ZY.eO%$
%D'BVb-9d4<6bK1QGeYe)3ueKQ#J^`fIOWnG4F3-s>.!Y)=cJLs.JpDt;"Qtg8MZ"[1A60k,rn>G%+)An23IIV6;1[r5Ac1%VQB5?
%,R'H:>d)_d-1.P7Y#C5]IB#=6Pr,n)14!6iQVG3t_kYEX`Y(,'1h`;'VGA8i7Vqne!L$u6gsr_5PUT&pd)2@PYSm78Vt5OU[22d2
%.6dIg,Le9Nn65j[r^/[2kY]""1Mdh)JQXK3GStk%#BF>JVT_@f!53>"=j4O1;7gaLq[MBu316t&Z@ATCPlp@,Ml52Nk[!1+/,,pl
%Buc'F?Fn*NPO]>tkCUHB=KAgr37W?G@9\P6FBMrbhOE)"B9e@@\1]T5Fe6kmhAguBXm/NQ0$#-ImLOeCo'tj!IY'#po\0:@$M\Aj
%s'5ag:\4SK;IMZkBI8W4OpZMioc?I_AX27sY?;nc":8hkaaKlO';=)il/YP<IDY6ocO!-mde9Y@U'hTC=9J?H,q[(h8Ya]=#Vc'G
%PL2M_A&4Al>E<Z^SoIs.Q<%ZZL@:Y7Iki!'.>=\F$kj6i,,<[>47@0[pFld.R`G:qQ2([iI63rC^Xc:K.U.<UB,UprO:hh-%&Kks
%=<_mB0QM=$b["3-HD*c%5*n^4.U1U[oj4'M1/Y1*J1+<M3%ZN4GCNMRW(]!84"0.1_h)q<K,E7e:9HH?nOG!OEO_gX/5l'6eUKOb
%oD5n^;=mdm#^q*P]Up%1npRo_4.F]tUX:Y;@4a-tDD%<ck0+moikrZ?)*SU'MhX>T)Kn_(Af47,A`//PF:n/j*2UcuqM'#V^AoX9
%(gC0BIU2Y=R'&8<oothplsrQf`q!m!Cf0oH=8cQ!nPeWBLE$Raoj0jLCRBd#$16^So\"?cCnT2PC7B&%i[7iSZ8t=59=`[a*_/Jt
%K_N`>c0.$$fKeRLJa0&E*H`ibi[do=6r-=@auSK+^ID(i[fS"hadoLH#Y:Fho,Io+Z:WX$LF[!3Z$NT_g1n*iin]p$0j*;8[mK3s
%&Trpr0G$D[1c`\.C]Clu=^,DWX:r$`0ktX=.)ZA'W?9@Q%kf.5QT[k;8I?jFOLFsf.6.A"X(:.MbFU(MjrYGh.',G7h$/,G4OhDO
%b9[n5DQ44d#@-/0Ti?U52TUnn*@oO7+>&kTDj]o"l&&Kla2A??hODQ:>i0).,I6W\)8-[^_e[X$C"<=uLhJT,,Jp>67P/Y;@^]LH
%+=@d+/pi@J>)$[6/dhfVfqEFRfu@lXZ8T;>kaAXI"-#1/jusLfD6O&<R6&u:Qhj/s^-uO$fLtF#27IW#Z<Zt19\$5cpu1W;W\U"M
%*/X#!)#_I:,\%@lnfHF\:tKraltJkG6cU`Rl/:9sq\DH_;@F+2O!f")<0kK_0p's+Bf*n]jV=&eKtej:b\rGXlOk(#L,YXjAlkY3
%Q`;r?f6/16fa:4L1_Ui)<Me:04T'3MpWdgA4"mY`;s"JS/bTeJ+/7YcrN>eToh9Z#Wbfq):d9&M$m98.09+D;BqV,=Nb1,Y!n*;#
%c;%k7MY@gW_ih"H8@<`+#eT]RC(;m@-lPLcbgBDj7F$j9Xu*g$]Nt;9-'BC4aI\6!YoP'Oa'*R[YY*O+<X.]i-q[5"#$ta3H<MeO
%XQYOM5O?tE[1qp1N$4RRKle_&q^/X:4u&+5W>YaU_!3K(jIF\,d6f1nUS<n86WTg."Im-[U&>0=6;V"BT<RZUPU?`HF?O%T6*mp8
%Jb3U%?peBe:0FZ2@do\O?l&#0\=8iu8iAFh,RcG5A/#-t[Nmeb%*T#u+aQ/8$?[hAgH0n/.39@e"f69pW5RkFqB1re,78P.c*FuT
%GD>Q&Lc&CJD:#[CJ<Zcj0l1.m*M$HR(8t=oX8QV-:3^S5]6cFZ.KD2gmH,tj09@]&7D1BdiVd5XgFPh4[(DCkZKI_r!WH4G>rFCu
%.?U]oVQkQJD0^9jCA8k6PA9nRk[&mkQg@DRCn56(,8[J5&GXIr0.LXME*rZK:>ssS0%bW?P:+aXoNFLpHtbpo`=/>V$aXL>$Kl_#
%K6>?hJnGBGMTY5F`Jpg$AIj>@Gu09-&T&Er&f_4JA\4>1f8_jfD=I%n>qQcsCdtI*GLup&_a8ZT<o%O\95>XoCI=5@D'F-t9r_@@
%=LmXI>-a=o?CDCCQrcA3GJ7NnSji"4m61CH0`UZ[G4BmiC+Z-HB&qqG%D.Kp^8gCB74M\7!FtfRU17E',$WWL\5EsFShh"?]6@=j
%W.?uQe>./3%WK7TRW';,-hB/\?7hGg5;kaS\mI/2?oKLCWDg^a.:MM7A$AWIJSTq<dq%b90QlMplEi6fL.n-NVTt84PJblf\#GS/
%eFC^[Qo[U3:'sp4gnr@*;b(&U)8'65dP;!bQ;5.G*AI,%GtlQ3a^OEZ=ZSDkSU+L$eRHV.*`f"ljH`Q+V#q18K=+OA:(9joRAEj"
%dcn&Zi9.>ml[E&!(&hF*9biQg09j/uf1__JVTuhKSJ%gFPc7Tue58gX&=GR89V#Wd'o(,c.:MMWD_UuK2g&`"3[IIj#ucTt<i41?
%:9%Kp:0P-+;r#k'85lFrWIp?8RQAD^*?aW)JVJ[1M_>u:%5!=s4=IRZMVC0'7jC\5ZZUfGegYM&J7[hG!s$geFkroirbf;IBU2D:
%9.(VSc3:_SPAX#@\YYL$l(kP*Z7MO\Q;5+F*Mau^n^a)(PJYa6]"S&=Q4B'Lh9nl'l(DLU=1P#W<lgUkR`Q#0!^imOojm8C)*5_G
%SM!:-KqZt66`5[4e&,4;(b7a6JNGERI[W[1FS^X_,>1NL+rdh0ROk!FQ;4tBSJIMd^+Go<Q4DS#2KaR%SLI40Kr$TL5AN<u/Y+%X
%VhLs'AEgJ*F9X:e.W+@7cB+l$_pTF.FD=o=4Y3-BQ4BoYG``q+?%u)`6`8gr:(9RgbKtgh]#a>PL/&1FVr*5(%7@&:d&CI;TH3j6
%+3Msp\"Qa<ctP7WC)B"1'%k^`DX+U`e>ZmA1mpDT17erKWDg^aBt('?_pj5Bh+S)5Fde^Z,to==E%N:8bouHc;p<`WH&>:dA>YC;
%YXfbDWO'%&3j;_"l6ISt23W`k:'sp4gnmgV;b%fmn-Y.g2bI:%LTT$C>:53.dq%e*Y]ZCnQkHi&]5=)O[a';hgH&';:(:F*hR:]8
%>6dCfZtEK%fdn-Hj4098+,3OQTu5fr)*0p^RdPpU%HZ?k$#m_b:&&E46V"T)X.AhWaC%eS)K.UN6%t@V)_I[M%O\\c(cU2/r7hXq
%+CMHWmP[p2h3P,2leFFiY6@rKj:T&g7Fd4-8K_BP1A<JZ2q>QSBu%QKX-j%G-E24TY6^%P72*aC0nWmRo`?IZ%7sS6B#t3,A8'^&
%pdSW=:>VG=W/WhX9[++#%E(i):f[l+luK`sOL1MdC`330nugYNqT)-28C5IE"'GWjmVFQ`,0PGEpWt*;+H9R#i,KA282:*_W.qEs
%e+JX)fX$%3.aTA\<M0,)QDXE)?/!7GYIMaUXG+UYQi5mA1-<K]s7bOk*e$kZKU6iQp"t8T:sG$@FgGLMGWc@+7U.)m,"3*4q=U#i
%^<t3"I_9K'?Lf&]4D+Fn43O(eYbRV0\G&\-2`M"TCcr?Z0NPq$AAZ!)$k];RC+RYOe9e@u)_Z$ofVGU@\Z?PKOgO2g"W7o.Kqi;/
%l/=[!fbT(-MB<>;rN,JYUF#At<ibp5X4OTTe,[[25#LBA!V+D$bK+DuQ4t_WMFL,AE->MFdAUj*BQaBI[*0WcipFk::B&-KXf!f%
%NZ4B,`,79Hmc-.k$Ofi)X5:N4!s*<Me+;o>dZ4BMB>";1rO^ph8^"PX)oK*TgY3[/)J()'f<brgb&0EpC!.7=O>Vna2S@,(im[ru
%^\;ePg"LL#\F(>Q?q/)n)CI[p5KF$O@WKV'[,M7Q`IVlh&Q;qR.W6]u`Pd:XB`r^kV0br!9man8JBo0fP?iH["`02qVVTpjf!;7*
%7(Caa:^QBoN%5E-iAXqLre6]DEJ8u:\dKjZAOd=%s#9AS5)2IB"",b3>AI:=D2$NYW/E#IALgeOfk,<Nju.&Ojl3'M9[cH:B007>
%Xd3OVY?%/ZQUb^?Om+^W)+o#@YT/p>fq6p0[]JLGB+Z=n`Jcc?;#,"0='lNPHM/T,D31V-c#tJC*Y>4@ZBcu^O2=hu.MiF<33)P)
%O9m`%F_?/53<A)8gL?mQbpk9GTJL"0R(Z=jGE]RKo[K)O(t"/(oGqIL6$_h"9'mp5'SLLrSkoV3#rbe+]&kaoc,"X'Q&%;Z]<t`@
%j"09tTE6!&$Xb7OJ,jE-$,U).0,2cGAYA[9M/5;Zc0D9><=bVEC&',i!Z.5kRM&i8ddXm0c(@YXEMHWfM4)joQN@1P>n;#g.kLH9
%Q!45\3:)qf[?a9>$Eo<)5:'<9#:j,'DqP7H"fbD3`ajuAB;'`REmcj&JmN9JVhMI=G/"ld;E[cU_T?r0S\;UD@HU@.NtcWVd0_$O
%B(UQk(3,oo8+XkG:*o8t<TS./Gn-k6VcQp\@PW@pmSlDebq;XTNPL.AM$&(t,bf".8B)'$laFT^5mU2qi"\\!$rJXR88b7WZ=(=k
%J0/JA;e\'&9%QNak,h=7pXa:sS[9EM-#^Y-=Pot2I'3Fsl\b_nS+3!ApmXr^G(1Z550^n)QEUq\2&l1;)Bg'$Pe"Q.JSQm5'/Tf8
%p7dd#*buAO*o?:!,.i2#$7W()LQT0N_/r'_j!ZHGfll(1qem&%]tX1&Dq+">oj,<2P':&"b**3DQ;-tJak'NY>7!a/En0LDA]/ht
%QYR7C#)cdEW+<ql?dnFTdUjj4hsal<.`V5*V>/;mq2jN`*+mDOo:mNO$i353)Qk1P?%6:(f#KbkKGo'8C;?6QhLO%=IL2bNgKhLL
%&8E^0->dB9*Z?64T2!W)4/R-l3U.aI<C::=<XE7/D&nGWc`Z\>6<XmIUZtSf1CV)S8n:%dBI/S4!lH2e/$nQ!7_\)OIsJg/",.%:
%Tt3>t$/YU%Y_Tm_UL&k'%dQ;ekL=7ZU\J`M'-5/'YXgT#8,Hlr%rCW=4jKItiW)T_%sQB)"st0)X>ZT^\0m?I=T2e&`Aos-]U-#p
%YNiN?9HPZd?'6WJK`.f-\%?I#>h)4KMn%K;eA&P-H;:*,KpXpEo-RLRU5s8_4(F%-"8UTnf!ZgZlQ1YK4@aJIW%)/ShF/RLYO=&i
%3@(\LX-Ag[VVB>4:H@]ZI@PNs1<j@Wi-Yb3DcW98)-NdoTm88%^lnj%:>DqLl9ajq#2jp2DB(lM?OdM4[Ua8^,G/29L88THGFm2&
%H1tG+35FidE0@A1%ks2X[iG-,OCMfCTO/a;*.tCuhiH.NhZFJ[rkTuY62qAY!A>,\8#Q+[SX._il8C31M@^$%3D;;U"KmC>@%Nqr
%Aa2<17O7**<TMVXI0.GEqI+F4Y[HPh5lU]KUO.G3q!BEd^-*FBeGf4aLmX.T+,BcB+FjCad655Tr)MUK=Cq<[-a9W-negrlJGf5t
%8,)pFn5jlG*)uKRH4QNGXT.ZBj:=QTr9^8+INS?#]Z3?cROhCa(VO6q:KS_'Bl)Z3lIXoi&H'VX<\LK:=6aV@]XZgh5(&bOQnd[7
%:\;n.=p3tr5m3M'DTg3T'?Wk-0NZ@0&B/,Ipan&PlHDR;9-tpF!GX!,44ZhjnrG*<n;c&BcO.lb'$X!uDgXO>@M:N8i5?U(j`Vk0
%D"JVSLM*MWKgX%FWOak]"PNJsH&9%dnI-FEd"gYl6/*Q-B*^pR&@/Hdemm=[mMb#PkDQ=2%IX+H)*hP#msA0;eOVA!_&/!lR_gV>
%NLu%jdnF2A-V!d/SS:dGCeV[l#11NY:jV.QL,^CXak>At$Go.drI^.I@\TC;D;pWaX)QT7'sjdJ/nl(FChosI]ZMTKa\K%XLL2)=
%jmI8#HZfj#b+.@E0fkbt@Z'C#S;,B/mY"goIbU=CE[rl&=hV6/dLBY>jtTXb>@juYB"t;><tO3jh'(@:%i:s<od5d5'K'/L7[\'<
%`moNrLp44N'\#f2m&#:;8-H2"X@'QcdA[pODWO&[3-p.eK<2Ij2a;E/o#^*e]98U8lc$RW@s^cpT`Vudq49]mON/[=C_ruPY?&Ig
%8%+Vf,&+tDToom%9NiYd2\]l+9H,cM=3]JU+U-!C>CMr,eF/T@6quc6=6*cY[l@S+0rPW,3$G,ABJEZIq5PP[S-JN<?=`UcE)\N[
%U&NW!(2>80D&mFR4>%QDlL&fZO<FHVD,5pb,;f77#GeoqOeia..\-X^[`:;dnc8mA!'Rbm68l!9p<1t/j&<.bCOrnRWN<hUq#Is"
%G3KMK_I_$\5Gq+pi%;9&F(Pfl:I:R,%i)^G4Xl;7,$)!j[%TqAiD\mDU#)Gt^'T\HS:V(^-0ksPGi(K(IcXZ9W05*T8Y-S""jDZ&
%QHo<Jid55?^mV7iU)k.0G_-`XPo"90Vs@/VR`Z"Ma8ZB\NOBq6-2s&@6Zl:UL7/8_*\lu]E+;##)X$)^AmGNLN2<oA&OUuh/%1E_
%c7jXZBcV@V^C-J;m-e0=YVJoC1X=t:.oWdIW*mSGSIX<dZaD.CDh/BQR1<c:(ds,e'&m=:(t?L[k^Ea^hcKK>&5(1U%YS.!["3;2
%HQ"oSKMD[HgK*Np2Yd==L*0-->;"D,2Zb,!J'ssO5t#i^fQ%`15#>54+u8ufLuP)\n:kcQi<4Q_Q9MOQ56&"&@p38THEn$mXNE.'
%oM)bop%,9OZ4_?6E4[ZV?.KOu/;IN^h(HlZQZ]d\EnFt%Yfh(>A_l`/[+P`qqiU6SZHV$2RDGOf:6uNX)/+qt!g#1^MPWtnCli@c
%:1rB-R7=l$i/f`[Q<=^@/A#JZ__TDjAHm#1'kjnsZ<Lp[G*lj,_D7UiAVP=[bA<PW7YAl8ZgO.4%*P`i1,EDQ?7T/j?'\WK]$tl.
%\9aNSr@lK2QtC>H$.B<>O&4;-bqdNT<Ap\]h(W&+L04j]O<h`&R4QgDPh[s&\O)j9["`#/Q6etld1!@g__A.#@E,%G-4AQ;1YNLJ
%Qc_"O@@4mGNYb("N!qL.Hk0nnYoYO!@@/o2b]4P44Ua,IX(j?;$o8r<AoNl@%2sLp<iVc2AgE:+6,j?T^:hB9X(I^gU<#`A]8Y't
%?.R7Q1Su2=F.AmTjC;bf_')kJ+j2JWAsZZFD,PK\m4q#6b=:,qZl$C;Wu'hDZI2ftflXhW\R!4>::JE0gLVWKVd5VD0(ZJ]*.V$q
%r7`hsDO43&dcc?@oQG,ZbH0:MM[OkJ.2GR=]u)2a14GVQoDfnb(!Nm=]?DG-OH^*%>U\UUD0?eZ'^\=ZDZ8;J\QlgDqk`Ybqe"%=
%ZA5>Qfk'o#ea9X]66NlhF8*,d9%[_?r[90VA3Z>f#*+9hb_d?O&4BroPq^FF)eLr9Zg<EL%E#7eL04o%XLM]i__<TQR#NfD8f2/K
%kSj/,`gRiY&"!d3EZ/^KbT8GUAgc_qfo7/IDN75'3j88[k*F[&[aroM4"R]C9U8gAX>RK2DJY&=G%,?W&[Rd2H2%N[1.*4:/@4?%
%)([gOB%\cB'UDmBb:L28`p`A^=`V[o9GKZQ&i.XH\n.2E1.+*_,W._G.j*uEfkYJn$&,X-gL7J5%]%sIfn#ID1.--/k)AS;R@s^\
%QsjTph%0pXh(h(=Ea*.,)T<,,;44`6_HcrQY58(&';_g#g.u$K;u^UrR!-'Yf=^/rj2TX4@,[3+5BcYp_55.A/5`?5(QO1_V"LOk
%8PMbA@QC2O5rXDYG;CTbM$]/$,T"(3Gt68ARKc+5COn.>fk(q!7TX^;ZTr55'WY);(:_qQQZ^S[%/7K.#Pr%aFBUC,_stX/@^2"?
%8llVoUUb+Sn3!RcUIQPt'^7+n"Z&\8_hCr,e5c<!ZXkdm?;[$)cXnegMR>9h8uJ5]gD\,^lUC(m2Ze#8p*V@bgH)3=;qoRGA%]VV
%`BThH@apk=2'MEAS2jK(g$FoFoVKk0/Tt1cZ70p6U(u4k<hItN:"I&O^+&7r4B&hBmd5X,q6"V6cR07cnoq9*+12V`^^-hR\M;1+
%Tnb97qR@;tA%/rfO.TcGrWDfWBlD%kkU140jGF^5^.'uk.oSB5__KcWT,Pr**>)5V'KsFBJhtWn3P6KqFtAX6'd+M7+=)'=\Xo]A
%/$n5U0l):dUC94<^D/c%D#5KT>'G$d25f?WkQ@O9B)@%6h*^PGf"G3n7>eHLUJJE&="4-tiJkaY;q'[*-4uV@CTIEMjI$:Li0"t%
%c73';CHTom8AdPI>I+Z0c4A,WX/L:Z)tc@r>c;5+dgC*u7r25RS5UEba0`\s.)'_o<^>A=5-=Gnk5I3>\>+?oq6\#jW75RS<b,]s
%jnPEJN4=/B@*S",0#;q&f9b`K9e/K9-8ithg8JhAS#1]AM^\g)$5O?h'mWV5(;1+]pc5I+"QbTqFT=]gad:jgV(EXceFZn1+W38G
%$!NLNCj/7PjY@4JLA.e)a:k@bfbPK?0!_#%dtsmR(Dtj1<<=tUP4MirPL-bE&M(o'k1*_[?0:nd4g1D/\h*=9B0(]@:CTpEbrCAo
%G?aN@QO]_F=\Q!)fV]7uk7<C&(U5N5X'Gaq4q3u_muGU$o_M!?]:f*o_@2]K`H_QSEAq%@l!P0<A(X@tQ"OWdm81H-b#(92Y%3n7
%:1$m<6NSAjWr?_<N&?pUkn0^^,%42<qH,8qPn"STmDlm[3jA7U!u1oDgnW+%M(e2"RI&TJ?apR]h4;,'P/T<lMG4ZGbZ_3^&1O_Q
%\;_b(&k%$:>*Fr`YI/hHg=7H_f3/(?S.IuA\\+P$hG(c@p(0"W%tg)u`0,$<WE799e,1tPlpTqE'P(5LZ(fspLRXIiOZ3/lW:+iZ
%rIfQ('5l*^Y$SrJi7gc[1NLaqn$L0tQ\4D(,pl5]Tjg=>;"dXT;ci(DZ@?$HPmbiKgpGi<@7[>r_2gl,(.G902L/'@*nu;$G;%cH
%I\gn8b5TlOdBg3-G`g=EOG@D3K&2/,_<TTiHhOp[70]IN%0[@T(P$gP6K)82\U?=7/HY6k`-\_NA@])O>&hW-&*RVg%hL:#K^LC6
%MnG`.\'q4:Oj&;jU_5qT@;ZC.0gIE?&mEP<*-UZIgR106I]mYH_[LL*D,#BF'GW5CRJq$Od<.q4A*CdL6h].m"6ll]:KR,<41f3q
%=(DS99u%Z74Nk@Xp\B[bj>V_bpmla4oX^el'7"G-rN[YpMBX6)(\9nhYI"_Mndo(h5hdI1.BXOqJ-7[[/@J4ED2QgRmE!MX&%VO*
%FO>&Pi?<>'ZpCfH;k`iF")(2"W28723"3r6V.k#91ZFGBCo/H-P2\NF[nB!sD_7hL^OMLi7THF*+h$\0=Kh9Sm]fGc0""4l7VJ^/
%S^i(:<dLKSll30FQ:AH6KCLb@WM+Pik"/lB933AueJL5$jb@9eQH,Oq(.IM;JoHC+hoWLYPW^a+h6D4`Ze6@"EeTo1__/PbmW@8c
%bGPk-l5b=^D$dPoY5uMpc'g3u:='(6baIWYr4JZ(7lX0BKH=YH>H\2KT(%3_n]ZX1"[-%+7[kA=XHV7(YQ0W24qqM;9?YKRZK9rc
%=&giJ"BtsK:X.\jUo7;"a$,L//UOk>l0EWQTX5aNj(@&2LLDEFk4[n"m"V0-I3#cOR)cF>H$JOX_Zjsj>7Ugc)./cVQDa@ALF@&X
%Fe.l$&-X-YRq8rq`=*,j6-Ni*2HYC[\)[aLWWGhO@^lljYkaEj,NeZ!G5mXo+N)lf5<R&U(-napUuq#?3-%8)j_<1Ro=%7P%]_^A
%1)_^I(.`45K#!4Fji>Ik_i\<r'0R]`Te@RefB%)K31kRQ7M2spi<?f$>:;t)J;/8Nk4[74ghWh]82'J3iCPht;hMrs*aTRTNO=G=
%j`,$'4FKs6F)FW4-\jnJ@_!3Ij;=>@:JT>lH&+K*aN;[k]q8qm*p)S,!<ls%QH?)_C,Q?pK5ENsdhKmM#:i$a)79/P\[2+p,,6k*
%.+nP1;C#A9.@lFi.T7G1hN-YuL8mlV&%-[4i/iS&Wgu'&EZU9$a@n[ORp3+#Hh>2lrp\Y?4"GZ,!kX_(i!*a.IonQ4>s)rJ(@HIs
%Eu<PebtaF6HO'%1klsis2XkoA#G3?Z$WjK`at?^'Zj+#3FZP(LNAGpPoQ[GU@RF3CbPsa>)rZVA5tRPFs2l=/duoj^(N*qW?d_NF
%P.n8d%Q?76'ZhJg-DO\1N+gPkY-!]G&J:e_V74"[m>doHRs+.'eh`DN5Aa1bC+GfHcF@pj*htRb)+>4(j[)\=>Sap\F-#m!'l*>S
%8l@fb"2;KP`]5'@Uu13H3g_X&f$e_Cdb&f9%R`d6/]DfSNj5+NlCJL\1Zs49E<aV?#BDA@&Ij#B9TXDm_V$sCK@b94p9Vr'+1#$^
%;m`P,mK!9n/.F8a6K,LFQUVcu_!8f_Dsg%FheVsJ]l,fo`_J3X0l&F&ATb'9e""PWga&$+1KL*tlQFs8CSSLpdZ?uEk-d)G-@a`l
%kf"0qo.6AJ=orKd-PUW"k0c-Ff&WRJ'OC9#Ap4]eQGqf:Z<"%!_-h7Y)WBONB4-r<1OfU0hX\[4"`@4Z<&MFjVWH+\]q'=k2S#p;
%1flG+,^Fm351$?sdXkn$:gqlp.?X.qYHgs*lPBn&:fPJs@eTHTKij9GQ5Ue'[]T\=D3eWcf(,>$+n<Z/rId'Kp%W>qn6obpBDZPt
%=V-TQ"<=[L<(#3NK>Z4f6N);%VB:iVn/Y7Qd%meZRHl[6/MUZ<r)cr:,a/O/RB;%,V8B>%nM5.%WCUD-g1X;8>Eb=\Xtb$*Zeh"M
%UD.KZX[\%(O*&T=G%`:GB0A86'RP)E:ua=:T/,.,3QOpK%5b,FO3R-ZYL@?!)a/XD=#M)d;8IWb/!!'jZ;f7_pQ:;<LA_X*"(gNX
%\)/e%N&kd$C-R[!YD/A0?&UT)]M5:bs$NNq/X)GdaAVRb$ZVqn?sCk]:E":6l,3#[HF"e^6YkG:4q5V?etUdQOQdf:fPI'R6=WFd
%)lG"/=OD^OpZKBPYi`^6#7Fa#q-[jXSdUX,TJ>)c0tmN*2f`LX,L>hrc1Msc[IO=T5D9[Va(I5IL'lpf'od"0_(hjr%f)#\UDj>)
%[T-Y1bcE<uHJV`6,\qtN0LKu?PDYLO`YhL2Ru4]72O`JD\i"7M@A+c'F&8/nA"c!__^-L#nuhBY7rqikIbDDcjHtf.[5$`J^!&_l
%*O#`Cf(l[`%kWdlSRr,+#o<$U'):!&519/<Om3dcq:j?PnJfY!2mHe^1[+GPpA37>(rZ0[a23pbk8el)^)=MJa;P](1lS0t+sk=%
%B4PW0E\soc3JAC]HR7M$]9K9,.CpXRb0RCG@5IcBgM9=s=76n0O!5?Phbg6X2loc`ZT2O8Ct^S\Gr<\?.`0H-"UVcUcQ=dg0`3SD
%;-<.F"uDK*MnFE#EP9Us;nOKT>9`aEs,lnX+/\h6:lG?X5t4d&VfVJb5Dg=941sNPMZRQqm\W\#\1o'5k@c^L')Va<N:Zc@SJjZg
%WiNPqT$)^2"ssSS,NQ/]9:np$/BL-KQ=Dtq[%<`kj^q,/9Q-JGIi1/UdPj#m!U<*$<:3;_TY(YiSV"4+4Z576@6m&e5,soI[p15@
%I!Kf$=N@UDmfF:_4Po$V^'Q'tLr@YOBp`q^WYf1rd$-oS8ZODJFb-\\#@\%QE(Bk$fBlTE<Ab>rqPC&*htDpu+*CA$::Y`tdb\i)
%n*\&m^j/Z7JDA$hjcVW[9!k"aG*fnXmT>3%$X;fM1ta-jV"?,K6J3e-]@0&bJCl$Iq0JW\H2,$7bEeKos-=RQ9+_pFc*(_Sp$JXL
%8sGXl.W#TGYF(?C<.2`hXL^"%^qAcLB<$.;iPu$;oNLeNH(X:U'ZJ@6c761O,p"GL2IuSp87JV-OF45g;*gk\5+K%EAfhYRS?6i*
%0:j-H%Il*b(u9S-Qd9)_,aJ)`58XD$2fL96Q*Cdb[s*5LKIt/W+"%IG<3>tLFV>@^\Dl"kZ0gY#ShTXCjS:W@TV#OONa.agglk`8
%=]U56$'+kV`5&30bO^t7*B\Gafp0'Z\ao)">34FbS=,ua6I0l@2[UXqU^RS>S'ZhII<lm6#t#[_X$JO'1"P"V:/KQ6S"=@4b1NaE
%6>n1u;GEaNNh"gI)bZ@D_Wa^/3A9jV>D=].QCU[^A49sP;"k\$SGM`or:G0HOfp8Bo0b3B%D.S[1#N%(\'GXuO-HI\i&5.gZrXdf
%F3-7MCJE&Lm6qu&HN==U"#`)<[HWo%5%?bAL(m.*7d]K-PLd1qhP,n.`ltUCW]O]J!askZ"D7EmaWA'/gA]aPrMSMB(s\K)r3:R)
%<gH=O9;(Nm*Ro8$mZb'Xf!6k^!.VI9P2>2<VLIA?75F/2cYJd,-2h83?9<V#riejn0]8L;'M<#iLGcYZ"5[f-D*kn2k$Fg%P4ZdP
%MTgu\OL@Ve@DoI222ZQ#\Nd:FQa_#<@'G\HcQB,Fq%-A'CSjQ+.tA+7gC>^;(7PW'1;%'FQehT8I8+@Qb8R>R3C=S)1.emBpK@17
%fGnI\H!HTeXBScbd%9s[XgYhiE(\dmX-kMRcWG-d5\K=@Slt!@],\M;WY1V=ZeP\Wdq"5V:&m+DYs;3i:1kbO)XS?-@@\i^ofK!4
%TSoTC(+$*I?bM.9W_;6Z/BOSlPPY+"Z#(IrGH\IKF&Z)LQkB6NGQeFo0;;cHD8=QI405:<(03phReN/LRZkp"dLh]p"r:Rum=='\
%\!MA$*\Kk@OeH7M<gJo;*u<?ZG%$iDnUg]D'19&ZmH+fuE4OCU4F@ajRe/J=aZ(7oiX.OJ6rd67Yp3KY)l7jsA-`l*YD6@s];8?%
%,;h@>g`tQ6iAtd:;h^c1-dG]ZK$)771';"_.W'@fcl"(=@gW6rV:Wf!f%[(#>5,"9Ku8XF"^RP6[S'KDphUY?qIu8)"D!4pLPAIQ
%boA;$aAc0E7:GLpS^f!(2oN="U9'jSpn]RAgSM#/+3L+NI9Mq3X&\UGR6uTj7fMi@k\XF-a6QBM2/B*V["NM?f0-/flo_,W.4d"F
%+kL&3iBX]E^11Ho\B8t&>Q\JL6HR\p/HUM>U?4Gr$jNidJ#-^4=%dbdL!;U@_+`As>e@"#?s:W\KHE1C<iad:oQ8"pj"#\CIIi'Z
%Y5'I!Z>oGWeQc_TP#L,91qW?QP\AC'%(*Ct:68(64c6Z4(aB11LnA:_gZpW&B%;?8M_k+576c:&_[LRdh6\8C])(Q-c@E34Z6S+?
%6hW47)%!.fTC$&Xl<^+M@>Y`/SbgW4Z`3!mGbU(SNMk2!).FONo@#BZB:A\70U\fk*eoO@_edZ:6r@2.cbj8qfD70p*ZiJA0OI<@
%)FaFHdIBoj;<j.o+^Z<gnR]?rU3N'Vgg3<F)eNg9m8!8HVG#Eca_?3]=fW""VCIS]W-4m?TAe+H['?`J1XJ)TM3Wj'6["Fdn-iDK
%D*AI7WG8h*N#EJh/.\q-6^e*9!enK(Q>[:XXEf4YHHtN0_J?_.^;YO'g,LCZLn5*h83)G[G5Z'e%m@G"e06)FnY(<H"A-W/j9jF/
%]@AYXILc(lLIZk4XS:n_^^A6;#MjOV:a@Jrm=rnh]MYfB[h%)b)ms)4E>t:*hQMtg>j#!rZ="VlQ8O_OWSfu%*%K&ZM-?$'[4`E=
%_sN4B4P8a`Q&fTGs!9mVk>`#A@N7tc/P.9W[>K.sKd__AT#Rn!BN+'dT$E%sV[S_-iWOZ.E*@-4i"@8Ca%+s7$L#a8ZP2o^^M"_N
%.O(H`4EF-XB9M^c*SXVDCWA&c)Rs(^UEDSK*OiF^UW[pWRI36Xe,25X]%pTYlA73SmWa.<h/QeKe*blIS^AIea]K859hkFMC'gRl
%SL8ckY]<792g]`<48/'#7*T2/BNJ1*kX(T9f6MbY',uFMiXF)Em3g1udNZ>.h!Ir"N3WWsG4nb*GJra5jOlS%[^L97S`l4/7F)Qc
%GdF1t)P+\FQ05Lp18f0sV!s#"'j`62hS'9GbI[J'IsD]/T<LbIN1to(-ahBGPF/Fp$H!rQ#3c]IdKo!81#*ds*B.MjYl!8n4XN*.
%:/gHK-tkb&,>b&/$3KP#CT+&pH%%/;e_CoaNj(HakKCc$]P?;A87ZK+C5:PC\O/L&?jmD\LXIfG%GgG&"dW!qn;H*%D4NV^nh!0\
%feuS.?ZPqX<#@F%ZenJ"8r'ulEkhX_'^9*I65\SD6.7"lpF??cl9'QUo&mFWq2>F(=PiGSNnUGH4G*QQa"r)INkl!Is(M7'UAesq
%;=e^Efn+&/jb/-B$RbfEN/A#5nHL(enbWjEs7,k+QM%&#)MHJHB=*`4So=RUB\_Q6oP#.9R]=]O&Gl*Zf&a?hH&%I.\AO*cdkIH>
%F+56cd&1:p&3%c'XZo:94+)iJ%0Pb.lcKe8p,oii?f1`joXMeokgM6$]NE2F0SI/'UO17Pn,7[5hr0't;KDd4B:iGU2Kq`]eC?n)
%N80Ypha`^bLos0[YUKJB5UlK+RkH_S7l>q?;E2mMQaSH6?4Vk_LhmRaKjP6g/jfKKFDiuR%s`[b)Tb[HW7]bQ9WSK+UNu7s&8')%
%+M()'OA%3bgekbm?86nX9X$bB!TIeL5Pu.Le9nBMVci#eSf<\8R6S%%'30gA:F_dflOiApE2_-5J@eQtbNiI_X=28t!VB3D_D*.>
%(j7'_N%7-JmY(#KSu@A[\%CPVj^m=6S:WE&)jqt7pX@o^j=1"H?P82U#D,,;!K(;LT_:SDmGb8:kFU.$O9&K+Ad<J2j^E0>jSU8(
%C2eX&q[Hk<p&2c7n<q+TcqB\nR6cbIefX;fC>.Md*e$HMbabVD->n%R9K`&XArroM`m]X<H!uqTG=)%F:K.FTgYK('o"OQ7b0U+&
%.?/\Pfkr8:h%Gf26:q_7A<HSg*bpdeBM-h&g>(F!Y\hn_H6(O1bpbVLa4*CS>5e>m#=8N*S8XrJf/-as=Vf&HdT4sk8KH7;7)s;$
%*C*TuN*^48J*1\%B=@0n$gM2R!38AmkLi'],IH23Q-q@9ht=$FU',DELFfJ9]#$I5rN-;-M/K])"#F8dN/O2J&7k^jP3Ak*pEiWM
%1fJW?9(YS`c9a@+U^Bj]2'Ko9rmKrn2Jn%6,7cJ-SA#qhqDed@Z>^_.ILWj[[O3e['ZWOY(`#6PBGFiBFuQO0fQ4nMGt/%#S[i[C
%,2?p9]#.K<SSC(-2XSVTe5ippZ52dd@p\JrMS6m*oFT'BoK[h&B!ehrY[`)l97q!iq'qo7'01MS/.!GfS9pcm-0lMOFQ.)A.V@K=
%)&9MFf+/5q@ccZdW95RJ2+A'3*:"?-FE@7D4PLf%X-t/5d+trR&#V7"I9tn!m;`\rC`-CNSU>(K\$t,DLtVH5s)(F<nq;Q\mJnP\
%p$2bZW??K!b*gNHQ32siH=0ptL#(SMZ.Q8%9?Z&uqjsbQ"s[`nN==1&Q/kRW"'Oh&&Z;GIf01e,!2)ma1<<c;1D'TB5]IKg<cpG?
%qLT"'Ha=Z1AQ1]&<CY`9QhfaL1K)H`j3687mOBu2htYbIFk>]Q]IM,:QN>JG+tDE\hbo,1_s.;@8[""S#iL6Q?%j^?L-Uo!,Y;V-
%LD;%3eKISm6"%^J!nl2/D-Ma7(pN7LC:6tH\MZqIL)S,@XNXVtL6,0B,/?m4[2BFZ/"-uP1\HScXbND2HtUnYn\F-D%YXZd*D[b0
%_rA$]m(1^n04sbsq@b#h/`kU)e_.k>(ci?2<u,/i3\pH/*1<1L5-8ebSuNSQFSk>%$NFnFrl]>_Y8Z],8:=K>?WlZpLAK'%qB?r`
%XdK[.=APX(VR4q`m577XNR2"lem9T.f9#]8+B7Eee6_`.DmUP=CPMOtVS/k6=-N?HTtOXre@%_k+dP\?H`/F"7dNK>8MV8&niWR,
%G%e'fg8h@&?9PYs>G8`f[+>`RPq3j0L2/G1DJ]7[f3TlGT_9;,]o_GDmF>Kh0pjW]eO"TlBs/N1X+a_tmF?+A25._KH.`Jj"enPL
%HhPfmrRP:$ZkkcFJkn1Xp&YuE2+3NP4'Se%Y8l838."D)?3bNKc=A$<pnYS+6>SUR/"lG_bEWl*c:E4T='c1+J<:RGb11"f<*j-=
%2eEGN96ld;apWV@n\aJ2X-iI0#aOttRG@R$n@Rr\;4$k5n%8e%+jYlBD@.+Tc@4n8?$Ql.Y9C;aSM72UGTa7Z",hk<Agf<:lXbk>
%\p":AV0#cph*ooZ,*j1s>q'ks^NETbh:8@6dWb4C0ZN&._4WTGd;$+?FOuWB9$2._%WB^"3HWjYh,SX^Y'K?9&\;aMG;ZF=U0s_\
%WhI#pXh&8G0%OQn:HT,4rM?Kr)QKjnWXEqq=X8d"\rs+s/Ci9;Fb*T@>S0d7;I.Q.J(^O,RT*@.e^\TgeO"D$WNHi5X.)k9R@-'3
%7j(+MXLfN]_pVfQXW#8d3*F98+_mjb1p3ETF_U%Nrhd9lXh&hW0$V:f\E_LA]dTOM?/k*!P8toV)dZFR=:BcZ"4%fN8"Npd@5c\s
%%'PNm`g9H$/%F16^(JSkod:;:YPEiW9?QTQ<+R6R>$:gfAa3Z%rS;b6Ji&R`BB[/jL;Up!mJ&DOC+ZFRI`C]3r;M&1'e;Ut6S!Oa
%bP87(T+gi8a@r`Z3Qe?AB("F>COH,XYCRr4CVco]1n8.S4N;@aH*hi*f:L\afSM@W9,)l(1!`;6)>VKmmobm'Qe51in[_j@ISr8R
%A.I+]10'pDab5\:.cqeqTGf!C3AK(F-^j.uJ'(s;o6!\O\^e&G?*Jg,C4>mjVoD%\Z_M[Ta0Z"&436$6D>K?n4Zm1PD*Ru&]*Bp7
%h.8kC&P2S\L_I^b^Z4[dD^nO1)$*C_+!W5ueZej(gO5@iYsW]'mcgt![Uh5JXVSHZd!sN:=I/0!5d.23?,d<JnWs&9cdL,Q:b\HQ
%2">mH"^o,`jmB%g_U)+5;H,fdR#K2),PrMAlXnq;flT\9BR,FT=I/,>,KKQQ^.d,Z^/:$b<hD(AVY_e^Y@`PaY?9,lme@eU.r0DR
%/7Qsch$tMkfEEbSU6jC!29jIoU=a;"+NBt2*Z#"Cgj@"3Ak?`K3WZ]sT&j"8W.4uR9FH*e-B>Q,'TT]Unp]LBWD,[t;%aluc03<l
%qKM3"8h*U?LF>PabDoo:jtiHR<YXe9*G6-CFYKl]ROuIDj"spb#9+%/S^8$LG-(lTjSd"d_@Sqe@(/&@,'s@7!*NAj,;:dpS>)JB
%U1B`!1^RkG)!>G'AfYO6\_#l32K5X]Gte0ZI]+h8eM'Y"MtPn1rq;?L;=:,,&Y+&S,NTL]R,"F[#XKXkQTm5>+pB$u$=>)(MMcQ/
%Sf'%)HSSU;o)FV.3EBZ,UBptVP274$_W^h(pN<d*)-W4I0&B^3U#T*`:%-7R_XP>IIsMXBKjtih-'3E4(B=)q-]"k3X+o;+?B9l=
%2j<-JouOmfAm+7HH*o[Y284/>!^5n*G1Mnc/oH5T<"!`6:((BjX%ciJL&"uud]grT$5Z1,$1)fpGbTWdRCdL$$</=I:skg%9ht?D
%\Zl!maumF^%-4I7++$/+r'iB=1AG=g8sO4=q9%:KO&K"DlFZaEP8-aq\_WHTRDQ1g:\'pg91j!IJDVb;k4DnA^)-^<ejS(rSPmM_
%FS':cZS9.l=3P\/+Wnlkk5'3IhET(U]iJQCo\hjK0E#<"ZPP..O2U#?5<Sd=qoO8<l6*"/)f!WV<>t8+kHt0"mkZ%do6=bMg!j1a
%mV0ZoH[D6MQhnlW\*-,OFVPLI$XZDL==M"l"T-T3<EVB6%h\B_4;#J:1'=s%9O:_g@/1W(NCa)pbA)5N=YmIE)U]DZ0_?[@+[O!9
%$cG_rNcqiifPlGsa,M3elIq<FCZ%cum2-S6HCDmi)[U]-nU;h^a7b#i_)L-#c.c/T1dT"PO&WV]%>8&M?AI1F1^Wbcr0<XgQc(,i
%;@n6Hqm@I?CuW'fEF+BWk['<S@Gb,sdJ+BKrUV`pm(tO#0m"OU0GN(*]RK-J<L)tg069QBLTQ0fKu(Z3j(Wj:$#5FM9Bdg52FlKc
%iA,$EHQarmO:EPk/qG`OhJ=FK&Q?!^(H\3)LqT)`lb9IUq.p`A-sk4:+k2k?jdl@7oJ7+QYWnZP,Yqo-_gGN=2($]nUCBtOP!DTK
%0o6!/.&40@.^Lfla45Zs;O$8?.EJZ<5fd2Jm_PTgnep]76_`C&o[P^LddBmPH^#ns0ETYS>!9)K`DFR'r2IB?Fb<q(O*eBN20Gh;
%)126G!W6E<$.&qOq!bENd#`V/Yo8@?J*pXJ^Yj@4J_1^Bb+MXbW*WV53)X::2YjIQ%QLLJcV\;kbNfE$7%=D'J_8@5)<[QCDfd$R
%\bc96-lHt&bWHtt=j=C"`:hca!o'Z-4RNZ5I-g'D#X[m3I'<ZH9<IR>#5]uIMaOYdKRO:_+H*n"?9/9KkbK$`ZDcc89X9JhI%nqq
%;SiUp+,(>%ZCPp56lXr2%4H+%NjZSBV,F)GoXkOYl+%=uF<Ge;_D)j!I\.00n[)4A`LtN"Ctp1ur9[7Io^^#:5U8418$7n.$0k?0
%,a(a$=Uj@B=E$6#jl%eU!4G`GKb@DJq9*Y5FLOee5[5Q<G`&:!PXs6Y6`S'9:4X+34XF"=e,<L#muU'p4h!t.SZu7ao]4&;Ft(-B
%NF*bY4If6;176n9F%=`H#=F`/i63d#]r*/8IJg2$m(As5)lUf`%TE))5O4Y/im*acfPIUG9>HjV79l8%^WWjD>`.UD+%AR_96b#$
%0?7cnl!=OfbtaO6/nO-=CR59X<)NB*PcjpQ\Ks]Y$]5B5R1VMak))j*XSY.lB@]kFPsrNN*FnrjXr%+rGsK'R0HZ.]SpBULAA>$N
%PI"h@l5_EWJ;c8RVMKh.]Yu7nd!qYU.7<G+7nr=,Z)qKIF>2-&!@<Wes2*.7[WsEG@aYIm?DH4i()2GMB>qMN`#7.u!.Rp;2_\9p
%gCQ[:INhL?Wojm)H;<<(NVC3%jg$i;0m*0slT%q&J#AOonO>0)jbLO+:H<43+3gGWnQ/:gbOAC'W11u]I4&NW8(a4XTNO`Lf1$"p
%8SMd*F-M=X;q*T]<%-hM!h<_KR-W5\DMYfK9D:0bm/g6-5iJpJ\P8q[R-,,n7=gL?;"Gb#7/0\;NO:hA\.6?(X6E">`57>2oprJ^
%VIUD.\WVKobFV^s$C"c=gnH2Ob(\[A]I)g)3^?a=g9YZ`2^;"#]q+@V<FSF\bUQHp2_G5\jC'[8q\icCkqC:AV%sIK5W*T@=@NHB
%=#kTHZspn2VTRS-LU!D$GY9DD=7I"9#['-U]E8=+_Bi:b78Kh8'1snHSS`SA_jeoK_RJ^I//^t>bZ9?kC3tf0:8ioaf\,I%15`-^
%PT;j/#Vn4#K.M\3StD?[c6O'b5_GDo2seFKMK#8X4#3Q`3I;k7"=e,EDb$.36l7\K'Jo\b#_pd3`P#RP0Xg63D(`GtT"f-d+=cOV
%/hN]sMpsa"(fb)j@%&V@]e]1`4:59N]`jXeGKb`,$U[4_Vo?<.)W?"s50OKq8I?6X"(Ltl"^5i/a6(Q)b=M>#O$!/[bKH.Y)2"?u
%CMs0rQ=,ZN8BLHh(Ut@a[Cp%sN:d/kX6W$]%'LI^m,u)mXYu3>-Z=2aVH'R,VI#\ND&XDuT^2F-%i]PCD`"b[j5AmPhkhZG\>&Pc
%%oGJSC1PL51ipEG5IDOD&oihL6*TE.N>@:-?:$TC'C+.ZNph=if?WM[?:NGgf!Vo,*Mqa&FJPXdP+0PY]b]M,Hro-O_Yl^o4J*i?
%qE\3\[>*QEgM%DH6h&D5r6kiL%)G/6nBV[Do+q6["TNGW5=4j`(]6E!Im4'c&&I./n@&u,r>+VA4D#)n[ts(OqJ]jLacFr(CSEU)
%^!.456h6T*Orl"+0)<Ztae)i/c]J&rP(/5I8+^ss*;0sB`p3_0m?54Vns>I9rK-q;,_($[T0r/[Qi,M_s1BXBapb"/4!fC5+jcDu
%rrJC3D]WSWjNkp%*R9FWU-F@qn$hLNh/u]D8G!E/rCA+id6Bti6U=l(R1),cPM`=VWKR28,sQ9aP.sZ\_nInJ5=4q=6h8Qbr9t\$
%;aWY#!1W%F+o+c%rl\Vfa^8r-T0i,7[rgLg@Lmtk=-ES##oot.r!90.WF32:BBPWB-_7&>[Aj%&7\Z\Hs)?AH<)@M9,1.JDF15EH
%43A6mMZ+Kf5PFZkVLK0U`MF1cj$>/C220sdBt@89/sV/_V7K#DooMeUb`tY=V*RkPiTk?^#O#9W#Ds7$AUrn`X1[tF>\D8bBCO"*
%m!bff.]Gk%*,[e>;^%\dDOjX+kR7Un03anVOj<1=)9@ub:1&/0N"S1H]?]V<"kN$u3hqIRW/&[^LF1-aVos2"Ge1A4q:?/L+T/uG
%0I=&cb`Z@1r17!s$$;00*4T=6irD.jRo]l+TSU`fB_A6SSUto&6t"/?3U%f=TthVe7j[\6'qplSbmX#YPe!L`\AK-[=P'%Lo2-7!
%/08H0!RZ2GgG*`NY>H@tnr*5?bhFGj1Ael,T%WCGIZhVd#P;n4;-.H:qF)06E<0Z9LTP?/\)S@0;f:@\5Q(8js6Up.oT+KHs3i(h
%oj@^oO8nq<56:YNb)+gEDa44!J,Rh<s6q]Ao@)Up_a"(mrVb&Ls3&1Vl(;t_hgYE_\FMlEIp`icp4"e9kk[8uhga.obb%$3P%#M3
%<Ko&"DoWe,.ofkK&[ep1djL"WSljgmAaK7i*BC#[+r/G\+[iG<_TD!X_Y4UU3-Mn9dW8tO3/X'>Ar59iMX,=*cOEFGDMe`U0"bQ/
%Dtj+Bht2OTV:!$!0A`jf:lasUkq].bXXDLBlHIE2n43nP%:k[n3'9;+e#TaPBBINr33RpT%*$aic3lFVC7WD`cb*J8L3<m8T!n5C
%V$DdonMI&.Y'c80TRjqNkL]f0G=hBP5Pt:uc7,K+L6fMq3aR6hcWg-+Ll..54LQXNMR*#Z4#.N.=W4WqbaUUC9[(/'oBc^$ee#sX
%j1Gr/bfKAQDY.-o'n8=\f'b*[*$3mQdB1f&_H)(KhY-occi<]u="8u,SF*@dX+&SG<$u?-B\M+[r:djb!YnCM?_+5$]pgu7H`i,3
%8S7/SJL&t`.Zo=1U<G#?LQLDrig;GBSh%mQ7*1@si^/-SC<jWdIB/K*If=:%^?J&W6WU+:?e'H)E?>G11h1KTf(:3W7.3[*/O]op
%WHOFmeQ50&S*",RF5l@5qr_A=M+=LG[uP>?FcS?U*??F>[>FIO:`Y-r3IeV1'9J:&RLM:RAoDOiGl53Co,4o<jneHaZgOt/$Es'r
%9u#0ARse6Lb;^^HNk7/nkol<](r#?J$>?GX-'I18qI"bQSaMF/ng6?P:+@qJiG)_+g5nR6c]`2%#9q3#<gS')Ebs=dfo#K=A1Hs)
%-&H5OT2:_ao+=Bbb1e^53Z%&VN)dC1cG:(_'=a*mTFTmc2Pg?kPE>_\'=iL@lL=etI2T"?A\C,p:RncCP;Zbr1O/k=T>.e`/8S/_
%/2bO<;*EHm;Nm.!H&>-XBsi4OndSZ#HcCcY4,nsD4J5&V*iM`Vj*!$`O67Q^o,-D*Ttc=Tc/X3_WVJR_hc=L/HB;]Y857$e`"(p-
%Z]P!(SRSe,2D@?e9qZbo921Y[9Ri(ONn<pL@8c[t$E8<DLX\F_Q^[H+>O9=B*i*D,r'>);.mElYl&=_%1M5u>C;/!RY9l.,gBW.,
%+(N[toJ?(@@"XlNM'8?HZKok<Qe3M2[TjI:0,E`YS<c6+>rJ-aLb:Zk&:e([7@>[lr1Ct-/kBXMS=RCB0'kPnRV*,K1=ql&+aJ"m
%0RTO,lTc966jHESQF_A<n!8S/8(m7`,8[\4P]\1u5R/(GZ(oK[K?jad&@Q/:e_-Q+>nQcG%U)Mr[HWN]1UtSKI[C+$$K%]J/l>p,
%^D#^6q9G9!AZFu.[F2rlWN""8DUgu!bNJd\(Zg\a`Vqn,+pe!dL9bSB$]#Z5*<A+qP?8e0f.j;kN8#2gfuWP+P`)1]K$N/X<NTS@
%2OP&2H)(m4d[PrF[W0KsVRfii?<@FO`[I#G3>]<oe4)4Y@clWYIsHh+r=$aaCg:)BPu&O2/'Q&*:QMpG85%t^n2eJKA?=c-3`>8D
%2']\F.Cp]6n>]5=11F:Gf1*hDFI]sO%e.@#%\%""]eV*ep^eG"Re`H]q^Z!nE(cieTYXQmNVPg_\VGI.7q'`EJXY>0rgm7%6;-D!
%6_6am3Y:[f=9(?(N/YtkOV(O>g_LAkT4efrlGqc#Bt]"VF(H0;OE:qF>JB6-:TbJ9\B,<.5Z=Z4H%)sJQ>(0qdg!`3ju2A\p(kMA
%//=SOX]h+tjN>X"3YAQlcR]rflNMjkZ@k4uD08Ojdh*lPf*>5p-Rtnc"%#5`%J`8EjdfotKlEb6U;Pe^2VIB1*KlUf%'Yc+=WlW8
%[gt^D1+":JTRt'=`3$:bc3^4"]-6KL[g"W)rV!UTMnRh21(s>WQ'r,#@+RKq9>WHWjQ-D!'>mlRNS:$63o*Ui(6Qji7tqm=%TaSX
%gCD(#mY)frdh=bXmu;@Q?Q'%jK^0ikm=dT<-r6#jo4)(o%gNt6Uh,l0)X,'5ePI&uf``>-Vkbj1.%`mI$BPBp^'.`q0%`G@JGM#d
%-J1T$93!o<Yk:AfFVel5kf!!CY6BjMN:TCC+stq^H8k.\Jh8T+3<Yi/%e<5Dm<C1LC*hMe$b#;O%7<(jVKQDAZ6@k4#e')O%3Z10
%EmELFlj+DDq%.?o"C#l^<^X*6(Ml%;Xh,k!*9\e'fNJQhk(7H'?lQR_Rj$F]"<4rT-EUQFVX/oZ+_@lKYW;Pl7i)K?qr]Mtcj#V?
%X!--X+kTs([crCGKj^B&fNJQhGmLkHJo*%TCsrP,KH^S(=WuGG/_G$BSP4C$8V2pa&14We$+9q%Wk)1=SS3)\Q9qeb(MoUm"8Qc9
%0pc\9OD?Z5>5W]#>T8c?j-.p"JFl43ooNr`EilI*CIrOU>>fKY*c`id>am@t5`K=k%[UrkjOuTS=q/$n>ctIG@T\f76F`_1m2fqb
%\Q2&"JP0[F@K%O>4s(3B^XsurT[B>L`2.u.X0.pZmLm7OVB%5%bCm+ejr7a<1-$rh7&4Kis00uGeb>`4@C4sj[?DkGOG-&g<=3%7
%.8u@EVMN[(mHE:L$?C2<jaMTnO&<XbQ]nN>jk+3L7,]RVp<Dp=_M\"C2k$5?H6;OO&kh9m((7R'-@al(2/l5<KB5jV)MQ5`#BZX5
%[k798I:^\0KWLRP86[hCEF&mQ7!<%#S)&lb<3@-0s$-56B#h>"[h=.TQo&1imBlkB\jppgGXcSdkT2U?!3/o3%3$^[%J8EL?K@hK
%m;jI%/+9V:>eoMgq8URj-#FZZUaU7<Jq79WG1me_!&h@Qe=[=X,TPWdd!_:hpAD$7(/k!DQ8uLjrW3W6+^DU-DAS1)C"MWU[<=nL
%,t)RZaX&32"G%5AIh;<g<CL?@D<RADNIlk"l7F6M"6&.%:np1gKXd:,_"FAt3,@sXH[g3fpCr,WI3(k[9*adqAec?>$5ONU:!p,`
%)*oCI1dVq:SkpkQ784@/-H@mC_2[$7o[hPUKX\&9\s9N;oPoiEcu82\#q;b3Fi7,MH1^&=)%<^WLt]YZh,/X[lGV#dD&.WCrqM%/
%?A"._hL7P<a%o4L:&Tda<c1ILe8Gg#0geL@*tDn4L7tr#^p+1MRi;X,o7o-or8IA8CZ]g_*g4@05F`2\gDu:@pta^NSFcJfq:._P
%eTLUFfQj+-RXq[Z^JSUBD[].C>kHla$?s>f8[-ZmQc^RFm382XBMAQU$CZMq=T]ki2ADF9`4m7RAl*Z/`P=I8_*%)O#-r`h9i:qM
%LRR@3g:JHi4QI'NI<')f84m88e)UC]WeMhVB(0H.,m%hOjuNDH5M_rRcQ^q@m<fV-Mp#.b=>ut>],&?ASa'SN]MZ.BO%Kn>)JX#j
%;X]]8Y=Y1#Zk+SGM.jsbaJqKA&j+Pip7$X/G`)3*BJ%f,dWXTN5=_HQVd<L:9ch(Em`0`"g@YdGa]3+"2Rk%YMSVZT%^i9RPPCKO
%"H]UY751G&8Ul"Qq1B\q!M;S!Ti_CpVd'\)oT*rW(dp#]MR"iCrMF6FYo^)M-I'(b4L@G0%hQYXG"7bQ(]-C*ll)M&#9se8\-FW7
%^Nk5MhtFCl5+^p+B3.>dGYk%"5KO8J/W,j&ngiWd\H37;IiW(bc#bK;:jQhhQ!XU81c9/D!3q=m[-1g,(9Fo*nW5>R'=9')T_e7"
%IHZ`:$t_)BA)M,/*+-e=rB.<JVcipj=p%FZRo'$)3mg@aW=tVW4s1U$mS+;fk1n)+Ws7j*.d3]r[Mnn%WdCpL[UiiepTuE9J3G(j
%j2\bUn(Ane(U$oKRBr.!2MO>9cJ[%Jr$WV4R3(HSaj7^Z^=boHLJftXlVrbb7WXYoEpd5%HrSm#^>?6P>'eka>F0\m9&H,(gH[Ii
%lS'oVQ0&Z9jc2:=k+a(b"3+Q2gX95:j>)KQEgt!3q%EJ5,Ir"LICFGd,+j*g.oNm@Y)e7K&@Hq+:6KQ@P]0D\NcsL.L`]g(cp@M5
%]*4Z.XdY:6IuSK;XF(G.YJ_:+0q*lBK;H-Pqa!rU4'G!$MT!%%?:!roFVWQmOK;ROhFG>S82^%u5*kqJ@182\'UAG.\KgC$9Tnr^
%m6i"AdYsO?L&<$p+Kta7*i,qTaiKs>C&lSW(H#'(#5f_XU6C"=*TH`7_H;JPHoIr,7-:UYUkQ8,quDqj'9`A(\We`G-i\G%&0?<J
%h[m*.U9'`>jH.K66Whfl?Jdk%@7u68X&K)LcO7u5W^+4f,&QCe0M928J)hA75G5PSO#Pd34&n-iQd%CLa2dQD22Kl_*2%eCT@"4k
%TQb5Mgm3Xlrr(pur9WeMaPF$s5Zf$MgZI+Ni=^@]2#F+"bngEq/.6gFC^=Qq?)9UOTsKo:"MChFEI#QfH=7f,K7ojE>=8M>L>*B]
%1H?.SCe_7ofEo2H/Mh$0Il/FZgGko<7JVN3D4?5[Pe>C<(@H*cRJA[l?iP$<U-1``aR>eZ)Rc5ZpOH"GbH_LX<r>q>M.jff8@!EC
%S$.iO45>hV+G-pi#n+%,fU1b-oKlJl$tX>qLO`3eW),'$D$I\S1G0/a=&?G[JWpl7CVQGX[k:sAedi&$aCL26H7]qKEMKoGL/5#e
%&6[QZk!qdP?S`1I1.?!@&WbP+#T_Ql0MKW#Up.B0b-i2KVBb[/C6gpls'(a2TbmHqn,:QXG/4=0T#<5c4\r=5+a`;^]1&l_]RZ87
%f$mB)pL"00W8:aIfQE8h],P$bG;m",l0d/]h*&RPi;*iq]DHZ?fR9?D5E"15%J3c2"iW*o>L\tOgdSlN0Kj?r$)4I<]I;od'J6KT
%"YTq%7QUbAAMRg8_'XCIj94p@^#4%3$/XL[&tOA+?LmNHHc`laEPK47@Yrr)@8?GYc/LAi]jL60^\O#T0#[7&?:L8HZ0Y;SQPp_W
%K8&DebeBIf<OFDLNPZ#3Rmk"%6m!fADT`WtR,hHE$PZhm7LS/%$skkQ<ThZ^q>eZC8Q<cr"!=d$f6X1)#oboZND-l<Ws"F<+c0@a
%],OJTX1P&Q#udud6ps1bQOoU<m$:X]P4jM1`\^n8\Xc7p#D)[O%(&io,R&)*1RRiaZ(\siH:0]6SVj&44S+RM<><h=OXVulfd>1K
%o82\aj<4HGf1m1^6+:OC)CROD:TNgA%tu;,d)DPI<43"Q)o8U,cVbZ+P-UhQGFDeME%Z9=1U"NHf8@%[1$%KDa,(ug96WAB1b@LZ
%oUt_k<Do^Ao;krqaW$e)3!W>KiO2LFkRDs1W:.DJU\^<*pbYIT\*t=/Te-)A?DG4<'WQ%H]l!B[fsSp1D(GNq9fA!C$bFon>$-_\
%Z_-[ajU_1m6X5*(HE*d^Y$bat`DSDm*P"S+atO\`NPpL7btP1N)#*7-fg"dmrVt8C^F3:N(T?XQbF[uPotrR%OQdC(js;kL1OU=;
%<i#dd2D5#`f0;o*@^*XSB;.("nc>&n!.F01=?DL^[M?'a&s/c#ePaC]).d>/CWSA"+$`+i)EfS<:aH34YR0Rs3!d7QTj-?H*=a6p
%3U]hLGCbg(p!G)*/%rL0)"asQ=,J[W)2\V1&DuT5fB^,cO3U#9hP::3n?31PS?B\33FJR"3^T)(&=t2Mn'M]G$s)tN<$2WpNDS>$
%X"UE][Mhc_TIcpY1o[AWIP1_Jeh]_@6aH>52:$Nh1SKBu.KJo;b/$4mN/q=LM@^e]Sf)QZCW_4Mel5ggWnEgj[\hbb;f/TnA^B=3
%0+02\RR40Qlp[Vc[5Ct8R]:7"+\5;$B+:,&,d++aCMH0)0Wm:@:o$Q[jhpa>G_(NkF*3(GVMf2K`h7PS3a5S./Lj^i:"-l6doo_i
%(0+Or.d][TV_'C/gUIGDnlf%$F%SeX1fm\JDH-]h'XCtDfiD)n\uN'<.VS+TWnLWVQ)e["jH:(*<V<^U5$U"_O(,o@jAfW%Om=ek
%[XXks8/bF5h)iR,%hSKmZ;XEXIN)*O\p4Yonr:j0,$!3N7*l1d'_qOt>>4j\ZGnQXmV^*!pGBh_T=\b3g](M[Xa^$[r#/?eN!`dk
%k_,T9YQ^#]"9;><C,U9+6%4k[D<1R&>J7IdL2fm9G*=CuW3/^a)ZC4`"&I*u+o\=`0X@*e^X"Sdl3:tQOVAQ>7GM`$i5eXT&f-$V
%i3JD>;`p=(r\h_^_o1KN>!t3"TN1dS0VEg=0SfG$TA_G84oWNl6Af<N[FM9kaBj6-rMF6G[5\js9V"@F/V)t+W"!l!3)imOZ5/;6
%^6+9l]+ZVf>Iml_#(7I92tWT6j7`>W:kVlrFg</0NO62l)u6rV[85SKXGM1na,f\fB@.8p,?KlgI4C#;3!stg%Xf<FY-Eb&GdnMq
%UTT=&jV]#;SB-RXnk:'-<5YE.,DB;K&lB6S-KHW)Mc/WD3(Tn_rso#$?sM"LeXSqlQg\h!U@PR-:'`u%d4ZZWCBIfPqN#--:Z&3;
%+QR^'JO/&n9T(Y<+JtEn?UMRW8d>hl6%Zd%22c>`))G$p+OTW3'.W\0HlooBfD)TVoPkt^T\kRN0osp`;XWbb!>l)H1JEQ$m=skl
%q8W7/:U@OIUus6mm<>kN8\B5/;5r)7?N,pVmCFhmTP,0,(.Fj-O=(9iR>A_IC2M^X!uqDhR;]2fLu$Lt,RW^!cHg1,f4rD]Y[*r>
%`gCjI?/f*^]lY^`_:Z1njt\W&Sqbh+d%OIY"KhAPV&1H]85L=G4VY8FadsA9],'+HT#J`'8<2DQQ=k1=WS!U/E`no3nI(S3,T-Lm
%S?uPW&KJ![Bq&B-$%mZQeW&U>QA[QkEM<bdJsC:p^L<6qY>BrT5+r;^?:j7SF,F,\=?N:F2ChLY0eq*Eblc:u>_$S>3:I%nIHQ9:
%%ocm-BS%I#K[?MJ@"P.RoAXP+&9ZQ?&d#N`7)!;I%,a]\#L#Q;BjUXmNi5>q1':61l(1_'*R!M3!m5&#Ut)hIZim5tM[h(-h0Q#d
%Tq>A4D]@Z2N"D&jeoCeD/q/SR<OEk0=H"r+0.T0R2EkhA.etkQ*YF/QgIdZ@@5Tl6K;b:ji1?;e'&Q!8-i;6:a,*FT@9ob1Y%@O^
%.)=WS0qB0=1Qq+R7WMp&R>G91,"/j/%=ObFmi5'poHegciu#YHKeH935P@TqJbg/QFb7n7]e-Tb-)`!@1pkTTFjbftJubkDWemt>
%0;?5:ql?@\E'iFI:r'A4H4Pu6X3t1.]s!\Z0,-9mJTQco(l7[d>[fbTfGm:b^se[#E/[rU2`_5YP0;djG7F5o.91kiVLG9@0k^"o
%/P+q,`(HTIjp?cUa2hk7cj)d=;`al0S=M,ef#J623Z.RnTmhsAbKaIiO:&[&)nGnYY>P9]YCFh^`g=>6V3bKDV,28+Xi.<]+'_OW
%U+.QL"uBb@\eRX1.E\?`XV>%q#h9n+k=-P.8V$B*Hh="F@7hJ9q+!6=-,R\t,V&K'*Mc"dcnJ;tpuk'>YKjBYoR7mkTF[dQ4KEj8
%8qdh=qDgfU+4dQ+\4cV9TW<3E#m6T1Dnt%`;Bg4)o>Ed9$_p9WSqc6#"@27QF4.bOB4Pe;Zjt^A8Cf4U0jgl4o(#_&]ci\\nBT5=
%MYKYb#V_(sFdmIK#;N$;Wc,"7]m&;gMBd5<*8s94]HU[:'H"cJe1f4o!10uV.9?bZ`G<:aLU+l5/9GmFD@(KReu#"VdF3]u&8/Ho
%.DTh9YhhGX9Li'FRi6oCFD5"6ZlBTgcpgO.B@IWKb:m`.[*3'i?`@#LMNm+'qJ&Q\CFB?Hd\4T\BCu/!p!u1KHDEnMBiI6JNTN1O
%Md?,'@i<.,/`^iEaNg]X-()<H"m)oi.a\@`PXMWPEKgW"Hj`Bo+Xgoj>s?KF<r_huSAn+IL&'te*(pAk:Lt<*OZk%\d/7u!i^t1_
%Qb+=B.:;\K_*OpVd-Ob]A/I>GNDC<!BL$n:+&XBi.f.Jn67)*`L%eEOp?Lf0TkG=4r!HmZR(u]O)ptqDOa\I12!Xo`nu`WH8ROfJ
%dpLYA^YZu62iM'1qfr*+q+J=Oe2@'_P:6/D;84?lQS%qCIR@2H?Z-mP.(<R*-=%f8Ndtl9N)^^KHb@i"#KIOZY2T^n'!J;_DJT@H
%0mQF=`6<=tM3.,>@3HkC0FOYUD[ep8ReL^+(&!aZ'g725gfhH:^E'V%c+t(gTY+%!p_a2kP+R.oW@kkDLpB3Fru;u:>3jeTS^OkR
%Z8-Rc>tWi-7=YU^9Zd&Diq6escPht'HZo!e%,O[.+!rO_KbEQV8o`&f7A7#`<op)9Ih%$';_X<i*iuSAb0aH/ZM\h1[Rq.>@sej>
%A3@0$!5njIpUNPs<qr+"5eTZPHVSXl\UWH[&+1I6l6NC%MTj.;U1NgPVgtp?TKK2R8s?CfW7]t[k]PgB/=:mZ;LCdB-4j`ETpS)(
%56iUbfj8M2VDAS)GmIR%g;g^G$b4&8TZ])g;<gurNXbB`<f=jELj+2##OcGKAi/V<F,2_7%YZ>`:s)b]&dbX9ULfW$\\nNn15Js^
%?5Zlp<:p^&k^DKqqa`:oTYL0>$5NNN&=SU"^4i%LpW$Ek6d;"F].!]*)V&"ZF^Z/8ZKZ+[$t,!J%MY#(bMYs;)b7*Y&9mT\+q$J'
%2#Vqc$Cp9<5B9*a4i9$2HS[g?8W2j4H8],68&\;U@^)bb7Ma-bOKIi"]3+m*.)o+@/*VAPH47a72UA`-d"NEVcE%E,<X>^sft/3g
%C$h2?!i*@J&S1BC?9O>PQ7s:J0$=P#+!j68c7?E,&cZIi.fql!/1F4*nWP(!Z83kZ`nA!b$"6#a2;.#VG5DXLs7mAuqR#bW<:Su3
%EBBr.hp5@#jRVm"oAY":4%HtD?.J,UQ(?-**8bYs]Vi*d55i/O>@/5VYH6Xuk420?qIY/*f]c#h#]+p;(F4%p_hAFP!]?FuWIi[=
%1t$`jot.7?N[+;QH9#']44irqT<:HsB4i\k/tYpQUUa38P*iBR'MX"D5Zde>3u=mWa*k23Rk4Nr+K%a?<&G/S>@^m:QdG2YB3bj<
%"rQ^*.[nY2L2"O-'".Q7EYbU_p[;eDcLuOP%TMb1Mnm.L?-HsnJSZ_(NOH(Y4eb]u4-W@Rct4f*`R7P%Ep47.U):LV],]BgNESbG
%Q.oJFlbV9Pg@a/o<b:nampXBu`S9^80t^F@f6-=^FJY4%k@en@<F+e;#E)'=!=DiAXd"ud$=6PM<i@;EBNZ<i0:YiKlc1oJ3o][_
%MDC;hCA01_:sKit[VeN25@E:ZFhX?S+XX3aXD?k7=?9<u6M/E!AO=)40:RBfTq>ELj69J1QUZ?$pd!..#4>@0eKiO5T0uW>q(a-g
%"&LJrdK+EZ!lYqB$e%ZWP9pdubo@"F5=qeDg+@Cr_ns01!#f8S@NQN\#.0U0WX+UZ:p_U6kR!Y:np8P-P49coJ\#=DKO7Uj>gRB9
%/U<YV&'eod]8e+-b$?>u^e$>4Y4K\0$tma+K>;-@Q+3>d3\1gQ+ad4SM[.)5IVf*Beb(hq7c\-'l#Y?CK:Ohm7Sn6Mf]<^<*-`&.
%03_>g?45f/[i`1:HiOVuqZ'5nnE;0_a_[Bp[7r"ikN9u:a3lh=09$&16sT>^Af:+]Ops42ZTFO7'>2[ZYO)Uh?f=h!kC_Tj0Hl,h
%#"/M;WS3W9I1#sPH+0I+7FZc4%4ZMUJm5O._PKU4(?rZBq"=5$6r3,D#s*r+3(g=XTend&@#=TFZ(hX$LgBK"eq:J_(`^]bf4n'j
%0T7obP%0>mE>>EoXHIXSI3tU[VXqVNe(:JZ?OAW0c%@ag?'?L_3N6JN`2.,RoKmA]>$*\-^_':I`PJ"%A?ZQJ%`B>)FpA$S$]&5G
%\:>T'OZA7j?VHYX4m,C3@$,F^QcX9-)X"k7D4*ioqVk>a:1@5X6fgYX6a,l<]HlQ>";A_ML+Z<L;gLh/7,V/YU"kLUN&<'22VFf_
%(Ne3F#A@%deQur*??X?<cN">N1=du"Zjp\&:<G0jPWHc]VXY/'`(Bgc3B@An;87Xg[hXb;14;$D8%l;MD,R-87tP"eQ,*GHXc(PG
%8@`%u@]XZ@eATbF%O=r(&Mt/Aoq<dTQ>t(WQP,s]gPYiA7A-A(Lr_q9Wr&!uj93L#:65o2dF?<>/=2*A&=h'KiJI,8ngYW<SKJpP
%5\AQ62HY<.CY*)"<L//i(APiu%u`?ZIKcO*@r#ZGSq<7Fnd%=gouWTaJJn]t"Y5lF.G"YmHUVbL26YW59ghatb'crS6sVMHkB_*/
%lc(deTf-Z"oa>W2Bm2>JfL.dHBk,_tR$>_j>d]"/7#MtoQ;q*n_?_YY(I=J[lB=j=pn]_9$&+63/ol&D=*5LK3mOU__c"P55$#V/
%ESB,kbb^;OBk*rWRnZCi>YH)H^FsG/9H/ogDq_]PM(hUBQ_f\RC#ce3EHg-H/oBB<)cp]_)I_.8+?E*feC)A(-TZ1L's@C^X'TQ$
%%Ag1d2],7.2q,bZ"sDX0RPmVLcdKgUC#`gZ\=,=YVN&dI`l2ZPZEu?,3+S?Hd`0tIEF.?Y4)LLR2NFYoK5"hpHYQ/R[BW$'XdWta
%rSX]4R&=ZYZF"Ujg,L[$*).ABBO`!=C?)P*EHKno/8`U0]KjHm>tW\TEST7b\rte"*gG%15m'H=EF6jJ4([361<ubUqbkGeP]:'Q
%3'1]AeWA>61f_P(.H=$3/4Y]@aIcX1pik3,'#5aG\=5C2l%\[^5h*f0%pI\sRl3`L`6uX7g6aC0+<hbdC1CDD;#o?t_.hr@ZnZ$;
%.c,jM^X<KcD-Z_UM["%V]>_-3]YUV-MeQ[;q\ce%C1D5pkOkiiA%<U<D-WAb%]54?Qp?X,D-WAb%Sdt0V2^[Qj1;U;2/V-82XX<Z
%pSEk]C#a*b\.-p,h6\p%D4!5aP3u%dQ9!2P1'Wk4D2al]D2b21U5a0?==F3Y1(Hqp#?/WV.H=s]=FqqqAM7n*OJ'9%q32+Y*G8<k
%FfFEfe8\j\\58;F'Q$_HNWOXaAP\dZ/l!MOV2q\Aj1=l&21=8H5-A*3pTa@q4fIm8ff'/@7XaY"Kg)1o/uF]ad`;&!@kN2"SN]eA
%+%Of#dI].!(9`/`6Do:BllqhN0GO\c>D*B0U7/bbSkgN*J!6o&)1h$9IMT\=98g209_$:,Pn619NIb!(=5)"tUC,X0-#$Y-I<1Qi
%[u>)W9,E#]]cds[7BcPJ0\Uh*'K.PtE4V@C<trA;ObUdK_k\]=a@r_fJET6S!#diF<?ti\_Wdh-@'k,l;Vo!5?R6L4lHdA&l^I!t
%n8^KB5.P9+>X0s:Pu(@-o>-0Kc@=CMo16lI=C_l$')@/TG_D9JJa2+23BZUc"KMBu5Z*t>eo.%t_#^_l1hKSp9I'pUAKetFY<h7e
%9Gn*fA1VjJ?0[eVfefsq&ZME_br`C41g`hg^0'G&d(i0Cd!J9i)<MQW82Nt;+2hb7K/!Rl`Ti%G4n/%g,Aj:8c"J[e3kA-c\#Qlt
%Ab&#DijN(r_`QPQ+Ug8J*]t_NCTN)bDVQ^Io-7e5>.k&M4X(>p*_d5(\7dV-?)okV$LV"\9[Ehd;Ya!u&ltuKM%3T<TV<O!26$7S
%=2Qn7A)V#22UJDa92Kg=&[Q_/>!\^9)[dd*XQg7W`YJnF"ljuHU%%AU>Zp$[Lois",Z=&;Ei1Kc9dHCAal)eb$e+H2I1oL27F(^?
%6Ba:;]jnir8VtRlBX%deO+oV!eHPZP:t"h8D<cua$re"@Lb1Jsap(j<)dLs.+KhAR;(ecEHem%VOjbZro<#&WF*>G8BN0bko;WrK
%qMj#DX>:W]O.nEZME_]T8>m)l8^/#pNE%BmRhh^6%sHXZ-;qC`"]aD24_O5`9\);Ped\2CNDOZB5O6.8W6WH3C?kC,PTcqY=j;V]
%c]BG(B46H9jj)KmM<OUD[k[9<VA>?Pgd%pN1K35s#MSS%8&U%R.s99kUKb*o<7;Hr:Mpk^P3/h5M*g1Q>M)]/BZ1F,B8`/P>++37
%@&=JU\dY(XEEa)@,"%r:R[eS4\n9NUP2BVqnntAj!I$lYUbP;M%;QiH;WsL9X^p0$Od*F9<2HV5#58R1]tVYmdp[Dj$u7_"Q+o2]
%JlN&2'*R'$*)um&;>"BmctS[u.Q:?D*]-nbWcO)cU&k@h@'OTKMjseWg]NXa<*M$eF&lpialN@L[D]NjMO&IJU5#:_r23^-4CO0s
%p*)JmX<p6M(Vorb,d^*g`8Ts;r_ao6:$TkPD5EI2&I9!'gSAU>pK,ebd;o`)5<A%;g&\j9BitEf)FPbE).Lt.MeA1%QNeO=(c9#'
%3MS/Rb<?9CEl<EmRUH96>l)TXPEMFE9>?EQQtR?GYf6_n#7n@IMI[ps3G#Pi'6!RU3gmORnEaU8/WG*)>EllVe;13P8?t(h)[&D3
%U_3KZ0Y.1bZMkC^)jM%tl;>iPOOii'J`UP2bpl-jmD]]Qk#7$Q]A4\bZ%F14<k'n`PZ7l/87cUM8!KKjGTX;^Y0G\O,V]LsBFp(r
%&ril(MF)>3BEXVP^B=hCXU*'7/:WgbMahb`W&3_^mD8'NaI-=]iL4I*#3pS_n\qr8KL=Hc+i37;e5b?_'WT:B99kS+)KUPV"&FKf
%`W?(JR-^Q?:]`Q9@&R#40SD`^*jk!nB+);\CRdNDD(/Z%4`M8^nh9Q51_OFJYDT3"d,>/Ig+8h<J78g]j&\(e>LP%6IBLfsWk!=#
%K4e`CI4C[B*YX<HPn^a0:&L:`_?obnN58,9D=W>bF=IYI:mg2CV7N>ioWETNcu*6ukNZe6'LIKuBk&^';@$=X9%_uSrAd=GRKJun
%'7HDh9e%BTN<6+k*]gI_7K&X;;5oGfcd*;u^=:grI?1:OKu7k?45/ds4Xu(@.LS4!PLS?$jGTOb#8Hf5)ZucaAq[dTa"_9',WF<j
%2IL0X4d'<%5E5,Gi$N\4[JR"[E>(i-gC@f5d7eK3ht6>!#MgtG6p_3"=!.9RWJsqYN((LZX&g))0jH/9.[Z]XOKBSkf1N,]J5J3&
%\S1UM\9+VJ[/eVSp&&[Q+-#'+Z@8puL]O/R;Ct_ja!$oPU%WZZ>%\n8EUt"n\JIR@Z]u(2#S1!FOA)V`AJs"*a6^u/H%`AENu6u+
%W,MD&k1Y,]4_dt@[WUodan&:r3/d"R76;QFVGO7I_5Pd,r&+Tk.r#jsP$Zh5)WhH_)`9=uFhi=CKPI1nA;dnGr=;f'-IKNAS9Y#W
%\CR'KF#L@T=-B$n3sLY^K6H1q7(e/B,=*Yc"TW;D'.dDMM.Y0nJ>B@=@PuPZ(=rW#['cA<6Fhc5?ng1,0&ck!-)L-;WQ_F;@oaMN
%@s-6PO]o1[E#>T?UY'F'J[,.N]dBBac#5V10hpAP#f*hdDqA?BIGO1WF*OPBhKrfVCZRF$?jjS!SN%SJibsK#Xsl3*("4(sp]VRo
%/cQs*)d1"p%&YM#E=EaL.@_mV00eK:s#t6urAmLSeh`MEkU!4X)X4i#1M_et`=]rK)VP$3Z0HoR<^:etZqqO5UI"!jIWHb(1@@'7
%k@$GN$LRCbcH4cm_53*QaXFAA%N8%uKlL&1'pGU&:d0D%%:<T]KQ:QGYn=u-T'P;s.*IDLd.)iV;U$RPD?JD9192r3$scees/gs0
%/*?^sm&rB5)X=7UoE\*_WEE?]:!u,%aHBY%ZdLp1B\A?AD!n@&=0S^!EDVe@Wa9t@WcIul,^IoKQ`*JeY*Bu]&r,?*?+JnF7DjfI
%b)[EA!WE"%gR";_5t%r>is[mn5'<6,Y,_miFbr*"4:AUEeR(/TL/bR8#?Tspk,bXOc__qf.>;$"WGX\]1V:k^@D9UQ^1@oBEe";3
%'lD"HFBc[s"eC";'3O\oX_N,WZ>O'f%snjjo.RiMI3ki+BUHR,R$lP^^$p>E&oP)ljO:k]=Ft[/`$7L!Z?EJE!7'eK=n1d0W"3bu
%hbQ[&q7*RFLJ]0AGPZOB"ePN_=0im^B_BUsmUAk=gHS^:_U\Rj$>PN;.Hl)/=r6:&5R@Aa)+DqFV.-$p(bV?nF)Y[s&GoX.]KX`!
%/!YmE<#NCa=/G)CkQZ9[['2&F=d@FS[)YMN&,+PiiX^%FbO&"od(4lE+d)b75Io9JO\eU(o2WK<ku1:iOjF88mo00<8aibiV$Dd'
%-O2,cNUr02>cO`iN<m!.Tur8q"@*[7elYX5Pf=?&hjN).%NSFo^?u3L-e)5^D!gHNPQ'/MS42Gcig:kDD8d7?"0*Rm[@@".jgr+<
%qOI:%nMqiP[^I4t8[R#-7Y?ef=PU.J5(R?[<$W=H,38[=n'*9V,:6-J2lRBAPAK04OHkt*o+VA1W?Z^tY2As'AEI4>^*\t&%pd2)
%G`r(%O.@Q0)=?$)8_DC/7[1!-=i#P!2?t&`cX$R+s-Rr@rFn2,_Y!We/7%r+e5Tf-(XjuG_(Mc<)22ggb46/H%B$!k9LG15G0l#)
%Z7;QlILt4^=E?oK+lT:TMKtV@GQ$r+N4OIMrYdFKj]@T$^J:5W,hK:FaK+Gg!%ZIbYY[2$$+K1j-LW="eo;5IGRA2q]78Ea3dF'6
%0XPA;.M7V!^9]G*=hDYHZr"@=QlW-$>gl969eHX5$q=[ee"7*[<RZ8^+baNL6Osqi5t\CZ=,&q1Lh,MQ@Znoa1fhi*Rrd)#>*!hJ
%aK.ucIAi22rdlRWF@).O5tMc86BX.<"XCEt(i899!Y9D'G6b<^,c"9*MPFLq+cN<uZcP_D<M!VuM:Ra-B\dH'S)\7Y4,?`ME?<GW
%J1Hup-,Y;1Tp"s4FNB^oa!T2P&]QBnGRG^D!0u-:0F1?,/rPjN<'J),08keR-&DL:)EOI^B,GF1%d3[]$qsPirqEuWit%#`:kqVa
%7`U6`R2m[AY^f(RAMtgAr"id[e9rKo!k9'njb+h)/o$u4r(K867P^7RbN+*K&"`BF"o"][)WOj9-]Ua9s.I#bHBX7kl(Sc:,u':M
%_eo"'Z)gJ1r3oiB[h:kqa#TIg!D1_ERE3^n.$"EtVej[kKMiCJH%:4e4Ko3]-\)"mN,bciVE]2u7Tu!0]CM2L=+cJA@;5Z4.s$&W
%j^3[:?Im'QVQ1jpFb"%BAA)Lg4DeroR(Fr,X:bm'GR_SZL^Z'T.\`/6b`!Fa#a;W)>;D^EDT6'Q;.SmT5#jtKei,&Z>5'fr-Y+GR
%>#U/sGVi#6SQgru8H&hoq6E&7m$H^O/aM5mNLfg%V&7[gI\[ZKC=CL^a=/W:).TfrVg9H8c`O]YC@T'So@/.Mko>d`f?/30M==%6
%8&dcrSQ2[4'A5`+raG%Z\bZ;<=nV(G:U%1j>/o#"P)Pi%B)0(p8B*,D\fZWa,t6E:/a_E=$c'B&f4[YO?8['ZWrUsO4qH2352T!K
%H].2*Wb4D+M7heF:#5%0ZFQZ<@<bc_9jNB[Y.0T^=/QVI1CSOen_>6.=lg:UV[J-Je?h&g&MtC9\"86+:oE;f%AG>SL_&fo5S<bL
%LGpK'CUe9_U,TXVXVTBUZBr'3U3_M:cKMFJ_h*sr:/t#QOu'YmKMD0r,c8QG?3WR!"a$)tU7MKP#DD:NRG.+Y&5KTqO61CA1<-G'
%Qk\`Y\e+?YrtU'E3V[j0$J()u9fu*7-?*>=<HN@V8K(elo>QZc.#E23bnQ@okg:;cUuOa$@hD%M0TScGI'Qf_Kmc9PN4$[K,N!?@
%>k*8jmQp^W>]rPiluU?GQ0_@$-Gb^Y^H+na*4s3]fb'e$SX7O"Q5ZY^6^.&N24XHk4H7lW2"j7Sr]uE`M\]Eu6`jMt=\/&m'ln/<
%Zlh-*=c45i0lU!pP6u)q-?Q`&8cmZ_3HCkDJLSRmgGTKU]5G:Wq7="#h&h'7`TJf'mh_FupN[N??CA*XLk3rc?>HC+'4E_=V$f5A
%5g^EU0D4/oi)\#nkV[u5.>pY?gP4p1`.M:2G`-#C%aY9%LlRL5oJ)=f#lnbLU/$(T"I@Lh0@BCu:#%e96&2UVd>a$Ohqi`.po=>U
%`hEIJbsnfXoq2/pmSt7n''%/5*?'Br-X2Lc%VHVrF]"8p4[Ze&#q++:^YAWDCo'8U\-Y'u#L1Us_$40Vg**Y-%'m7J'5Rc[18Ps$
%MNc27mj)%[,>PI'e-)7Vc/b/Ued45n551^uKaB[3\PB@l:Vq;`2AkHm5OAUn2"WK]9,281aC2b!PLFr??A@.$^R,pDP"ent3o3WY
%D930o"'U<$Th_g4W!]uhLIigO(+7_h\=HlG+6[%?Be[Bck0"(>k?7`Yo__d^e@QUqGoE3i:sej5ZqX;AgV0600n-I&a/Z%L^[]hF
%ZFar[]C)3>m(;!fp)i_j7gO6/CuU.?#/eKZU(X2sGE5ksP$4bllL8?XW%"6&=]LR@g1E)f>LaQH@=:`#:;pL!=V-'a<5oC(hR'>S
%ZHh_Y=,XAHj;a$Beq1[+$HHWD>*c@W^]IiMVq'Y3-3&VchjgS4(Z?c"\afVO26*%@A`(AOR;OlioU@.KYm`iQ%<Q8D].%9\(F/F3
%j>/'sW>X5)!bZLipE/*ZWlF^=mJ?O>S1H`5,a1e>FNsB6a[qIf^:o10egXXqOB>Qp$!G%\[s([oaQG?p]'%Fea>K40mCn6@Q</(:
%@FZ1dgRd$EchgT>]M'6,^fc70h'-!Jb-dY+\n\J95\X9WOrR0jDb-Ni''@R;$j%jk$p\r1'3)n*"#^ePq'*+,;tH&]Pf=(n[fmr(
%c>^YOFd.eV%$ZIJN"1s%=W8qcr1&?V?<88W(^YG@(BmX_GVOld6k+bKRZ#]@l,_'MP_MI+J_C1E_.]%uK/a^0CKd1p-.gO92<PGn
%IGn\Y\UZDuOhRW*c%s"PQA,B`I80l.AGTp_*3qRj8L,?-_]VlW/>.70rkSjqP*Np-bm!/lfKl(A#*?`U\H^Zga,km_Krma#!KnGD
%o36j+@/*:oP\0Yg(Eej[\BXPtNbks]'mW,rg*kGMA-$BYXh(-jmfj6<Z"8G-4;;pJ]Ccf@]Vf+r+[N$PF6s8NmuJp2^k!=as*>9k
%`P+V(MLaWZg"bFUo30kYqFq0&0e:+*)7:aoT+maV0pegBGulYG171E(UENDf1:jt>/452uW,>G*;MT)IRWGDl9g<f,q?'a=l9dY3
%pA;H-g/#b1R.S5XRZNKOY@B&!-4P%D?dbZg8gRQOr8`hR[8J)I(P]p'6t%Us't!SWD"0qWT1^?5b@1I9oe:pk?UQ%<Wg^(?EW0t3
%]5n\W_9G8<r?1X:L8(WS5fq[HE1RY0RD^@V+n`73W=^:%PR%h68X="Y&M,9$U:.`0;aFk.&C@0`Z:)7/"rq=#J;m)Ea?eIRR>Es:
%^kP!Y1hIgJO/.G+8eNk8<HhK^'ne>d<)uDCP2f4!g;M-P)WB\<T,e`/E%gCAXPg@Z`DsR/\hNiB5gh;@QU>pEjrb0/d-'r1#ki:\
%,.E^+4rWDIB85i)ZPUsoJ_@_=pAgYeIe9:AXuU(_`\iN8M"]Eob6c""Zhb/02FjD^8Wq#DlA(m;UE@sJ+:de42(^iP<SBGb=YK@E
%lPWQ<FnKbA1T5u.b!ZG$1-:_5enYQuR_kp6h9l#2'taj'Xrd@UB(^9pT#=Ne\4r-8nXh=QR3P&GTZ"p"jd%1AkHnEO75Qh:Bf16-
%ei0t=C)q,DY-p";Zcs#a2/?9"k\*Ej;OX;-OWIsFK4$GBdoEZTNj;#TZOBPP<7BU0=DW6k=`o2R0a.WUW[apW+HhPFBA9d)WC9/M
%D1dXh6]I.DW%9+%%2plN\)DBlBVjoN1rEVGDKAHIr$L/H>;C\4DdGFHiG]WJY40.cKW=0giO<^tra8IM'%ab?)3&&BNK$D;T$(fK
%<0'oe3@q*Zbr&=o]Jif``D3h7)"6qeAN6gtqm%32=cR?%NX[=f;EO$P/B@00a,2`Aqimsf?)D*je$1OSYrgF>0%7(pkua;:fZeN>
%bB3*rF=bUWKM$c4aEa26btQ0b9ZOS8`rOT9psIT5Cml.kQNa`%k;"'oG;1OWdkVs2_(_2>B[+@?A94g':m^G!b]GDZFR3U#Q=W+g
%D[g9GN]&>:BKFksKtL)L2od(WHDUQW9cc.?d=/B_Qg*.nl'Rh%aE?uKS&e8n>;-)9HksJu6<L[k>CV7EV[$p!*`,So]<L_IIcL^D
%9XnXu2R=M&Z6,RB+7lc[K@u<2foOtU8%`Uo[jE;p'AAL=AVgn.EAOTmLb\W-R11"!rKte7%*O)^T\Al'7^F2c[PQ0W9P-NOANrXs
%5N\e/,S49r6KNE07eNhUUJU)'6Luobo.b(Q&^.JAX,Z7O=ls3Jo+?qcK>]IuHn8knK&:I6O4DHETQ"]R[('s#maTcJ[T(.]5NZNA
%<bFYZANt@E+1'X]9fUkV?r"[')p<\HbC3,s5PAYQ-JFMh/Gh.Tq[pH4p1(Pu24"3.Bg2g_k8Tc2ZBN.1p*4f0]%EE_4r1L)i\DU6
%1ES-ka5ToM+58OmfB[jQO4Hg.etX0Wm)s_!Aj,j!4m&C3VHJu5=c[Q*O4dZsn@H':?cGs5et[ALehs`T8P5G;\jr9r)3=JkW@[)W
%9hH>IG]].4O>f2jnbQM1@km!U_2[-&@^]cK[UV5M0eD'6S*_&Ym?jI3R$R-,b]_4RG!t`I35r:6[c:\Sd%;!WPI=t*[\KsAkZuo&
%e_,s*K=7GoD*+%p4(;^"QQ@_p_JIqdFkMekCr^;!@rSkd?++6"gT`Bc0q.L>$jMh\AihX*66qlMNlqbAd8ndY2VZU^i&5>_T\S,E
%q-[!BBSO-LhH#u9;*Af/4!q9SQP&BpK7rrsXeH`pbp1&@a!^b&foA:ok.(g)*g5QZJZ/\p3V9"YbuXaBV^3PC^^A,*=To$Ufm"V8
%/l?0(,cojY.kuq5Lb1*3h404PBJfsVriQKGU97!rL)caFOFrb<`c6CCdgYHr,fN0a9oXsc0Q'gQ5]mp4D`<65-t_B6!Nf4:FF?m#
%4tXf&j2>/\@s#si!]a<(a+GR+O."kOdB?&#5SS`_jnOe4=lAp_.(d8oE!^ghj:T$0X4dXO$CMqh/e90h5k-Tq6$tbd:^!SJq)&L>
%S>`_)fK,X$"EKS&2<rnTLu#[Q-m<0dIgZ^IVW7YeQ_r*HEiERb*cu^>irb.J\qC^"[;muk&2f9E8;YCsH9]-c:bJuTk=UeI>QU8U
%)o\4Vo]Wo9rh\K=Eqreg"qF1JZLHtQ$&RZV@Z:kl%n0^1_FfF&6)XqkOf80GJB3E-_6!!KO#qZ9=aosj+BLC8+#Xs&Cp>BAWhEZ$
%Q%`c\fA?!X1:nBQ&EM1`B=boeK+N8JOPin@fftkBXkJ2=fC#3/e_=J0A!!9(959oamlgm[b]nN=7uUHpJNAFE)l=;9g:*\aO+W8!
%YB%5SQs%(Ca4n-Ql'L_rJF(<u?s]2k-Rus=g.+A>5R):'b&)rP!]0&No3uX$+bF[00pMF<>)'NeW<jhUR8!T?Y]:<C5f@2+\1tD\
%apuP^(.&VQYbe4OB()f+`JkkCD_?j?kdPHg9d_ZaN=QNd@#XUO'mn9;3=t[^q<NR<\C"goEKX5=[3ka#/;V0<HQ=+L*VMg]G:\Fq
%WM"k*^\mQ8qto:LrZ?Xenb_5CgV<a2n,De1IfoCGJ"($51]R.&hu/Vns6dArqL@B$l6$#amls#8rUZZ\mJ$X4L]@5<^Z*Z@NrQqd
%Wg#>iY))Ie*g-_kQKE4$d6&*_)Q&\.8HpjuOmHH(+J*6l'urPK9c.Zk61"?QFfGQg]XcV#g.=K($)%kmpi(WH_>P,"g@NpFI()5Q
%`)s@o3I:fD#i<=io9ZfFX`Ynnq"Z0,Tm%)7$\IdOi<:.Q2s2;JIiAQr"FN8B3O%ooNo!PS+\j-b\/sF4@BD\@m)N%tJ7XdN_9"-\
%2;TV>6RtT:\R0*_g.U`..&(#`6l&emc#*fr3F0rmp+B*d\_FsAqE`+4eX[\*!r%+s\!.H!T)pD]?B"F;pE!(C2:(ecpYH]8[]C&<
%lPElFju!h?h8$S?S\qJTJuXgC,037,1*Ml&!`I+-hu&s'*gIHi@(f*&.rB0;\Jt4l,;n.A\BLC&f=(e[KhUjC'St.3beR,KEjQ:O
%W"Rh=LL)bnp!BCk.K6r7Y4G^0/LorH2iC[<QT<Xue\XA1P/-)l4JS0-(M5<e,f[pHJ:B;l5Q0+2TiCRNZ&*`2Iu4QCaH,@.-K'h_
%NgD%=*+WMf"T`isiOX#,,*;WR8I9r!p04B3o+:pW(,KDFnqu3\.1mhK+IuCsi]-)A:/#oRjFk6o',.O</LCOZBl/)Li?/dIcQi>q
%R9;Xe[-pX]kab%%`<:'<\e<&OR.-2o$%4bijM^K,aU-a_'HZ0]-Tkp[id$L_hoLX])Ek%6aU\n*P\aS:#:SDYHu5#0?sOZ\PQU=G
%>DiZ"+T*uuk7=C.i,sQG7ZRfY-PrO(\d#/.D?TJ[(!HV60ZaJ20/?D6dK-kMA3/?EKoAn--jM_b8.bk;`Fr85m[6=W;lU_m`EMS]
%1kQ,-#LF*U6:POH*pLc<[R"H9Z2o+,j1qsd7MILWjXn:O+Xmok8u,o%)OjdU^d)&@E3Vn4/s8R8>8pN+Z,"-!ej^lIm=\8\]#V)j
%0;#BrgaqY`QQ&Ch8e$.V,D1-6q6=LqBo[WZ/l2_hLiiM=7B$+(&AJhUCg9N![m;.r.`L-bWn%ArDcYAdYUGktgdT.E!kJRSY%Y+f
%VC9d9C8<:9rAal1C,t)S!1qKq_1LUh`l9<5'U;9ISY1n@'\SO$OCZ,#4pEsp31@ujRFr#OWIL@Zj+`+8GpQU#n"R`kZ<=o%5AtR4
%T39.+-d;c[[&D6f5T2XroLJM:;5E"8D%NXFf5EkX"KhO3^gr5>>c#.=&ZN,>=uO&-1$!(DE_p4bi'TckmTm#J.tU$rIWYWjUC+So
%&BeuB9^cb:20l=5'c)Ls+ou<r.gb[<*6G/B(Vq8gpAT@S0n@/[AV]K(7q3/\38YQKV'_Cjs/<TkaLJWF3MAY4C4oQOlHFt-fEt^L
%F]=T'flk7FE63^c.,AR2e%eXq">plQ(ENuZR;*au!;7P;Kb,[3AdpMSR&hcgUj_Jt&]?>bQ&K)83%&4f"!rfno3.U_5Y?_t5RagK
%!Y-bhB+VP5"-HW5D.>"LDRG'aZTN$"pKniq,aDp4e\2c%>RISdKn_Zj.PuaeLJ`b[^bOni-ST%G-r&>$XXo/A[R*V[Tb0s(--kRa
%&;@QDZ5)'pV%,9rRKlidKr*-O'j=]H/T6=Y9VE1N['8%]TgIL)>mbFYF"+KSPaj51ZkOFQp9)F,dUro[WP6lM@Zi(EZl*6;9:7(U
%ZbDZ,Jhgimj&0L_fN?:T/WHUMeduk(Wb`.'_G$.BQGZU2BdlYQA8*R"\.k>o(7-4T99FO:%fh/&l0KK3[=/H8@'&'Ef:QX=YdAOT
%=ZVMfQk!UFAZ;oiG?Yu%GM\Yfj,7F3Y6;gd+`lm$afj(l]=IPM+-W2XiEChjU\\.]!,K])#fun@o&>RMl)mG1<L<,G>B_sR?&?.n
%/`"C#R]3GQJA*kl*^F(i/$%Y2Ym(qE<p_,X0h-qs)DoEuQf:=DXjJ+8S?iuNMq_&V5q9%E'j!*.Q)M40;Hu7\WM#[=nMrQ4;/NG]
%5q4=k(14.<7B+^=#WMFg.(_=7;jP_/VR,!PcDmbJE!%XPX.%=cl7nh5G&!"D(t;]*koFU9EZf5b/.XA([D>2#"W!juRAW*H/tJ9:
%c<=Tb>A&*B/Dc5>c4]8bdnldF*)`-KEaW'3CP,OC%Q^XVB6fL-XE_2!qX/[rWoMO$j/?a*V.X(U>]ZPZg4BN])$iOLRKk6J'g9>C
%<Y9'hI\B&U)749MOhCA'%S@b]8sAp[a,TNf]>d5ULh3G&^;,ZW4<QjZkKdq:qa!-=?f>2OLH\Lsq`TD9DrVU+h%6#iWM5s'`WdSI
%1o2(`9hIM?)XOL_a`X2DRc"&^FKZor\Vr1-OFIKs:9mpSCN.%[KNrYI$+e_#Yn5BNTR4BM`*Cho=B,D^2&"t'p=U6)BS'@j#S[F+
%.nn2+?t,amY:rMd@0T?fQ3m'_6ie6LZ>P$L27R!0.qF$]_6TK;JbXYs0__^e($SAqCJ_'Vb$c'm01#>YdkJD;5VD?BX-N\Z3L81`
%FWoan\eZO'8Qq;nR3*^$+fMhD%5Zm,0Q3fX"=DZ6-Q("9^Q.CSm[q]OhN`mrG_H[(="Q266)c&i'3j4!Omk&?*]A:ukBN!'OEWoq
%"-5,,i0o93jD6hqcg(lq%?*4W1ge-ms'WnQ+<RINH@e$YNuKK'[@=YYI/\7g2"N=@n]M*k'=&ro91hnjLK'l[AVrpikWi^qTVSJc
%]um9+nYtB8BX%gE5!0*X`mE)]rVB16^&CCo#n$U=Q&bg%<0;7/"HUr2A-6GOAbYLD_>X3f>,2LZ<U?*$6#2Xa@R'3EfBdtb-$]-;
%6HOB*q>r%dmFdK07eb(Z_6^'4[>c_j`s`l2c6+T\C#kkTXB2'ArKon&f:FPfYa[r1m%1:[i2s3U]tQ.h/`5*I6.b=lXB4>^Vu=#+
%MuT>(8FW!4d,QiqbJ!lfgom>+\GL;&\0#meCNdJl&j6'Fhs:,B1[)DRQtpfYr";,<qHcJL[RabaZ#5V=E:4&+qFg>1,THK9Bf53X
%e*_"T*7sO-n6A]uGLO;'Eq@#]4id!`Qf)`?;]#%4l9S\;KWo/`-#'m2,5C@fe0i9agl)P.X'AB9*SQmae<-#mf3PXb4]DHsM4u$5
%'5X=HI97D':$DdY*=TD4:r;X`27C=LiR?A(O`Gql58"b?L*.Re\-@Bq`L\o;B"\S``8"Yi*fr[8aEn&,\DM1sI+2nZIJ;3\4bkp!
%C@5GGnDT1s5m1(@fGM49-k=_+KLQHa(5DSa9@JLd;V;i`/dPCY%f)2"_U(p4#3n4E0R!!i2)<[sDZ[pdrG"!ACpt?V*Jm9s^`Rm^
%:f'<fnfo2`SZ$;-g2Gu"Ci=Y;L4&as)u/opk.rn]#3tPpY#[2k51`=f+p7i6duLI9:u$N3JLn<Jm3C8f$IP.K_iPBh>Eu^uC]XI2
%#Hi'Z\ipMl%pCa4+gK=7qdDcDE1)pIDID_G5K)^Cd>L>#CP+>%_p=d&a/lCerHb#,-$<S2/$7rPrr%0n!#-[ud&/3^\">$+5R:Xl
%<2d,9M:<q(-q>$:ZKkFjO1Jqu"!7arNl"=U4>ccm/$Pg-T"ol2$B?p2loDG#-!WAT'.HJEp^dlURhb#M.$FjYlPb!b/tg?KOI057
%MZu'k`a+[H0q"%%7TFh!ds2YCCIie&mMW5@fJBl!^^]NVf?:W]Q<>.Ehb<(h"A-%UCV\W\:8FS="1]Q=@Y7D,3Tc7-/)^WE-L(B"
%4D/hnrg]rg&+5.&W!d]l?TfL37Lk`\jE]A>>#;UIS!@6Xf-*W^F8T9^K7gL31S9dAdPUnr4Rm8Ln8WtVni>/%LrEULZ-'b&.982q
%Z3[;po&,R=]]BqhRg!U6pc(OjXctui56FYk)W"hN!P6gr5NO3T?H6o<T('Jp@l93_of]L,ncM`t&,.0gChpf3ql:h+g\IVI.gm%)
%7NJd1q=n^-J&*2s+:FZ3:lH#gUSqMd-hc?TfqZp[YEDt+o7-$_]j;IGFi3NPFo+2W1<ToSE.]Uni;d_hok*9#&/ENc\1Xq8dm;TJ
%N?Rs&UIgB@Kup?be/e6BZ-]j9o'p-A62B4t)n3>Z^Nk*9NS?XnJVPX@?C71T\LC#N_8d!!3[b-ZA9%F%N)Mf[C<jI8Aqu8NF,s=A
%o*\-<5EUfH&:MqkPdqgsJ)6i_PXPDtOC#o%SU+4,5]U4\U'mR=^lQoWJlR%_%Kq0TR`E":LZ%1mOX),rc<B%,OGkq21(u6$6pE)6
%foG_BBRG(90;5Ef#Y>DODCd:MU2("%@:T*#M!-d)AsEU^?TZ'np&+]Z;Ah+>C3HB]kjo#DY]2[lr.gu-Fr\![^ZM,q%.#]:A)uoZ
%o#R8N%GDN_VX3&\O)><U\Ep1XFDL.*$U<hVr("F:8N",&q0@L.?$]?!,pJ1^6-5SM,M_St9Pp5^[2tb_NjG:989ap%JK3>&#3rqV
%c.h+0K5b%:%s:+F5MV^=9uXY@Us+.VfBKebCC#EL\oMPXaar^kAr.^*4..`[G!$W4(D+HSMZjm'h!5D;E0<q5#^goMm`@W[QQZ1>
%.6"cc"#jh(h+CrBL"IC?35GJ-(RS18]a"5s)%i2]IgPNd]-4ijq>0J?n9^ICrb,aRpY1`5WM,ObfWLd*;-\kL-S/t*M16I\)!1J_
%ib`l,7Z;`Ygn)=90Yd"7MZ'YS4$lIQAYU#LlJp7^d#2SihDmc.="i7?rHQlR\*!o*QHW4LWBXfaV&16J\:LA=nJNm^^g2`L$X35O
%D,)(.MVjnb'KK.%2\3k#V?=;p3^=9177&`pQ9[3]m,Z`Q%))itVSl`HBb^Mk+JqBZoPFKj5jD,JglN5-M?/>X2t^<M9J1ZD;^>Dc
%efN>]JXA9<+GIOFMMbhd\@"g-03+J?.K=II!e"AT[pom8T$7%663?d6j0m,OkdEuOmBZO6k["JrJ1]@hT\E"a82%fG6:*6^6nOXX
%C-i.tR;js-)iHNB2Zh`hQI9e<V&6_mRg27bgQH?p+me_db^T`hfHnc99+22hYo4)c\cN!t/Pd:N[1"rRi'ZOYR9[O_,$`mQ\)S(b
%:#@bR%;X;B99<M,S,:&b5Y-p<-Y&4fW0I-,hQ0Rp?\0HQ-VtZ'WgL";Ae8hdH3hd+1?:f/9[!UrO.!Ts<L5?HiBTeIk_gB"&5ciS
%\'osD/d>^,Hi_L3LO<^=31PfsZKdEf?!n5A\_\)=EWMVY8u_o4I3n(hLD3Hldp[uKFjL8=gd"$Eje%_3CAYO52$T`dBSL21Q`6+m
%a)'TE-<0Pm[%R)Z%hP!$<@X*_P0<bE,5bU:X34[e"(erqVpVRd&RfRQ>LK2XGfe!9_T,:m1#]9_>(n'tW;3&;SLB'::&4*`;cTrs
%EpX1/TR6;3'GS>4Neg0/[muq1K$7%%>tYHW&E!#\8$A+Edh\'b&\6[A@^IA[OL3.UV2@C=#bG!QWJOkY)A0necf\,'Qt5ERP.HSf
%#D&9f.qOo7EE1ZJ>\ae-?(nc7%DeN)3RCrHq`/3e/^?EP0I$j7RpFuFA1"1HMpI?=mV/VU!EokL2&cU,J[F"mnddF&!-M9E#b^1B
%%a^=SXWXpm"YpG$X0ntK>dm"!oB%aM6(,;1&&66!UPpU_96S*M"k6Y'!>7L?HaQj`?Yq3H0$l:=lN.#<TH4pB.`qnJ]/,e-ZBJmS
%gF#VD$UdHN66H&AmC1-9DH\?''r9p8U7J<,R[OE5:DdO2q._MLf"`"Yk.T5Z&]?Sg#>rL6d"g?f-6FPUUm$BX&!a8K)U273n\%DD
%nP1;NiLOnQ:+kMP\GZQ4,^^(fQ3tVeanC\J!?c5mUpI;Pl:<\qq8f$m960(1P.KK1=-aT*(m^$"^.";?LWQ]a8hBKMjl@NIeP@&Y
%c_>WCN'G^a0!GG3U&BoZXdjF)R$QnI+PZ6#`R"M</rD0eF@X/#3UbiZKm3Lp%2Z#JM:]+0d/.&I#uOcj#R;kfYocOf^Vr4k-m[(3
%7+K:*m%f8EecDTj($aW+7\BBl$^E_E%0?T-S]2gQ&WA1Nj5gm0e9AZ.!2W&=>U,9*XM'N\5822E`j^#5>\M9fh&_M9Y6$S8643&7
%TosML$,3SpLs5puc==0]9's>C-N`j*^-1+p>%.W(j+8o*\t5W1#-)PVPu[Zgdt<85g_c8-\@lK+#puEEILVR)=hg<_'m]XEVlCF8
%+q.?k$ek")^>W`7W$Jtm^=IqF<Yf[_aa1i2Zkeks$&&]e2'iV3SKL&.!mP870UK`,I]Ip[,]P2klul"YK/a"1[_X6%`6,=gWr@/a
%Eg*=WAi=BBs)Fbi%9s]]5eO<cIW=N&[AN<HN1C]Hg+LWd(IKWUBY,)gj24QR@(+75ZEmh!\nm]sQgLNDP+hS`]&[S&9;3#,LmT8T
%V)cm.4+X8%2Uc5)e!Vfr'giY3bA'cCnqub`&5`MN9UG]_2U_g16Ya1H1L1PMcoD3,B<8*<CL`bbQ)9HR<H"m(b]F/']$t<&"D><q
%A\&"#?)j;F@CKjG95pb$>F3m&VG"7iCG;.*FD8p?8^;ElbB-<f]!Q%[,Vr`[10p&!?.q&>P*mq>R4cU?K=4I?jK+12;sh'7b]HE5
%?.q&>Ou$Ct10p'2/o@"/X0oN4(Z/q1VTX9>/CUHBFHO0qUC(8'$dd$H<]*jj5_;iSS*:!=VG#dCMkF*D,6XFrYY:BMdj6QoV/Fa.
%0%0tlkY2L?1L6H;0&ZJ`dm7U@NTniG=u9j)S>]RDmBC<KHF]`V?;B"O(QW030.1A_9093sZX.N_<1C-5p5`?02cPFZ%^[nT`M%@X
%Ic!t*0/g/C/F*K2hk;"TZ<jQ;?5fm]b>D%H0=*7rV3pr(QM$E3p!V'1_6'qF0+HKj/NC.ERTV:GWlo^&B"\m^06#sC)e=\7]snMl
%Tk;!J#L.QdB"`k/]qfMY^a'nJFX"D,0'gKF)fo.8Y2:t#p#7#Ll\2gRJBW=2gNinSXg3^c06fE&47h.;B"b!W]jN\9b50J25q1e_
%1I=G+AZf^\+<X]@)?jF>!,90#A\J:'?c"R*JhpcN11,X$0>YjKYd1>*Jp%f!WODVcQhc4MMTecWV>(S./-CVT%$%47a^@=G$YCX*
%=YL4@^&L(>?l$uO_p!oQ<lhRSe;1q]*"q4Vm@hmbQo)lE*saS16Et[HV='cOq+nSaH].3#gRB'=Tkaq."F==:2Qe*R'cX56\_pPL
%`?L0l_]YDegkUS$+WO>fdUo\+d:[O*LEMQjV>+_PQ=8:dQNV!u+BLc5/;m]FAJPYTBpu_jDH#+shl-'NZ8SWB"(tc=,+qUTbUpFi
%p/#Ts;JB7Y<K2pT"&2`5Fr2oA(k$Cm<;])MU4_bU,o#<>j_K>pA6Eil=LRi$Qkk<4MOp>bZ1EIeFO(Ye?K@X2-SR"S5>K!X7t>\/
%cf?DCL-W/JK?NKEfZdSAW+1&Y=a@5%Ig'k,A^:cFlVYBH?]gp<(?970C1QR`f"-3m+F-\*PCW#XPHbC#XMtc?FdJ1%:_)Z`PWD&X
%4e<'G.9;&2-&tlip^e=d<5NE`FC!\[!R4"oo@:)+PMS:Yfq`%@e:.)!3h-C=d9CN"GJ<i^[O+*[Z!%<hCu^7-&SW*f7Mn\"+YsbG
%(GW!gI_opgMWSD]l4RrNRbAEPG7;6Oj!141EOH<-r)d-hY+_d5f8;Erfhg6.:nb]W/<Fa7e8(r5ChTsq3Z[M<Q3Ki'3afCif/*QR
%qheVb5ae^b&DNJ!Y,N'b'-hdfE]+i:L+TE:]U1ktP9SQp2=9QAj8u[Ek7sSF@p0+>0N7PkMQ3q`V/ofF(j[a68Z-]]P1+N2cKd_8
%BT0EG*T6ZeITctC,>3%*MJ&.e`D8#<CWEO9FP9+TZ\kILhJTY,1ftn)S^elgB]lH\:#>c*=FY#[MKh>?"_?,Ii&\W+r+M7>iKnh$
%DQFPXS[Qa(q=fT>TZ@X)it@>S%aUJU69qJehe=WSVYO7pofu\VPUHAX:_'>NMNd>m+"@qk_?r1JR6?@>bGHh2LrXd`Yd##PkIpeh
%V*dMUdUj:=(5ipcbp]>=+u*W*#t`s?G7)J,beb9X%i24\$QcrnC&0W;pF`3Ip0ak!Ep4'I-p9H%2KR'sIL?$ns&d*[NGFt88Kc#1
%J_R<A"D^jW<au[h.o_J[=!7L>/QlN)P\'WjUm"&_?D?<F0NVXM&3cX6,FHAbi^=6SFiui28^n<qKkd'U.WL+m\R'Mr+[gr,J#Aj5
%-)"Qh9f8t5?Xh::%2tV5V'YfN=FsNh8R7en.<*o3W:fOHFseeH'Jn<=a6C'1m^GmSfZ<6&M6%K[<FKNK:0(E3g8<t0N$Lo#e75#%
%@^>SU:<eDBL]mq=!g2#RLoCn*&i9.&A1%(`T1U>c_f\h=4GT2qYIMuF\Pm+1$]=$7H%A.cU,N@Ip7EcuVA43?NUqOs3MuIU)d[)E
%<2VireDXQgg5+-K6o6U$#aDD#6UR+dL",Po-nQfP<!`^B3=GtO72"5GQ1&nV=)GM8G<%TIeMe>C'b7aT=WMMil_,$EOH[[7!KGf%
%b3RNp]*Cmu"U%G7]rLbXKrl)F9gJ!'&L^'8"=o1'@4q%T]"G$Wg!j;lPLTc64_SmsYGYQ04"tHL24uF^&VQ]k-oLO#%<f,UH$`V<
%4b4gM*)MLcF4AE@[uc+Z-*>=YW_u_R2!QoaC?5>VHnJ5O0)HRY)Da.WM:-`TUTrQH@"^eaB((mdCT;8#Tl/4'8,h2s3]?8fA-*@k
%@*@I@KMA+J3Td=*rBBjJMhQcqY:StgkI&YJ%4EPtYA:n;Bnf2WQRVW>OB'Y()Er39L8m.+c'+[2;B13F6;-"34Z#-#!0KBME^8,j
%W,rna_SlWkct;LW+]@06`hm)7#D+$g>hY9RTY'<t:&1A(quSt%/:<5s.1RZOUk`U//ejeP"c:U>UpCso8]._SRZWT5QZhMIaiN),
%DB@W\XqLmmUbPT#=0W%6iuAe-7^VJCJ"_t':qE72&3jZiO/Mnh.*+HJ`.YVD65LD-"G@PPf$08%=Z=j$Viom1(l1lmP5P`J\cAjl
%I)M^]Q<e2/OCo=?;PG$A2,ed-Q:<^3!:S>qDH^le()/`QASPuBa\m`bFBU3J<:Yu`*i@?09RK#eP%!(>SHM3`e>I9tVV-(&03aZ(
%pF9q95!lUA_4?k[,F>IPEJtn#aB"@a,GV*2gW2Z#A1:c4jK[C5HfS9c1E@\V;PADqr'%t6[e"]A8'$9`8K]*Reh,E+H[7TTVhM(m
%P#Q$kQXZBCad3*RHfp$%ncCYj@"M6G>tK&*Y4=qso'/eCF0#!ec5c?WMo.q4PKc&T*-NqPF\ptd10@ATZKbEt8Jat#R5o=C23hOX
%8_C(ST?l-UaH8585<Xg[=d`;O4n&]UWpnI^"h`*bV:,NM:tFO2l+r?FlM3>$Jd+l$lk!uR[9sE:1W_f;W[?qBB3u#@f`=+*'ka84
%L82'o6#d/e7*eG,LApQE'^ImcHZTrr'b_1U1&+;#@TKk/8uj?8NB%rHUZG"kl[Z8.)+p_u07ndlhc,R38*ue+'2<3H8./$K#'?0H
%1!EPeH?NI=Bc?;7rZ_+AhD%>PC!!HrP2VIgZgaV\$GOh=\a%cfa[Q1`E%)_OD0Ni`HN(s7SuK-`U)01j_!_5\$#!^s'R>sb(1D<U
%*8lm3F"ZLu'+Y"t$:h>XRGhL0U&!jT<b[c]V>V_]-m@=tm7Es//=7]7c1##p+IDW?rHE+LBGXT1Rq'!`dETXoULbfc(7rLO4MIS:
%>n,ImGWcE[].ppS.8letJ7>\,g.8LbEP_Y[`)K@<3K[g;9n:LqI!&-[[5jAb2,!dOF+X1[d+W>3n8'$-2CCJr(%Y/'3C-_M9]MKR
%\__^;6i/)!-Cm[=)jJNQV:1eYS`kg<IJ`mPU/_hI?ki/=`QPPh51O62MITp3MQH1LIQ8IEB=@:3WBACgDc?i#Z@AXJ,De*J4@)[J
%I"9J8agK38Kq\=9P=./K**<;Kh\oUVgS.Troja"RM#kn;KdSB@fAs`,h8'1#iY/=q[7)GZ"I6K5VaXi[ijY0jBY%cU(D<H-(%f4`
%-m7+jd)$E<641Ml#O<oV9tM5)f2TdE4DrnlgP:pDKW[OgT9F/FJ]NT_^X+JUku[B>"M*gWm2:a(#CNO5L8R'()[-m(,)FD9lYhM#
%URFqKmdbTh>H$EUZ,M^>j@O[W@41grL\Yb/1^6O0Op]VXC:ERT/S^oP)]4oYA#/^!p[*]a",b1'iS-e_'M4:$Qlb8]HtZn(;>^'*
%-d##$S_-oUpa&,j"S5X<27t`P//8fVY;<liH3am(@iNh9*PDr,h<&+Sn/A\MIWPLDTa=`.%Z0%'7,$\2\,6lon"8DZ]d5'uP&&^s
%ZTFuM1t$!I(1*cJL$.`2hp'RoU9k]AUP.b+h'`D2/<#3RQEhfObC[e@86etMLP%`99Y^+2b!GAm?<q4Jo/]3gG&%Y'EdPJEf8.d'
%c[%q2cf+5^9i<-O;e"6gTmNX.Z1!fZi8n+_R].M$oLefc#>icS7BX+ais.r1<>>[M8sl7<%elLA[81+m#AE0=fl_Z"Dm7&$DL73D
%0>Ydt7MIXC+n5^l->K<BYUL>t2=tMF9=0BEKVG>[d]Pp^gd<C(c/BeEm9ZphND_ju.VU@FnOim3,ZZ,-YVLsSX9UHm4Z8uk`%.J,
%W6/+\U(^3L*WhrkS<:jIKu!oqMOe;UQ%D2UlH'MfUAcR63'2Vid@j;GW5CX>((E]+iQu#2D#'M5M-1J=<^Lg<"7q,14PgUO`IQMV
%_Ki:%?"B?$C3<84V":R,F,__4oPpTZq.m;f!]KN\jSRie)dL.ec4GGkqRC\1:rI*PKW)Ta$G1G7U)'g-mcpm(-gojC!e%EPrR^8\
%h4=B%O8\gfs%0N$2#LtrS75J/GGU@hf4WU_2KjKf6G`:,DI]o"F$CfZ!GD.o"T:7%K"_@*..K0a)ZGsFG-o?L`nf4]:CX!bkqM)H
%[D/ou/l?C;32h%,=UUB2p(;4K4-j%m+D\K>[Nj5=DFJKJh.'S:W)l>(,/JD/1gf$^&'ps_#V?<P]urN^mG]O;9oJ>O+i\c`\n;WK
%eIZ2T/j[#H7_GI%"Z^6kbs5SHY4oe@pN#C`Cf50;Sj)_m1s4--L2"8CM`$1']h;W-^O&Q.G7WiTTGtj9]uT9Ia6e.$^3bP,kS:4H
%9MW[34&"@erpPE/k.:j=iAc-*3-&8PXm6])AjPUs/Q^JrLoMJAGDX6`^#Bj3*S(Y!0>D58$R3^E+ueH9D[$<I&Kp[74*6j,/r*`'
%^]j+p]M?2>(2[Jp]c@Z/dn8(.Z&MAD!j-/';;CGAb&mBoI<aZ3n%U^J6.0hm6\=;%'G/q#">L1<DKE+ghDoci.OH9o>sF&MLo:A!
%RXcej5bO"!On=H[!5feQL^8h0pK.L65onJW*Y*eB([p"r$S!2sa&B"*G]8^4'bAk(fW65;f&%UlN4s3Z1o8W/6!:%:CUU0`E4qSa
%*Sb.)V8I&HWcV?mj7Y%LUO+s4Q,dH%?)<1^bA].t%amKBR7oTMVkse+CSqJ[CA*.HE*,qA_SJM^*-Sqb4UV$q%*PY)g#/I=Uc$b.
%;;'n,2VG=-C9h7kNNs^pCk,@u..:.o@'c8;84tj/ap,d>9Y6K"l!Q$sJ9SaA%"olS-69CY(u/:9S4bnRP7G]LanK2k@6l%(>LHrR
%V)mkFd3R.KGJQH;[)_!>iqIcTeFOkI%.Y0=Ro/V:p-]dCa:\3NO`:?iYBpfpM5<:Q9)U-;JI#;%LWDU"$JD(I;l-EN&;eEYD!^k4
%GgBaem[<=3,jCQ;9%s1p;g:W2CU4-c#?]s,ZLqY0^BF;s^[\i'kD+HYA`25XN!K%<]4PE$me*oiM?@e3ogSB6X!UP.3LbF'malrp
%]b8q25K51mm[S<;IB>As_Vg[bHA@LW#d2*P<coBajeIpN3hVU2!CQ7rJWBn$<ksLomIch(If221%alH$)XNn=GkNFbg?mJX95qXp
%oMssa+J!ouGkM=7Ji7Mk^&m-V^R!)kRgE7/WL^JMg[l[ZgUMf7]M/lX+3-P0&8pTRs1,T&O#\oIYhM,4Z%lc/4!f+?@ceh(UcG<%
%GH]mMHT'kocX,b(PK0_\Z<@2>X1h0BgpoD#Sb%H-@H4fW?A%S2+*')gC"J8:d(8pcRjQ^V*2qFulLbX]^gWfEKIsCZ_!n`S(="'j
%Bq=/C`=8t+j9DNZPIU=aQ9'!&+S'siR,I$"ZicQY0@q=!E$_5oFh/0Fm9O&RTR=`=!:=9?q_fTn1TZILj'$4UT/1ED1%QGk1Lo@7
%4e0$%?$d\/M%n"SX+?eeR7C?uG`Q,,#h?VQOrFUfA*+4_B)Von1TS>LH`PVTE,<S=gK-LTTRQ6Fh^7DuL7`(l,'rr@nVWn/^9KgQ
%MRf.-s5dE##L\^>E6c%b$c[&740C%2U^Q4@?g`Z=P>:V;oE2HlYm0s@Z-NkuAETKS)]gq75BSp2fsjiFdu7)a?TP*Ti&Ts1gs\T/
%cQ)j5#k^<AjXSrVS;56IlRcj@qJIB`M$QW*__C/=Fp!e>5=*T<C2hGRlI7%6[U\1].ipWG5BbAb9utclhe0Y</NA"!]Re,IHZ7:>
%5rX-g3BNhRW#E_B5WK4lgWUn"@V.jr%BeROB:d1)o*!C-5<t]`CN.UkFm9PVgH"m'MT61UO593XKKRNK=!:il1FYdPODq2g.K6DN
%3uL(/.piB(?,K(]96n.2O;?4*)i2+P0D8_C4T:@)N67$ecN)GR>=dAH!&P0!fdYP*jh5D";f3(ME/24oh`b".,M']@Z6[$a([K6&
%>pX](]F@HbTm]+d9`&hC-RAL\3aI^S&6FWqdKH0f<%!p>3NJhROF\9gNN5EX#d]Ct-0VDC>C:P'N&)SDDh@%59b3KhhoqQW.BWGC
%:`6V@QHPj6AArI3k##H$L8Z;]n:1,W8G'U@O!GS3e9;d:DZCWO*OYD%K`mB)P4u6h>[3XR]9/VjqQQ4o/@]:'AGa!M!#fe[T_Hu;
%8VYoH6!hY:)&=L'rg(ST,3f1X-^m/U#`p[D,8*$M:#@+_HKQcoSV7t-M#<`3W@#hApq^rA]?6Na@KrfR3A[S2ES8SP(mcgUAm"3C
%$Jn2sr!o][ak_Z(%O@H$X(55:#$EB7%FigrP'_)4[*TU[l?QerQ6b`jLtRIr9ehciC=[RmW\siP9=6G)0DQqcZd<ij)*IA,Pm.3L
%J,e?^s6fX]ptLkes7Y@Loj<1BJ)C5EYeU$=ah)IGrq5%'rK#k9m^N5mJ):1i+9(6f5<f)Fo:Q$Lp]#i#s8),timIdds06@7dGQF1
%[\U4O&`g]0Q39MZYS`;TG)Ar#-`t.Ad.]B\B8mS1,pNGJ2K;4MZpP$''cOQcJI!F/((>ZP@PiJCWbApi\iE0.</1Dj329*Rh3:9M
%Nt+Rl,^P]PGYOQ/CT^1oVT?a.nP@nKL_1VI%-5.Hi7EFL`TMKD5OYGA]'Du2CKH%KW`5g4Y)&D)<D\F6[\0ki,#Utj&oeu(KIXi+
%5Oe)-[>#kH9IAc7G<@YGL#WAR&R#tCYa($/:NANk&FG]1PqY`^.ja-S7?+T<gsK+$Fc!VHW-kfP<amM@0dg'-4[=knX:2BABDe'G
%qHT;>LIQHP#ia**NsCem=P0m_8mI/FlZb=Id9[jhf<H@]S,S?R9j.T6:*MuP68%8o8Uf)[k[:lg7E_2G>,pfZ%Cgd<O`lRoe:Lh3
%)'FQe_bu]qEISO"K)uM)aF\XP3#=?QWpED&(".W>)X+i7=UWR:.D>h?fq,?9njEW(A1"&#'Zs?6bH++][BA,nRZn;UL>N?b(m^&K
%O\q-fB:hj!m9-c["<B#Q"L;,Q99pI:.1p5GNlIgCrV5)TR40/=mssC+N!F6^7=]Cs%*!-&.0395M);[Arg4=;h(0<D@MZ-&<.`W$
%aGPqn1@u'Ad:q,nLGlQ_!,;"H7hF`-e4V3UN/96^Wg*]Z5it]_3?_'%=Vomb#UT*Kd&=r6.$2*q;0+oA%jKZFL_UM'$=mh\.kktC
%CC1HVCI4h9I1?n.,=tn?M>mo*/))_M%Ohs/>F$9"TeDSbE'5O7Nh8NJGmpXsaeqVU]6/q%bOk'\T>HnLOX.0HM>6=;5:FSU;F1b"
%mnj3#-m_8)G,2+9/-\-mLC&5@3&X)GM'BKZlt\TjH*d7\gl`56M<fj@I/MEne&s(Dmj9DNo9,iaUhEmTZ^VZb:iTBTTnq29;Pkop
%.@Nqfeg3b[PG6$lBJ:m(QP9lU7Iu\:_+E%]UaYf3#0VE@';NC^BO#"'Qun9[N!:Y!_\/a15r^\/a/<B'bU#a=(8H;7d:d!r/hreg
%N#!)%+R%FId*)2k@^ML>D+fh2';K],dH&5Z?",XY(bI((Z\d)8`+X='1bURe+\!U^itA-C`+W=`1cR2s6RpiY?,^J`@PjJi/PD$L
%-Uu8lUWLGf=^i(&-4QE%0@%LL?",X[(p-Gi()*HcM:&?a>C;cX'Zj+3US=i75+Rq5d:=ISI[;$[BMVB`7OMIj8#+2RC2u-_3Ehsn
%btF'@5;Yi8);Y)7-m-VFUs04o\ch8DYV&5q-qNY:UhpLf^'#m&,rEL5g,9Y@'nR.RALp+sTm9'L$;r&iqVp#7RJkoGP-e,ML:JS/
%,j?Qh?ZAZcj<SGCOu-%!,#KR?09;8Q01dW2$C!g/,Uq_'<K\,_Uo7n&Ou/XRD7CTb5M-?X\0U=!qYlKo%nq<hk.,;!8,PJH(eReW
%ZcO36La5=PAZI=4aG6q1W]BL%6@s=@.q<'1@Ab1sBahuVjNY*/1]lM+Ba>Lqa0qVp+2G=V^@UCJ:3ai+O*0SlHGC2X,V'$p<SGAe
%h+A<AWcfWnpV/.\2+^u]+1fa/a[Y%=$hOKCE_Cq&V5P$B:=SW<$"h=O>:ci#%"\MjAWs!Fi;*NS+@%Ipe?u<.=\ZJgnL@MU2ashS
%$:;O<Q5.bIK+P&7[)s>N3Jt3\8/t^hG\GZ7#f]7e5^X^V,hqF'^tcVj`'<`9V2Tru?iD:$2g"cj@c-B;oSS*5<n@shDk\3&@TPfY
%'gX#oI9rLs?Z)+'W=A6Kk>@$_fjUqhCPm"f>lji5QIAL!g;@8l4alK(?0nbp,j\bAXb2/#WO\"^Fce_OPcL8OE#B1,ruG<p`5DD?
%ae!(-inseuEoRj63%mK,'WqTRXHDP>-M4"531Qo!m5)n*1Pi?Yb0:KOb_]!t!l7RW6R&K^@74E[Tq)IY"`!ZQ(-kaF>i`?0G71`*
%>M.Q(fodA;P&_5O!K:A\c:jq$:Dae7kVI!8G84"Im1S2VR6Fh`!YT1LOp@2g/M6M8+u`]`!L*f.RtI+,LGi8H?"I*a-kL6<d$"Yh
%/g.irB06>9,@aj(UmR[:fKi)#O<N:RdKui>BK<pIpEd0\LieXLgRoH:XAgiX=gW)k$Yi.nTlcquP,4goOX%]d/N@8-"To2pbM.q4
%oKtQ(r8-c^3SbEU<t-c?0(P"=[Y\b3j?ZXA^j@5;<qeP<__l<$Gj:_R/Xs#7g(=.W0JaE7*n6M0boq]KG>m(lrV]"uNN+FSa:7$q
%HN)23qEoX[49]8mPbh:*%Aj$&,%E$(1<AK;C[Hkd;Vo6r2/.(=W<.-2$V2Nb0ACpQgm<qOm'>5m\PBb1:Y"_sRo6365ZTX#DGW6@
%;m;R&`*Q?h)KLGZ[%_@NMRaABV.W_/1#%=`la$X$eK!fe9RY@IikoY27"UZOi7Ubj1b"A:1M?6uBI.tmDa!-<,<g3PXte]1YIFoE
%PgiDY-Se^X(=W],c^=LTdLL1K'';S=Xd5!cKa*M$(UNnClOto$bKc`pI!u!?&V20ghO=eO<G?'=a1AdVE!H<=Mf%1C(&@F[mg;OP
%Peih>OE.%H1+?#jJ<efe)^Bql^+!6N%9:PL#8K<pqiIgu=WoOs!s7!S:LHOc;$\tqQ-_IT(*QB&JX^D?$C*43-UO.uSg4k(Ki4Po
%+?'qg'9+4Nc8OO?PpsaaWD@'h\OB;M[jh6[G%CePosbD""X9_Dl7b]QVY<I3ifnq^JZ$-qq^K&(;EUE%OI+oFKaVkJP&84@Q(k@&
%G07Se\$?aB&+.bK92?Z*B=B=>75uS'd#n$g\-2K6fdLa?YVpKZ&pplcB$e1XBap@U-:B07;_S-dOB+OLBN6jb(9+Hj<-"G2-Hnb%
%/#PJ6#)?'%Kcp*@7-Gtk'['TKL1D^8ji!`rlU!#97=H.HC^(1oHPMHCQ;jgBrJNlpgDt;59t`p#)OkH02ILd8beYY%kRS_^\eR!"
%6ePo/PBGN@T+FuMVIgV_#t;Z2>ouV(=IaOU8h3"+E=#W.%]NWlP>%tOGlW@0nm,<LSNfXH@^4"-"Q3hLV^9a`g?hp@JpT>-]u5b+
%#D7+B+qX[@_$+(hHa/J-,^/6m)_pWr[KCUhC;`)2$Cn(34)<5L**0:?`4`7R7g;gGZk/+E&>\WNN4.jg`-spM)]8u,NgS[NF)h>B
%8&'^@eEXLDXp=]6=EDgGqd[<#OEkB$PZ.n$N"D&I712X[`If5)f$-PdqPa_%j)3Ab@^J7([ek]:67E[A1[6`3FP&RY>![hs\*#.m
%RbOL8V5oM\b0b>m5D$jSjIVQLRncjHnYo$"DDgP4P.F.P4]s"*QITc%7uK>8Wn@mGf8ho'SRk)@6f1`iL.^e4TY@EMe2Z!VX?;Te
%:q3$"K8aY</mc8og!%I[J_nXXprTXrYdr*<&%)Z()CR9Z#bb0Zon=<p?$%i3?j;kVim+7,L<Ak:6okJ9!:%Cn2YcUZFh20'$X9lb
%HX+4UW25Ho&jS%NR`euYTo`V8Mruk!P?m5C@C825RefapC\KS*+bn5,0`;K\!Xjo*:q!BuippK0KljuSZm/_3-*.C23n2'28E>AP
%iD=Nd^`R=<4^V+H+u##C-/@[?2UHe?)&OfH&J%f8!Cqsdk,:4:lTr&_M8csd+>6hUMGMF\+0an1UC?@_I(t=okoAT,DL[>IpAD<_
%g=Z:4F8>iJ)1tg6rD-:('tZt7rgM[aI0'O#jd:5"\ULE/=Id0J:$@pO8h_HsC)%k6hZ<(`m4/lV!Rt/[9ue;HV-?A2,T-h=9T^UH
%5;LutC!\k*Q;G^k3(^<_ELA5,l[l9,,PjZUU`>2rE-!GpODJcRl"*8!>`q$;V)5Fa!>QI\%fEW5%$GgSODj<7O?K=218mB+'e$K8
%\godT1?s"^]d0[V(/<9f_O"fT6t6.97ASSDm#]%U89i8X>pDrO_J!sjPPBM:%"`\Z3DP)ChaQ53@1P]lVMlERKb6rii[lIpW`c1-
%P4^k#,m;<uk)lI:jY'L5k>sOuF&tkI8uPs-R>KQm.3W^e0\]i':_W71s'KVEZ>3$p<;/!;5NJ]-eaal2>!dBW+[$,IYXYH7<OC7Y
%NN*PG^F,%9INi[bl:-BmH1Ch/Crab:(k!!L/f#%HoC?>\H5!Trc9IVY[.``]NkOXtH\!DD*Z!7H+F+>U"%TT^01H=u&qHe%V2V7e
%/lC+Y9Jr3#W\oU\d2pIZlWD+(_)#q&/2P"TI<gDK%I=,J<R40WJgHE!LDTqW.0u1#af(D5:Z`CP\ja.+1a?t=>"9Je]&IiL7FeY8
%<U4T7`13FS(i).>%#=W6BSKkF\n%oU\".%aH_mI0U[0qh_*q4;m)i;G$%%KZJ/5un(*TuA&9"G&$KJaLbi7bL[%NnYW\UlHgWqcN
%OaE,OGLc#W*qJ,10=6UIn1u28AFj^(93kbA2Nq/5RU$r,Mmra6X3c%R0pF^%k'\OU>)LfY:DTY5ZBd^A:\&Pg[gju@O'Wncb$9',
%aLS@7(X+t]JXM+\-MUstG1J`34*RD^M4/fOZDYZDkEsV".Q`jd[(?t@leUhLT%B<hY.EF#VX'90!\+krH,?jlj@gPO+M"gt2:lmG
%&6=EF<*&p8Z2a3[F'[1nQh8ddNM,T-Odj!@GCgpc<Ylr[SQk$lV(WQP>elQ:=Q+K1P(ppbB=K5"b+:7%Msu(0I]02gC1Ocf.G/.c
%cl;(;biHZ5fT1P`'V(SHk0(b18Zd\`8lchUES7Cf?sNbtjY\MbDU_E[ZQ-2@:QV-E@S&<5$.5'o^de]s%ASS]qkKP-UHJL'<ah)t
%3i6#<9c3M/]po=6VrcX9e',=IC6h6bmZEDhU??6[=Gf(BG\05R7?#3DJ[@HQaG9XKS9jqZCM$"p/1K,#gNU5:K(f=_@t8msmBBE$
%lLWISI7,,$j"JP[r_h!?`&Dl"m6O)N@,<)b?>7K")H*,\oUm@MduYV-,WcJ"5spgaO=3eYC^*0mNh@P*duYef89YtMK8+KG+XLem
%,8u_tL,>eO3G:t<m)!I-,8u_sLA6O:?_)p.UEOa`%I$8JWmd'@LkZVA+fOt31aMs5j/,j,Oe%4dA5pEZ#_-MEj8pb>&]eWV=\_>7
%$4SF?BLm.^14k6kU*2+%81,<RK8(@66V>^eC,@1@%4RcP3"7=+L7ACaBo%8+B@)b*1h6^uWC0*Wd#^^Rj9Q[PS;&"L6b:a.l83#_
%%4P%>&Ef]C,R4e#:.%Y#OCQb$&iA\%1o(6`kse%?du\B&,gW,,K4md^)H)QLN1_?=BZR`M:.*a4+_:fdksRm:d#dZPU]_,E:+rWr
%O?k_a#T>HV?#^e2SVHd0+e<;fE#R/aL=GHEU`0aDJJmlA[qSAk)H)EHPb92=Bh3@b,5(kk.L8d:#18ME1aE_Dks7\"duY>%,WQ;o
%JqbPF+\0n@j>>q:)NpVF1oDK0G3Lh/"V'^cL?,!Nh.]Cd)Ub0Ke=[tUBLiRN66A5t@Ap:&?`,&;d#`-%U]h4l7RMLKOCQ`Nn;QLD
%8V2\mTHV3d8.$9`NJ>*e*i:*jnk91!'uAdL#J18e>6L9-+ul%t5**Yg:Yi"#M-qS8#n]:)"LmV>\;(>2/qSG+i(bJ@\-VLGJcYRI
%)'_`uLf/Gk1kI-`9pEpU3`503PgF1j9&5;$R80"C-;%i0;:8q1c-O!6,oO$#V&VlP3Dh7lPS+S)&k"0/;9D1hOqX[Y<Vjp%jT!"O
%93%J!S6XC22g$@\HTVXEY&"2pEoH+N`23ZN/4X+0'#$<<njc-YQVl"2Wd,EBXq((RGhqJ['bdmrP>rXmXHJXaZm>AtpV%U==rln"
%+WGQG!tW'1@;gFH/*^Gto%C^f>d!oi!L[0!W+&ur>Rp:cP&E3'LCtn?PP2l^Yu_Uud$bG?QYRc!5`[bHjZU`)<?TcG-!'$`!864j
%d%jis(=[0Hi2=YaDOn$&Bo"?WZ<*OH"r"m'<`K&Unl3fu]ekP)B6K8;D>+g&40TZ6_!tdq6hSBrj1J:ob%fK2KKoPo:7)t:XC+U%
%AVEFK#744/RKYGW^[hLlV??X$MeN/%[TN`:4P4WkVop(c7ReV/crI.f@_ssck97oTDm"n);r;^PPU*HI[W$*D-bKEr.dM\0(FVPj
%JuXQjOi/LT/TQUkJ_O1h0hl^9ea1f:1t:1iE\_D>73(W5Gcapo*$le&6UCdhru2#TC:FKIGHA^,CK%p88'sH`+,V\a`Wr)8cTMVd
%C1Xa1dZ+l]5Xeg(^+-QbF_\js$tLUmVjA(#0pa,!X>ceNVA=jq4iT/L_WSZF7D&+^9E-q_H'!_*V(sA[pp4%%`5AN[:5Ea,LM(TH
%C8a(V_C2le[j_;)V6i57][D`XjtQC6m2A/AP2ODn+Nqq8>!o&jT(kc]f'Uaue%N#Ej`u==Qn!o$Q->h1qg\bB:&DBKo*fgL6IUpQ
%XL]tX2-H/sP)j3.UJb[ImDVRSM4\OhV*rDBoXrMF>74R"_]g=(atXR=T)Iq1jnJf4mf<Ccm\d2#f*?r?Y2,n6#j*d39l9Ed'6cUM
%-63fP)j1$eMh3<+S---)A"$e@ErMa2-QsH8,ak)g6qZ1U_Vn2nO7ls5U(<&Qe@Al3$`u>NaE\@?HeI\NcbT%T;@)jqO4sZ5JF^X<
%*Ej<sSuruRPq=O%H.Ag;2!5mXMARhFYSWqJVBo1]cF%=PWapun%s+mbJ-&AX6LD`t=%f+N$-Ut:j-+_`a;o@(;#d"1TK"j&IBTAB
%qDZCBL#f+Fis:bs[;o2a0HiCO.9*N7X#Q$U$GJ(`Q_6Xs)A3o7:1s'al^IAbQI$h]e\Mb#nGp/k*CL_HEcGP/1/Bu`C!4$33mq`F
%b[;O-;]Rh9$G_*#F7'n>$Sc&0>7g(=;\s0M+UV#fho4B4pWW*?`o9Os51)UmS!^KpAg@"bT:]`hj"g3."pL,Co"6(YNs%86g($h*
%IOtb@dFioATO0@_N+bBeU"2Yg`Fg4]1\QkI>_*GSUS_W&k[6iQ<r":^b0LLfj!j$XMt'Lr+u?57I+7i2lK0fH<CXE6MX]+=.>-`g
%%&og)8P%U9Dr:ab)etNHWN'"[)gB)?4nIgergumnrX:f*A7!SDX0e&uTTFC3b2nV4QIIlAIk9:_9-OT=Wpu'+Uh4hJ]8/MQYH.al
%MpS6o%&j@$fYOW["q2'l0:'se^b!mG".u-)lVOC0OU^h5/W)*ck9'h2DdgRLBAHcZ9JoNl5=)arP+0LPlpU=b+n14_LB.H<r7#9f
%7hKBBg[hcUiaBRoU%R+;,H9?om.+q\Zb4REWTDG:)uk4:Zt-MFej;472bi<F=.Oj`(N?!#U]St`Wb6;Nq_WKn#/i%O:u-D@kn0_@
%kAfEoc`a"#OIC(rilVIT?;N7CE;9]EYSjRt5$sC+PE3VEgeN$'"uM$npb.)Y9XbKU\fE5IUFBEVrI]H:GIJ!UiE/1F"8lUGD1=31
%0$dnlf?k8!^sqWs%=51!EbP+BJ0?R?3V\+VOCfYNdF:X!oG\KcrVX$lnsbes^G"*mZ1r-ZhOAg/j&NOF\S-h*m4)JL3.K66\k07'
%TS^5^?R-lZ5co4jH2AXg03Y#I;]T5lE"T^h!1K2DrRZ#UV=k\$Xc=/,p%<`c,/q"@E?Q$W9IS3g?hs%T+<_RDd*NG_oujAXb(j7T
%I7L,&39hl,nL1DY@&tZR>XlOoWu$D-cRuCG(DOjjQV4po\9G'A?\;CRL]***/\JcP:c*9>&(:QKNR*nUqfZttNd/F4\O)U($)QId
%;4]2hIc!VJmY`OSXt?ch75:mtXG&>0^-U`E2VYp!B2fiVL\GUuN9qRK2V0#?1\t^Xb.6e_o'Bh[$G*"&8_c(D5QuJ&l3#?\rGW@<
%`I!gcTLcALqg!fS:#E2qblsQU:o6!EASWOM)66U@"D0K1IKd@N+R184CH`2(Zt*2%M^[WIhW^@UqUkO#%j/"M2'u-O)@fA,kP[>3
%-PUD6XepbB2nU7f`+'-R4nd1m[%!75N"!dWere:F*]j/ff^FmQb;`QPJ"AUn^u4^XE]A=[et)>ER^u-d>lPZp1jt[jR)nbUdfAq:
%+hZR8l]5H1$uP:SW,Z`@8b7Qpq3KotYFL$9c_2<rq3JiKQ[lre1G$\dQ:'=!7YlI+BET4?Q]bKibjnlebE\Eea%`=MpP0+p>lM)J
%G_TM#>kku@!^XQ#+uoluHaCoEXHRTg7GfP"qK$"%9>IQul=%DSLb,"J9G8Q.=2^LdTh`Q-BnX#qEVsQ1n[c7j]!k/68TlkL&Xu)=
%fm(N+@4cY&$6<bmo5R6Z2To(%@r4ELq]].3Cl<`^r7Rc$lo$<5C);<I-!("k1i>6&*l'Z%*fD.\0KSV\i'tgh^o6MmJ4@6o*uN_P
%bt+$q%8?rBpNL#YQaRmdp4C)iF)X`TGK$(KZ5>91\pci)Kr1'YJ9njE!aaf.8,H@BJ%MZhD7dX%7,M%>M*3cS<W\R.?2DaKQ;gOi
%WIpO./cQ$[ZOTI/q6S=+U%$K!Ps<4$W)j:C/9"tm=be\cAp157IU#a57sd5Ak]IY?8i:U\1Ieo_As"N-5hIds"gk;eJ-YYL0LV\l
%..ZDkBHLLKHG@OrrNe&:p97XAd9s(4+-.Fl&lW7\)Y^QBUKJIY?@f+4MjI_,*9o&.0CVGUaFsBkUTp7;0C\s@?=54dSCVP.$)OKR
%UNo>$()Z<01s64Z0K^]%BY;,d,,m=N0L<@B"8)geCM!$Nda.IcmpY_fdpQm@?T\7o^o1G7JNKYK'C+-L<"R:M:`eU2Auajl5NFMW
%+hD^aiIh^)6;f?;"HgjLW9O$*SDR]NBBbl>h2BVQaJ,f'_31Jl^Jsiro.h%"2>nR";X8<W`pm">%=jEjpNlWHDV1XbC3(>gW?B]t
%Htk9E&'Y7aWSPDhi>tHFpG1S1X21cCipseK0b[\Ndp8##EHs,TrW]2t2rRHCmUpO7I'Xq'D9M\N"pO?M4*+Xd/"7JXkV7WBkMMrs
%0h>q^fRtf8(V>,_NIf3KYIb_E3^\:Ed-+&\R1NDP8NTk7#a,sU/C$CaZl"C.6lQReAiCNmMZ5/5.D((WV7cNul1.(t]u0*G>=bTj
%ZbEKGJktT:_ijM4Q%&u!(;pgL4j%QGHhNC^>=o8I&VlQ1e&mOnDt58"dE7?6LG"n(Oq:T35D]QiOK"SiLIdVNf`-h0`mE;Z(cAFs
%8G:lW9Q6_kiHL@Xb-eN!Q8X5iF1hu,8R[>i]aQ,L<?%,7U6lN\RMhlt32*l@&&.:dh!aPU&nE9\nq7'odB"M'Y+!071p,Qs(W<9U
%L=8qoQiSY4\g@U"9Vtta-Mg0S4kVbLk%,RD?9Z;[nmT*O'XK=LMA`+jR,KuEasQ"71IFq>=lK"!r^1hgQ7HQ9ZGub,Ypa4OJuXYh
%>VT`%.qXa/js1Vj-E.*[2*t-^c7#IZB6`V=[+2I6^hHO77r$`CfsmTD/4O,5b2:]9WV:Bsi.UNN#_/JD:>sMIf`9Dd3a-unDAs_-
%n;M6(+Bk/t-i4,(f*RH3)1C))`3jtue-qbDY'Ii9Z4h+LV3LNlV&tG9H!C(rH<Gb.pOV@b_GRnM;%kQ[?#'nZ80s';&>L^S`SjFQ
%R.q[I/uS:n<lJFMbkpb@:(rIaSq8OpAJ3NHNPq,DS5'i3BY7rD[70-22FPI:W!cX@c6Xh9/r<Wo,Dk!,Sj/$3$'K'?-2O)k1;117
%_!,R1AqQMLlD,iFX8E]U20[a!c7)\ll?D(MYt,e$)dBerB]t44JL>e-M1:<,RbqQI,Oi6LKmI6HjelR3ml=i-[+<**4A\c.FqjfS
%@7eYu+#`sN:Uef-0N\csiJEfgLf3Zs$']pK\+#?jq;IX4Fg,tPn7Bg8jYp1-T:Mcekn+TdVU?_NeK"h;\Hs?Y/S7B,9bQK`YnA2i
%V%1CNUSROZQ$F$un1@k22bo3Z[Wa6CEai^o3AG9/:(e8;Xpi-iR\WVc<TK)3\Z2.srXe=3>[8"U-OIu^_tKRH4(3"PaQ\%pGG7Yc
%Ij^X#%FT2]LVDD:CjC9H`[&M8?N%":RO+75L:5\IU$hV"JVhpd\Lm9n5590Q-odLdP7HLKj8P^h-qQrY+*/6q!O@*+-*=[@nV!'Q
%g^QAt,TRIiR`_h,FDPEjO5QM&e=lp8I\3@r8Q@EB'Ia!uDW)I]o>>P4ab,on5:jXpQR@VFVUh]C1Q3MClIX-j(h(EfM29LIOE+:t
%ec;WuH&JFXUqXh8Xe?m:HB!=J:pN3pH\7hsK'3UVl=Y?4MKh$uj*08EXR1D_5+eRJ?9Uc!#5]nP3R?3d*T;'SVO]_._Kudk#YR%/
%6'`SV8n1(Gl,fnGft4&0L)@okq$7X%7sLeKK],^Mon.PB#.Gg>&an/.GIm$p:q*0aM4E\fErAe`-V<XXG_)Vd>F16N-$qHp]j&ki
%+qkH]B)/1`I#@XDdS0)s`FjO.dFQKKabkg[Os#b=<,C(.?=b<7i8VPl;aD@M,&(GSQOi&cV/NH_gkL&'2JQhWC+f33blqtRh80'K
%*_&!\1>W6dg3L&%1P&mt0IuJYE"Kb"Up*R<:E`b8ck2;<nAIEj>oJ<:6VkDNC][KO%8^u^<)<_:1'6aDFb0q5F9tp\hke^iq,2o4
%B&)k4"lCJIPb.mS(#$&U?qT-q6i._\'ce1s!Qg&*RhZ6%,TIP-.0LfE8`Lg.jW;Bu4JU48TdDl;,[Ub`&-3cQfc^q8;2)>Uk0("R
%)soWIFd(csg2XZ@+[NJ%TlY-=[X!ZoZOW\2;u4*5$1!]NW.3mJTdmUeg^NVj+UfQmll68MTdja[>tYgj&4'hH@an(1<RQo<i\))b
%3\rT1,2I>rd@(qsIu&,2ao##S3$`OLhJ>RSX4?PEl]D$7+&%I;DV%"XIXuH>p.^0r=jns]p*!I^\m`#&&[r5^lII-V7Lge5Ymsbg
%^`@$IG4Q9V>_hXCDB;+\H<k^'Mg5RmG\F=<Rthj7jrm4=JqN3K-ASq.Sb>MY!8/88o1-;U4\@u`6PUKX48T/.IQA:SF-E:9*,G\p
%_*P;/^BiDJHonHB@T!q<I-r]N6jirTmQ=+qe$/^Or4M$PnMSRIW#<(Pa+/dKfQUUWcu0iAd&'[!)N@()8%JE^a:t$A&R>AS@;1]9
%Ual1o>WWQ>"_a;qDY#8M9[P&F`1puMNCV*t,\Bd!Q^hrOO"<]0*;g[HeYGYsMP8:i#^%17XY$DI%t!4a.P[Ntl1Kio&F)*P(/2Rk
%]VHb$=@;`UE^=s=Q+>FK["uMp;$<!iB@Njj2<Qd&J!MF%G:u/7,P/?M#>6nR8kOuPmSgAfj#n,8];qDV:BbTSPR:(8%?=!.F^/)X
%KI1/\7XD#8]kR4/d-fc(gE5i<6ut#6IGdp:n]Z(03#&ZU*:;%F#UPa8$A9;YGt'_+TO3%8hs^_Y+tsfAl6HuUYPSDKTpP1@%JkL2
%;Kqi<4elpV$'RclHVblOhi`D.-OJV["c671nE+AJbR5%9WTarMT\I2r/Nfdb--4tYb/uM4;mJpkN4t].jIU;UB#Bgi)m*@_*sBM4
%oa7Z%G88BT_I?/9-'+N):Kf=66<Xr7(<WBn=/fYpn"^-?SEdal!&3W(9Q@m;&.'sU?#UreQr[sY'8tbU>t.='*OMc7p^j;.GICPg
%KfHNjD`0`%c-goT/@bC!]&;jOl&BR^.1i`;eV5G38MoV0J(ARD)Va`u,/L\7&7"Co8GXZ>hNrY0P?\C(:6j.XCm9K0iS/]8UNFe9
%'VG7;PZepC*S$cZhW)4\cfjsn\E<9r2mYO8la?QBaZqLD&M6,?DiWU@3.G?Ko^.57#<;DO6`YRP1/7OaO.0WuKl9BFCp'gp`c:mc
%;Lh#7n86O+p28&tgAXh#OLoH$fcF2$oeKDl!!m>f>k45,fVj_p$"&A%d[oWQ/rFqiG^R&!:lSc0qX!?&6o.--$glbTS:?t8\gV_,
%pP4)4dG2oiT/aVI,sc6(9<aY"e=9.D/JkLN*hD54'If/$4n-fM-;o#e3PT/_<I^2I4,VNn3]nSiFqdES*JI>TP*?p4MNlF8T+mN@
%)D;a'*9ttALb'uQrj(Bt-;rQ=*3\;K3a$&cOd_XL1b=@qL:/7Z;=7:4aYWd>cN!12!Isct++JV=J+NF%?iKQD^OH+Mhd:m4rqdB(
%mN6rRn`rF<r50WVo_%D)roV7.Ie_6mT76S"-Y,F9qX<U>55k9Jf3eO;cTcpXoZP#Jq7hI<TAgs,qsG!pn9;YGc2Rdgb;N5~>
%AI9_PrivateDataEnd
